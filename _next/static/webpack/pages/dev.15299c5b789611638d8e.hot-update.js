webpackHotUpdate_N_E("pages/dev",{

/***/ "./node_modules/sql-formatter/lib/core/Formatter.js":
/*!**********************************************************!*\
  !*** ./node_modules/sql-formatter/lib/core/Formatter.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _tokenTypes = _interopRequireDefault(__webpack_require__(/*! ./tokenTypes */ \"./node_modules/sql-formatter/lib/core/tokenTypes.js\"));\n\nvar _Indentation = _interopRequireDefault(__webpack_require__(/*! ./Indentation */ \"./node_modules/sql-formatter/lib/core/Indentation.js\"));\n\nvar _InlineBlock = _interopRequireDefault(__webpack_require__(/*! ./InlineBlock */ \"./node_modules/sql-formatter/lib/core/InlineBlock.js\"));\n\nvar _Params = _interopRequireDefault(__webpack_require__(/*! ./Params */ \"./node_modules/sql-formatter/lib/core/Params.js\"));\n\nvar _utils = __webpack_require__(/*! ../utils */ \"./node_modules/sql-formatter/lib/utils.js\");\n\nvar _token = __webpack_require__(/*! ./token */ \"./node_modules/sql-formatter/lib/core/token.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Formatter = /*#__PURE__*/function () {\n  /**\n   * @param {Object} cfg\n   *  @param {String} cfg.language\n   *  @param {String} cfg.indent\n   *  @param {Boolean} cfg.uppercase\n   *  @param {Integer} cfg.linesBetweenQueries\n   *  @param {Object} cfg.params\n   */\n  function Formatter(cfg) {\n    _classCallCheck(this, Formatter);\n\n    this.cfg = cfg;\n    this.indentation = new _Indentation[\"default\"](this.cfg.indent);\n    this.inlineBlock = new _InlineBlock[\"default\"]();\n    this.params = new _Params[\"default\"](this.cfg.params);\n    this.previousReservedToken = {};\n    this.tokens = [];\n    this.index = 0;\n  }\n  /**\n   * SQL Tokenizer for this formatter, provided by subclasses.\n   */\n\n\n  _createClass(Formatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      throw new Error('tokenizer() not implemented by subclass');\n    }\n    /**\n     * Reprocess and modify a token based on parsed context.\n     *\n     * @param {Object} token The token to modify\n     *  @param {String} token.type\n     *  @param {String} token.value\n     * @return {Object} new token or the original\n     *  @return {String} token.type\n     *  @return {String} token.value\n     */\n\n  }, {\n    key: \"tokenOverride\",\n    value: function tokenOverride(token) {\n      // subclasses can override this to modify tokens during formatting\n      return token;\n    }\n    /**\n     * Formats whitespace in a SQL string to make it easier to read.\n     *\n     * @param {String} query The SQL query string\n     * @return {String} formatted query\n     */\n\n  }, {\n    key: \"format\",\n    value: function format(query) {\n      this.tokens = this.tokenizer().tokenize(query);\n      var formattedQuery = this.getFormattedQueryFromTokens();\n      return formattedQuery.trim();\n    }\n  }, {\n    key: \"getFormattedQueryFromTokens\",\n    value: function getFormattedQueryFromTokens() {\n      var _this = this;\n\n      var formattedQuery = '';\n      this.tokens.forEach(function (token, index) {\n        _this.index = index;\n        token = _this.tokenOverride(token);\n\n        if (token.type === _tokenTypes[\"default\"].LINE_COMMENT) {\n          formattedQuery = _this.formatLineComment(token, formattedQuery);\n        } else if (token.type === _tokenTypes[\"default\"].BLOCK_COMMENT) {\n          formattedQuery = _this.formatBlockComment(token, formattedQuery);\n        } else if (token.type === _tokenTypes[\"default\"].RESERVED_TOP_LEVEL) {\n          formattedQuery = _this.formatTopLevelReservedWord(token, formattedQuery);\n          _this.previousReservedToken = token;\n        } else if (token.type === _tokenTypes[\"default\"].RESERVED_TOP_LEVEL_NO_INDENT) {\n          formattedQuery = _this.formatTopLevelReservedWordNoIndent(token, formattedQuery);\n          _this.previousReservedToken = token;\n        } else if (token.type === _tokenTypes[\"default\"].RESERVED_NEWLINE) {\n          formattedQuery = _this.formatNewlineReservedWord(token, formattedQuery);\n          _this.previousReservedToken = token;\n        } else if (token.type === _tokenTypes[\"default\"].RESERVED) {\n          formattedQuery = _this.formatWithSpaces(token, formattedQuery);\n          _this.previousReservedToken = token;\n        } else if (token.type === _tokenTypes[\"default\"].OPEN_PAREN) {\n          formattedQuery = _this.formatOpeningParentheses(token, formattedQuery);\n        } else if (token.type === _tokenTypes[\"default\"].CLOSE_PAREN) {\n          formattedQuery = _this.formatClosingParentheses(token, formattedQuery);\n        } else if (token.type === _tokenTypes[\"default\"].PLACEHOLDER) {\n          formattedQuery = _this.formatPlaceholder(token, formattedQuery);\n        } else if (token.value === ',') {\n          formattedQuery = _this.formatComma(token, formattedQuery);\n        } else if (token.value === ':') {\n          formattedQuery = _this.formatWithSpaceAfter(token, formattedQuery);\n        } else if (token.value === '.') {\n          formattedQuery = _this.formatWithoutSpaces(token, formattedQuery);\n        } else if (token.value === ';') {\n          formattedQuery = _this.formatQuerySeparator(token, formattedQuery);\n        } else {\n          formattedQuery = _this.formatWithSpaces(token, formattedQuery);\n        }\n      });\n      return formattedQuery;\n    }\n  }, {\n    key: \"formatLineComment\",\n    value: function formatLineComment(token, query) {\n      return this.addNewline(query + this.show(token));\n    }\n  }, {\n    key: \"formatBlockComment\",\n    value: function formatBlockComment(token, query) {\n      return this.addNewline(this.addNewline(query) + this.indentComment(token.value));\n    }\n  }, {\n    key: \"indentComment\",\n    value: function indentComment(comment) {\n      return comment.replace(/\\n[\\t ]*/g, '\\n' + this.indentation.getIndent() + ' ');\n    }\n  }, {\n    key: \"formatTopLevelReservedWordNoIndent\",\n    value: function formatTopLevelReservedWordNoIndent(token, query) {\n      this.indentation.decreaseTopLevel();\n      query = this.addNewline(query) + this.equalizeWhitespace(this.show(token));\n      return this.addNewline(query);\n    }\n  }, {\n    key: \"formatTopLevelReservedWord\",\n    value: function formatTopLevelReservedWord(token, query) {\n      this.indentation.decreaseTopLevel();\n      query = this.addNewline(query);\n      this.indentation.increaseTopLevel();\n      query += this.equalizeWhitespace(this.show(token));\n      return this.addNewline(query);\n    }\n  }, {\n    key: \"formatNewlineReservedWord\",\n    value: function formatNewlineReservedWord(token, query) {\n      if ((0, _token.isAnd)(token) && (0, _token.isBetween)(this.tokenLookBehind(2))) {\n        return this.formatWithSpaces(token, query);\n      }\n\n      return this.addNewline(query) + this.equalizeWhitespace(this.show(token)) + ' ';\n    } // Replace any sequence of whitespace characters with single space\n\n  }, {\n    key: \"equalizeWhitespace\",\n    value: function equalizeWhitespace(string) {\n      return string.replace(/[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+/g, ' ');\n    } // Opening parentheses increase the block indent level and start a new line\n\n  }, {\n    key: \"formatOpeningParentheses\",\n    value: function formatOpeningParentheses(token, query) {\n      var _preserveWhitespaceFo, _this$tokenLookBehind;\n\n      // Take out the preceding space unless there was whitespace there in the original query\n      // or another opening parens or line comment\n      var preserveWhitespaceFor = (_preserveWhitespaceFo = {}, _defineProperty(_preserveWhitespaceFo, _tokenTypes[\"default\"].OPEN_PAREN, true), _defineProperty(_preserveWhitespaceFo, _tokenTypes[\"default\"].LINE_COMMENT, true), _defineProperty(_preserveWhitespaceFo, _tokenTypes[\"default\"].OPERATOR, true), _preserveWhitespaceFo);\n\n      if (token.whitespaceBefore.length === 0 && !preserveWhitespaceFor[(_this$tokenLookBehind = this.tokenLookBehind()) === null || _this$tokenLookBehind === void 0 ? void 0 : _this$tokenLookBehind.type]) {\n        query = (0, _utils.trimSpacesEnd)(query);\n      }\n\n      query += this.show(token);\n      this.inlineBlock.beginIfPossible(this.tokens, this.index);\n\n      if (!this.inlineBlock.isActive()) {\n        this.indentation.increaseBlockLevel();\n        query = this.addNewline(query);\n      }\n\n      return query;\n    } // Closing parentheses decrease the block indent level\n\n  }, {\n    key: \"formatClosingParentheses\",\n    value: function formatClosingParentheses(token, query) {\n      if (this.inlineBlock.isActive()) {\n        this.inlineBlock.end();\n        return this.formatWithSpaceAfter(token, query);\n      } else {\n        this.indentation.decreaseBlockLevel();\n        return this.formatWithSpaces(token, this.addNewline(query));\n      }\n    }\n  }, {\n    key: \"formatPlaceholder\",\n    value: function formatPlaceholder(token, query) {\n      return query + this.params.get(token) + ' ';\n    } // Commas start a new line (unless within inline parentheses or SQL \"LIMIT\" clause)\n\n  }, {\n    key: \"formatComma\",\n    value: function formatComma(token, query) {\n      query = (0, _utils.trimSpacesEnd)(query) + this.show(token) + ' ';\n\n      if (this.inlineBlock.isActive()) {\n        return query;\n      } else if ((0, _token.isLimit)(this.previousReservedToken)) {\n        return query;\n      } else {\n        return this.addNewline(query);\n      }\n    }\n  }, {\n    key: \"formatWithSpaceAfter\",\n    value: function formatWithSpaceAfter(token, query) {\n      return (0, _utils.trimSpacesEnd)(query) + this.show(token) + ' ';\n    }\n  }, {\n    key: \"formatWithoutSpaces\",\n    value: function formatWithoutSpaces(token, query) {\n      return (0, _utils.trimSpacesEnd)(query) + this.show(token);\n    }\n  }, {\n    key: \"formatWithSpaces\",\n    value: function formatWithSpaces(token, query) {\n      return query + this.show(token) + ' ';\n    }\n  }, {\n    key: \"formatQuerySeparator\",\n    value: function formatQuerySeparator(token, query) {\n      this.indentation.resetIndentation();\n      return (0, _utils.trimSpacesEnd)(query) + this.show(token) + '\\n'.repeat(this.cfg.linesBetweenQueries || 1);\n    } // Converts token to string (uppercasing it if needed)\n\n  }, {\n    key: \"show\",\n    value: function show(_ref) {\n      var type = _ref.type,\n          value = _ref.value;\n\n      if (this.cfg.uppercase && (type === _tokenTypes[\"default\"].RESERVED || type === _tokenTypes[\"default\"].RESERVED_TOP_LEVEL || type === _tokenTypes[\"default\"].RESERVED_TOP_LEVEL_NO_INDENT || type === _tokenTypes[\"default\"].RESERVED_NEWLINE || type === _tokenTypes[\"default\"].OPEN_PAREN || type === _tokenTypes[\"default\"].CLOSE_PAREN)) {\n        return value.toUpperCase();\n      } else {\n        return value;\n      }\n    }\n  }, {\n    key: \"addNewline\",\n    value: function addNewline(query) {\n      query = (0, _utils.trimSpacesEnd)(query);\n\n      if (!query.endsWith('\\n')) {\n        query += '\\n';\n      }\n\n      return query + this.indentation.getIndent();\n    }\n  }, {\n    key: \"tokenLookBehind\",\n    value: function tokenLookBehind() {\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return this.tokens[this.index - n];\n    }\n  }, {\n    key: \"tokenLookAhead\",\n    value: function tokenLookAhead() {\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return this.tokens[this.index + n];\n    }\n  }]);\n\n  return Formatter;\n}();\n\nexports[\"default\"] = Formatter;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/sql-formatter/lib/core/Formatter.js\n");

/***/ }),

/***/ "./node_modules/sql-formatter/lib/core/Indentation.js":
/*!************************************************************!*\
  !*** ./node_modules/sql-formatter/lib/core/Indentation.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _utils = __webpack_require__(/*! ../utils */ \"./node_modules/sql-formatter/lib/utils.js\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar INDENT_TYPE_TOP_LEVEL = 'top-level';\nvar INDENT_TYPE_BLOCK_LEVEL = 'block-level';\n/**\n * Manages indentation levels.\n *\n * There are two types of indentation levels:\n *\n * - BLOCK_LEVEL : increased by open-parenthesis\n * - TOP_LEVEL : increased by RESERVED_TOP_LEVEL words\n */\n\nvar Indentation = /*#__PURE__*/function () {\n  /**\n   * @param {String} indent Indent value, default is \"  \" (2 spaces)\n   */\n  function Indentation(indent) {\n    _classCallCheck(this, Indentation);\n\n    this.indent = indent || '  ';\n    this.indentTypes = [];\n  }\n  /**\n   * Returns current indentation string.\n   * @return {String}\n   */\n\n\n  _createClass(Indentation, [{\n    key: \"getIndent\",\n    value: function getIndent() {\n      return this.indent.repeat(this.indentTypes.length);\n    }\n    /**\n     * Increases indentation by one top-level indent.\n     */\n\n  }, {\n    key: \"increaseTopLevel\",\n    value: function increaseTopLevel() {\n      this.indentTypes.push(INDENT_TYPE_TOP_LEVEL);\n    }\n    /**\n     * Increases indentation by one block-level indent.\n     */\n\n  }, {\n    key: \"increaseBlockLevel\",\n    value: function increaseBlockLevel() {\n      this.indentTypes.push(INDENT_TYPE_BLOCK_LEVEL);\n    }\n    /**\n     * Decreases indentation by one top-level indent.\n     * Does nothing when the previous indent is not top-level.\n     */\n\n  }, {\n    key: \"decreaseTopLevel\",\n    value: function decreaseTopLevel() {\n      if (this.indentTypes.length > 0 && (0, _utils.last)(this.indentTypes) === INDENT_TYPE_TOP_LEVEL) {\n        this.indentTypes.pop();\n      }\n    }\n    /**\n     * Decreases indentation by one block-level indent.\n     * If there are top-level indents within the block-level indent,\n     * throws away these as well.\n     */\n\n  }, {\n    key: \"decreaseBlockLevel\",\n    value: function decreaseBlockLevel() {\n      while (this.indentTypes.length > 0) {\n        var type = this.indentTypes.pop();\n\n        if (type !== INDENT_TYPE_TOP_LEVEL) {\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"resetIndentation\",\n    value: function resetIndentation() {\n      this.indentTypes = [];\n    }\n  }]);\n\n  return Indentation;\n}();\n\nexports[\"default\"] = Indentation;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2NvcmUvSW5kZW50YXRpb24uanM/MTVlMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0EsQ0FBQztBQUNEOztBQUVBLGFBQWEsbUJBQU8sQ0FBQywyREFBVTs7QUFFL0IsaURBQWlELDBDQUEwQywwREFBMEQsRUFBRTs7QUFFdkosMkNBQTJDLGdCQUFnQixrQkFBa0IsT0FBTywyQkFBMkIsd0RBQXdELGdDQUFnQyx1REFBdUQsMkRBQTJELEVBQUU7O0FBRTNULDZEQUE2RCxzRUFBc0UsOERBQThELG9CQUFvQjs7QUFFck47QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2NvcmUvSW5kZW50YXRpb24uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gdm9pZCAwO1xuXG52YXIgX3V0aWxzID0gcmVxdWlyZShcIi4uL3V0aWxzXCIpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XG5cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cbnZhciBJTkRFTlRfVFlQRV9UT1BfTEVWRUwgPSAndG9wLWxldmVsJztcbnZhciBJTkRFTlRfVFlQRV9CTE9DS19MRVZFTCA9ICdibG9jay1sZXZlbCc7XG4vKipcbiAqIE1hbmFnZXMgaW5kZW50YXRpb24gbGV2ZWxzLlxuICpcbiAqIFRoZXJlIGFyZSB0d28gdHlwZXMgb2YgaW5kZW50YXRpb24gbGV2ZWxzOlxuICpcbiAqIC0gQkxPQ0tfTEVWRUwgOiBpbmNyZWFzZWQgYnkgb3Blbi1wYXJlbnRoZXNpc1xuICogLSBUT1BfTEVWRUwgOiBpbmNyZWFzZWQgYnkgUkVTRVJWRURfVE9QX0xFVkVMIHdvcmRzXG4gKi9cblxudmFyIEluZGVudGF0aW9uID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBpbmRlbnQgSW5kZW50IHZhbHVlLCBkZWZhdWx0IGlzIFwiICBcIiAoMiBzcGFjZXMpXG4gICAqL1xuICBmdW5jdGlvbiBJbmRlbnRhdGlvbihpbmRlbnQpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSW5kZW50YXRpb24pO1xuXG4gICAgdGhpcy5pbmRlbnQgPSBpbmRlbnQgfHwgJyAgJztcbiAgICB0aGlzLmluZGVudFR5cGVzID0gW107XG4gIH1cbiAgLyoqXG4gICAqIFJldHVybnMgY3VycmVudCBpbmRlbnRhdGlvbiBzdHJpbmcuXG4gICAqIEByZXR1cm4ge1N0cmluZ31cbiAgICovXG5cblxuICBfY3JlYXRlQ2xhc3MoSW5kZW50YXRpb24sIFt7XG4gICAga2V5OiBcImdldEluZGVudFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRJbmRlbnQoKSB7XG4gICAgICByZXR1cm4gdGhpcy5pbmRlbnQucmVwZWF0KHRoaXMuaW5kZW50VHlwZXMubGVuZ3RoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogSW5jcmVhc2VzIGluZGVudGF0aW9uIGJ5IG9uZSB0b3AtbGV2ZWwgaW5kZW50LlxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiaW5jcmVhc2VUb3BMZXZlbFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpbmNyZWFzZVRvcExldmVsKCkge1xuICAgICAgdGhpcy5pbmRlbnRUeXBlcy5wdXNoKElOREVOVF9UWVBFX1RPUF9MRVZFTCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEluY3JlYXNlcyBpbmRlbnRhdGlvbiBieSBvbmUgYmxvY2stbGV2ZWwgaW5kZW50LlxuICAgICAqL1xuXG4gIH0sIHtcbiAgICBrZXk6IFwiaW5jcmVhc2VCbG9ja0xldmVsXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGluY3JlYXNlQmxvY2tMZXZlbCgpIHtcbiAgICAgIHRoaXMuaW5kZW50VHlwZXMucHVzaChJTkRFTlRfVFlQRV9CTE9DS19MRVZFTCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlY3JlYXNlcyBpbmRlbnRhdGlvbiBieSBvbmUgdG9wLWxldmVsIGluZGVudC5cbiAgICAgKiBEb2VzIG5vdGhpbmcgd2hlbiB0aGUgcHJldmlvdXMgaW5kZW50IGlzIG5vdCB0b3AtbGV2ZWwuXG4gICAgICovXG5cbiAgfSwge1xuICAgIGtleTogXCJkZWNyZWFzZVRvcExldmVsXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGRlY3JlYXNlVG9wTGV2ZWwoKSB7XG4gICAgICBpZiAodGhpcy5pbmRlbnRUeXBlcy5sZW5ndGggPiAwICYmICgwLCBfdXRpbHMubGFzdCkodGhpcy5pbmRlbnRUeXBlcykgPT09IElOREVOVF9UWVBFX1RPUF9MRVZFTCkge1xuICAgICAgICB0aGlzLmluZGVudFR5cGVzLnBvcCgpO1xuICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWNyZWFzZXMgaW5kZW50YXRpb24gYnkgb25lIGJsb2NrLWxldmVsIGluZGVudC5cbiAgICAgKiBJZiB0aGVyZSBhcmUgdG9wLWxldmVsIGluZGVudHMgd2l0aGluIHRoZSBibG9jay1sZXZlbCBpbmRlbnQsXG4gICAgICogdGhyb3dzIGF3YXkgdGhlc2UgYXMgd2VsbC5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImRlY3JlYXNlQmxvY2tMZXZlbFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkZWNyZWFzZUJsb2NrTGV2ZWwoKSB7XG4gICAgICB3aGlsZSAodGhpcy5pbmRlbnRUeXBlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgIHZhciB0eXBlID0gdGhpcy5pbmRlbnRUeXBlcy5wb3AoKTtcblxuICAgICAgICBpZiAodHlwZSAhPT0gSU5ERU5UX1RZUEVfVE9QX0xFVkVMKSB7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVzZXRJbmRlbnRhdGlvblwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZXNldEluZGVudGF0aW9uKCkge1xuICAgICAgdGhpcy5pbmRlbnRUeXBlcyA9IFtdO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBJbmRlbnRhdGlvbjtcbn0oKTtcblxuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBJbmRlbnRhdGlvbjtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/sql-formatter/lib/core/Indentation.js\n");

/***/ }),

/***/ "./node_modules/sql-formatter/lib/core/InlineBlock.js":
/*!************************************************************!*\
  !*** ./node_modules/sql-formatter/lib/core/InlineBlock.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _tokenTypes = _interopRequireDefault(__webpack_require__(/*! ./tokenTypes */ \"./node_modules/sql-formatter/lib/core/tokenTypes.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar INLINE_MAX_LENGTH = 50;\n/**\n * Bookkeeper for inline blocks.\n *\n * Inline blocks are parenthized expressions that are shorter than INLINE_MAX_LENGTH.\n * These blocks are formatted on a single line, unlike longer parenthized\n * expressions where open-parenthesis causes newline and increase of indentation.\n */\n\nvar InlineBlock = /*#__PURE__*/function () {\n  function InlineBlock() {\n    _classCallCheck(this, InlineBlock);\n\n    this.level = 0;\n  }\n  /**\n   * Begins inline block when lookahead through upcoming tokens determines\n   * that the block would be smaller than INLINE_MAX_LENGTH.\n   * @param  {Object[]} tokens Array of all tokens\n   * @param  {Number} index Current token position\n   */\n\n\n  _createClass(InlineBlock, [{\n    key: \"beginIfPossible\",\n    value: function beginIfPossible(tokens, index) {\n      if (this.level === 0 && this.isInlineBlock(tokens, index)) {\n        this.level = 1;\n      } else if (this.level > 0) {\n        this.level++;\n      } else {\n        this.level = 0;\n      }\n    }\n    /**\n     * Finishes current inline block.\n     * There might be several nested ones.\n     */\n\n  }, {\n    key: \"end\",\n    value: function end() {\n      this.level--;\n    }\n    /**\n     * True when inside an inline block\n     * @return {Boolean}\n     */\n\n  }, {\n    key: \"isActive\",\n    value: function isActive() {\n      return this.level > 0;\n    } // Check if this should be an inline parentheses block\n    // Examples are \"NOW()\", \"COUNT(*)\", \"int(10)\", key(`somecolumn`), DECIMAL(7,2)\n\n  }, {\n    key: \"isInlineBlock\",\n    value: function isInlineBlock(tokens, index) {\n      var length = 0;\n      var level = 0;\n\n      for (var i = index; i < tokens.length; i++) {\n        var token = tokens[i];\n        length += token.value.length; // Overran max length\n\n        if (length > INLINE_MAX_LENGTH) {\n          return false;\n        }\n\n        if (token.type === _tokenTypes[\"default\"].OPEN_PAREN) {\n          level++;\n        } else if (token.type === _tokenTypes[\"default\"].CLOSE_PAREN) {\n          level--;\n\n          if (level === 0) {\n            return true;\n          }\n        }\n\n        if (this.isForbiddenToken(token)) {\n          return false;\n        }\n      }\n\n      return false;\n    } // Reserved words that cause newlines, comments and semicolons\n    // are not allowed inside inline parentheses block\n\n  }, {\n    key: \"isForbiddenToken\",\n    value: function isForbiddenToken(_ref) {\n      var type = _ref.type,\n          value = _ref.value;\n      return type === _tokenTypes[\"default\"].RESERVED_TOP_LEVEL || type === _tokenTypes[\"default\"].RESERVED_NEWLINE || type === _tokenTypes[\"default\"].COMMENT || type === _tokenTypes[\"default\"].BLOCK_COMMENT || value === ';';\n    }\n  }]);\n\n  return InlineBlock;\n}();\n\nexports[\"default\"] = InlineBlock;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2NvcmUvSW5saW5lQmxvY2suanM/ZDA5YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0EsQ0FBQztBQUNEOztBQUVBLHlDQUF5QyxtQkFBTyxDQUFDLHlFQUFjOztBQUUvRCxzQ0FBc0MsdUNBQXVDLGtCQUFrQjs7QUFFL0YsaURBQWlELDBDQUEwQywwREFBMEQsRUFBRTs7QUFFdkosMkNBQTJDLGdCQUFnQixrQkFBa0IsT0FBTywyQkFBMkIsd0RBQXdELGdDQUFnQyx1REFBdUQsMkRBQTJELEVBQUU7O0FBRTNULDZEQUE2RCxzRUFBc0UsOERBQThELG9CQUFvQjs7QUFFck47QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsU0FBUztBQUN2QixjQUFjLE9BQU87QUFDckI7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjs7QUFFQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQSx5QkFBeUIsbUJBQW1CO0FBQzVDO0FBQ0EscUNBQXFDOztBQUVyQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFNBQVM7QUFDVDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDs7QUFFQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrTkFBK047QUFDL047QUFDQSxHQUFHOztBQUVIO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2NvcmUvSW5saW5lQmxvY2suanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gdm9pZCAwO1xuXG52YXIgX3Rva2VuVHlwZXMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3Rva2VuVHlwZXNcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBcImRlZmF1bHRcIjogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfVxuXG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfVxuXG52YXIgSU5MSU5FX01BWF9MRU5HVEggPSA1MDtcbi8qKlxuICogQm9va2tlZXBlciBmb3IgaW5saW5lIGJsb2Nrcy5cbiAqXG4gKiBJbmxpbmUgYmxvY2tzIGFyZSBwYXJlbnRoaXplZCBleHByZXNzaW9ucyB0aGF0IGFyZSBzaG9ydGVyIHRoYW4gSU5MSU5FX01BWF9MRU5HVEguXG4gKiBUaGVzZSBibG9ja3MgYXJlIGZvcm1hdHRlZCBvbiBhIHNpbmdsZSBsaW5lLCB1bmxpa2UgbG9uZ2VyIHBhcmVudGhpemVkXG4gKiBleHByZXNzaW9ucyB3aGVyZSBvcGVuLXBhcmVudGhlc2lzIGNhdXNlcyBuZXdsaW5lIGFuZCBpbmNyZWFzZSBvZiBpbmRlbnRhdGlvbi5cbiAqL1xuXG52YXIgSW5saW5lQmxvY2sgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBJbmxpbmVCbG9jaygpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSW5saW5lQmxvY2spO1xuXG4gICAgdGhpcy5sZXZlbCA9IDA7XG4gIH1cbiAgLyoqXG4gICAqIEJlZ2lucyBpbmxpbmUgYmxvY2sgd2hlbiBsb29rYWhlYWQgdGhyb3VnaCB1cGNvbWluZyB0b2tlbnMgZGV0ZXJtaW5lc1xuICAgKiB0aGF0IHRoZSBibG9jayB3b3VsZCBiZSBzbWFsbGVyIHRoYW4gSU5MSU5FX01BWF9MRU5HVEguXG4gICAqIEBwYXJhbSAge09iamVjdFtdfSB0b2tlbnMgQXJyYXkgb2YgYWxsIHRva2Vuc1xuICAgKiBAcGFyYW0gIHtOdW1iZXJ9IGluZGV4IEN1cnJlbnQgdG9rZW4gcG9zaXRpb25cbiAgICovXG5cblxuICBfY3JlYXRlQ2xhc3MoSW5saW5lQmxvY2ssIFt7XG4gICAga2V5OiBcImJlZ2luSWZQb3NzaWJsZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBiZWdpbklmUG9zc2libGUodG9rZW5zLCBpbmRleCkge1xuICAgICAgaWYgKHRoaXMubGV2ZWwgPT09IDAgJiYgdGhpcy5pc0lubGluZUJsb2NrKHRva2VucywgaW5kZXgpKSB7XG4gICAgICAgIHRoaXMubGV2ZWwgPSAxO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLmxldmVsID4gMCkge1xuICAgICAgICB0aGlzLmxldmVsKys7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmxldmVsID0gMDtcbiAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogRmluaXNoZXMgY3VycmVudCBpbmxpbmUgYmxvY2suXG4gICAgICogVGhlcmUgbWlnaHQgYmUgc2V2ZXJhbCBuZXN0ZWQgb25lcy5cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImVuZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBlbmQoKSB7XG4gICAgICB0aGlzLmxldmVsLS07XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRydWUgd2hlbiBpbnNpZGUgYW4gaW5saW5lIGJsb2NrXG4gICAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICAgKi9cblxuICB9LCB7XG4gICAga2V5OiBcImlzQWN0aXZlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGlzQWN0aXZlKCkge1xuICAgICAgcmV0dXJuIHRoaXMubGV2ZWwgPiAwO1xuICAgIH0gLy8gQ2hlY2sgaWYgdGhpcyBzaG91bGQgYmUgYW4gaW5saW5lIHBhcmVudGhlc2VzIGJsb2NrXG4gICAgLy8gRXhhbXBsZXMgYXJlIFwiTk9XKClcIiwgXCJDT1VOVCgqKVwiLCBcImludCgxMClcIiwga2V5KGBzb21lY29sdW1uYCksIERFQ0lNQUwoNywyKVxuXG4gIH0sIHtcbiAgICBrZXk6IFwiaXNJbmxpbmVCbG9ja1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpc0lubGluZUJsb2NrKHRva2VucywgaW5kZXgpIHtcbiAgICAgIHZhciBsZW5ndGggPSAwO1xuICAgICAgdmFyIGxldmVsID0gMDtcblxuICAgICAgZm9yICh2YXIgaSA9IGluZGV4OyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciB0b2tlbiA9IHRva2Vuc1tpXTtcbiAgICAgICAgbGVuZ3RoICs9IHRva2VuLnZhbHVlLmxlbmd0aDsgLy8gT3ZlcnJhbiBtYXggbGVuZ3RoXG5cbiAgICAgICAgaWYgKGxlbmd0aCA+IElOTElORV9NQVhfTEVOR1RIKSB7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRva2VuLnR5cGUgPT09IF90b2tlblR5cGVzW1wiZGVmYXVsdFwiXS5PUEVOX1BBUkVOKSB7XG4gICAgICAgICAgbGV2ZWwrKztcbiAgICAgICAgfSBlbHNlIGlmICh0b2tlbi50eXBlID09PSBfdG9rZW5UeXBlc1tcImRlZmF1bHRcIl0uQ0xPU0VfUEFSRU4pIHtcbiAgICAgICAgICBsZXZlbC0tO1xuXG4gICAgICAgICAgaWYgKGxldmVsID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5pc0ZvcmJpZGRlblRva2VuKHRva2VuKSkge1xuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSAvLyBSZXNlcnZlZCB3b3JkcyB0aGF0IGNhdXNlIG5ld2xpbmVzLCBjb21tZW50cyBhbmQgc2VtaWNvbG9uc1xuICAgIC8vIGFyZSBub3QgYWxsb3dlZCBpbnNpZGUgaW5saW5lIHBhcmVudGhlc2VzIGJsb2NrXG5cbiAgfSwge1xuICAgIGtleTogXCJpc0ZvcmJpZGRlblRva2VuXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGlzRm9yYmlkZGVuVG9rZW4oX3JlZikge1xuICAgICAgdmFyIHR5cGUgPSBfcmVmLnR5cGUsXG4gICAgICAgICAgdmFsdWUgPSBfcmVmLnZhbHVlO1xuICAgICAgcmV0dXJuIHR5cGUgPT09IF90b2tlblR5cGVzW1wiZGVmYXVsdFwiXS5SRVNFUlZFRF9UT1BfTEVWRUwgfHwgdHlwZSA9PT0gX3Rva2VuVHlwZXNbXCJkZWZhdWx0XCJdLlJFU0VSVkVEX05FV0xJTkUgfHwgdHlwZSA9PT0gX3Rva2VuVHlwZXNbXCJkZWZhdWx0XCJdLkNPTU1FTlQgfHwgdHlwZSA9PT0gX3Rva2VuVHlwZXNbXCJkZWZhdWx0XCJdLkJMT0NLX0NPTU1FTlQgfHwgdmFsdWUgPT09ICc7JztcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gSW5saW5lQmxvY2s7XG59KCk7XG5cbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gSW5saW5lQmxvY2s7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/sql-formatter/lib/core/InlineBlock.js\n");

/***/ }),

/***/ "./node_modules/sql-formatter/lib/core/Params.js":
/*!*******************************************************!*\
  !*** ./node_modules/sql-formatter/lib/core/Params.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Handles placeholder replacement with given params.\n */\nvar Params = /*#__PURE__*/function () {\n  /**\n   * @param {Object} params\n   */\n  function Params(params) {\n    _classCallCheck(this, Params);\n\n    this.params = params;\n    this.index = 0;\n  }\n  /**\n   * Returns param value that matches given placeholder with param key.\n   * @param {Object} token\n   *   @param {String} token.key Placeholder key\n   *   @param {String} token.value Placeholder value\n   * @return {String} param or token.value when params are missing\n   */\n\n\n  _createClass(Params, [{\n    key: \"get\",\n    value: function get(_ref) {\n      var key = _ref.key,\n          value = _ref.value;\n\n      if (!this.params) {\n        return value;\n      }\n\n      if (key) {\n        return this.params[key];\n      }\n\n      return this.params[this.index++];\n    }\n  }]);\n\n  return Params;\n}();\n\nexports[\"default\"] = Params;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2NvcmUvUGFyYW1zLmpzPzFkM2EiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLENBQUM7QUFDRDs7QUFFQSxpREFBaUQsMENBQTBDLDBEQUEwRCxFQUFFOztBQUV2SiwyQ0FBMkMsZ0JBQWdCLGtCQUFrQixPQUFPLDJCQUEyQix3REFBd0QsZ0NBQWdDLHVEQUF1RCwyREFBMkQsRUFBRTs7QUFFM1QsNkRBQTZELHNFQUFzRSw4REFBOEQsb0JBQW9COztBQUVyTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCLGVBQWUsT0FBTztBQUN0QixlQUFlLE9BQU87QUFDdEIsY0FBYyxPQUFPO0FBQ3JCOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSxDQUFDOztBQUVEO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3FsLWZvcm1hdHRlci9saWIvY29yZS9QYXJhbXMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gdm9pZCAwO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XG5cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cbi8qKlxuICogSGFuZGxlcyBwbGFjZWhvbGRlciByZXBsYWNlbWVudCB3aXRoIGdpdmVuIHBhcmFtcy5cbiAqL1xudmFyIFBhcmFtcyA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge09iamVjdH0gcGFyYW1zXG4gICAqL1xuICBmdW5jdGlvbiBQYXJhbXMocGFyYW1zKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFBhcmFtcyk7XG5cbiAgICB0aGlzLnBhcmFtcyA9IHBhcmFtcztcbiAgICB0aGlzLmluZGV4ID0gMDtcbiAgfVxuICAvKipcbiAgICogUmV0dXJucyBwYXJhbSB2YWx1ZSB0aGF0IG1hdGNoZXMgZ2l2ZW4gcGxhY2Vob2xkZXIgd2l0aCBwYXJhbSBrZXkuXG4gICAqIEBwYXJhbSB7T2JqZWN0fSB0b2tlblxuICAgKiAgIEBwYXJhbSB7U3RyaW5nfSB0b2tlbi5rZXkgUGxhY2Vob2xkZXIga2V5XG4gICAqICAgQHBhcmFtIHtTdHJpbmd9IHRva2VuLnZhbHVlIFBsYWNlaG9sZGVyIHZhbHVlXG4gICAqIEByZXR1cm4ge1N0cmluZ30gcGFyYW0gb3IgdG9rZW4udmFsdWUgd2hlbiBwYXJhbXMgYXJlIG1pc3NpbmdcbiAgICovXG5cblxuICBfY3JlYXRlQ2xhc3MoUGFyYW1zLCBbe1xuICAgIGtleTogXCJnZXRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0KF9yZWYpIHtcbiAgICAgIHZhciBrZXkgPSBfcmVmLmtleSxcbiAgICAgICAgICB2YWx1ZSA9IF9yZWYudmFsdWU7XG5cbiAgICAgIGlmICghdGhpcy5wYXJhbXMpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgfVxuXG4gICAgICBpZiAoa2V5KSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBhcmFtc1trZXldO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5wYXJhbXNbdGhpcy5pbmRleCsrXTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gUGFyYW1zO1xufSgpO1xuXG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IFBhcmFtcztcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/sql-formatter/lib/core/Params.js\n");

/***/ }),

/***/ "./node_modules/sql-formatter/lib/core/Tokenizer.js":
/*!**********************************************************!*\
  !*** ./node_modules/sql-formatter/lib/core/Tokenizer.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _tokenTypes = _interopRequireDefault(__webpack_require__(/*! ./tokenTypes */ \"./node_modules/sql-formatter/lib/core/tokenTypes.js\"));\n\nvar regexFactory = _interopRequireWildcard(__webpack_require__(/*! ./regexFactory */ \"./node_modules/sql-formatter/lib/core/regexFactory.js\"));\n\nvar _utils = __webpack_require__(/*! ../utils */ \"./node_modules/sql-formatter/lib/utils.js\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Tokenizer = /*#__PURE__*/function () {\n  /**\n   * @param {Object} cfg\n   *  @param {String[]} cfg.reservedWords Reserved words in SQL\n   *  @param {String[]} cfg.reservedTopLevelWords Words that are set to new line separately\n   *  @param {String[]} cfg.reservedNewlineWords Words that are set to newline\n   *  @param {String[]} cfg.reservedTopLevelWordsNoIndent Words that are top level but have no indentation\n   *  @param {String[]} cfg.stringTypes String types to enable: \"\", '', ``, [], N''\n   *  @param {String[]} cfg.openParens Opening parentheses to enable, like (, [\n   *  @param {String[]} cfg.closeParens Closing parentheses to enable, like ), ]\n   *  @param {String[]} cfg.indexedPlaceholderTypes Prefixes for indexed placeholders, like ?\n   *  @param {String[]} cfg.namedPlaceholderTypes Prefixes for named placeholders, like @ and :\n   *  @param {String[]} cfg.lineCommentTypes Line comments to enable, like # and --\n   *  @param {String[]} cfg.specialWordChars Special chars that can be found inside of words, like @ and #\n   *  @param {String[]} [cfg.operator] Additional operators to recognize\n   */\n  function Tokenizer(cfg) {\n    _classCallCheck(this, Tokenizer);\n\n    this.WHITESPACE_REGEX = /^([\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+)/;\n    this.NUMBER_REGEX = /^((\\x2D[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*)?[0-9]+(\\.[0-9]+)?([Ee]\\x2D?[0-9]+(\\.[0-9]+)?)?|0x[0-9A-Fa-f]+|0b[01]+)\\b/;\n    this.OPERATOR_REGEX = regexFactory.createOperatorRegex(['<>', '<=', '>='].concat(_toConsumableArray(cfg.operators || [])));\n    this.BLOCK_COMMENT_REGEX = /^(\\/\\*(?:(?![])[\\s\\S])*?(?:\\*\\/|$))/;\n    this.LINE_COMMENT_REGEX = regexFactory.createLineCommentRegex(cfg.lineCommentTypes);\n    this.RESERVED_TOP_LEVEL_REGEX = regexFactory.createReservedWordRegex(cfg.reservedTopLevelWords);\n    this.RESERVED_TOP_LEVEL_NO_INDENT_REGEX = regexFactory.createReservedWordRegex(cfg.reservedTopLevelWordsNoIndent);\n    this.RESERVED_NEWLINE_REGEX = regexFactory.createReservedWordRegex(cfg.reservedNewlineWords);\n    this.RESERVED_PLAIN_REGEX = regexFactory.createReservedWordRegex(cfg.reservedWords);\n    this.WORD_REGEX = regexFactory.createWordRegex(cfg.specialWordChars);\n    this.STRING_REGEX = regexFactory.createStringRegex(cfg.stringTypes);\n    this.OPEN_PAREN_REGEX = regexFactory.createParenRegex(cfg.openParens);\n    this.CLOSE_PAREN_REGEX = regexFactory.createParenRegex(cfg.closeParens);\n    this.INDEXED_PLACEHOLDER_REGEX = regexFactory.createPlaceholderRegex(cfg.indexedPlaceholderTypes, '[0-9]*');\n    this.IDENT_NAMED_PLACEHOLDER_REGEX = regexFactory.createPlaceholderRegex(cfg.namedPlaceholderTypes, '[a-zA-Z0-9._$]+');\n    this.STRING_NAMED_PLACEHOLDER_REGEX = regexFactory.createPlaceholderRegex(cfg.namedPlaceholderTypes, regexFactory.createStringPattern(cfg.stringTypes));\n  }\n  /**\n   * Takes a SQL string and breaks it into tokens.\n   * Each token is an object with type and value.\n   *\n   * @param {String} input The SQL string\n   * @return {Object[]} tokens An array of tokens.\n   *  @return {String} token.type\n   *  @return {String} token.value\n   *  @return {String} token.whitespaceBefore Preceding whitespace\n   */\n\n\n  _createClass(Tokenizer, [{\n    key: \"tokenize\",\n    value: function tokenize(input) {\n      var tokens = [];\n      var token; // Keep processing the string until it is empty\n\n      while (input.length) {\n        // grab any preceding whitespace\n        var whitespaceBefore = this.getWhitespace(input);\n        input = input.substring(whitespaceBefore.length);\n\n        if (input.length) {\n          // Get the next token and the token type\n          token = this.getNextToken(input, token); // Advance the string\n\n          input = input.substring(token.value.length);\n          tokens.push(_objectSpread(_objectSpread({}, token), {}, {\n            whitespaceBefore: whitespaceBefore\n          }));\n        }\n      }\n\n      return tokens;\n    }\n  }, {\n    key: \"getWhitespace\",\n    value: function getWhitespace(input) {\n      var matches = input.match(this.WHITESPACE_REGEX);\n      return matches ? matches[1] : '';\n    }\n  }, {\n    key: \"getNextToken\",\n    value: function getNextToken(input, previousToken) {\n      return this.getCommentToken(input) || this.getStringToken(input) || this.getOpenParenToken(input) || this.getCloseParenToken(input) || this.getPlaceholderToken(input) || this.getNumberToken(input) || this.getReservedWordToken(input, previousToken) || this.getWordToken(input) || this.getOperatorToken(input);\n    }\n  }, {\n    key: \"getCommentToken\",\n    value: function getCommentToken(input) {\n      return this.getLineCommentToken(input) || this.getBlockCommentToken(input);\n    }\n  }, {\n    key: \"getLineCommentToken\",\n    value: function getLineCommentToken(input) {\n      return this.getTokenOnFirstMatch({\n        input: input,\n        type: _tokenTypes[\"default\"].LINE_COMMENT,\n        regex: this.LINE_COMMENT_REGEX\n      });\n    }\n  }, {\n    key: \"getBlockCommentToken\",\n    value: function getBlockCommentToken(input) {\n      return this.getTokenOnFirstMatch({\n        input: input,\n        type: _tokenTypes[\"default\"].BLOCK_COMMENT,\n        regex: this.BLOCK_COMMENT_REGEX\n      });\n    }\n  }, {\n    key: \"getStringToken\",\n    value: function getStringToken(input) {\n      return this.getTokenOnFirstMatch({\n        input: input,\n        type: _tokenTypes[\"default\"].STRING,\n        regex: this.STRING_REGEX\n      });\n    }\n  }, {\n    key: \"getOpenParenToken\",\n    value: function getOpenParenToken(input) {\n      return this.getTokenOnFirstMatch({\n        input: input,\n        type: _tokenTypes[\"default\"].OPEN_PAREN,\n        regex: this.OPEN_PAREN_REGEX\n      });\n    }\n  }, {\n    key: \"getCloseParenToken\",\n    value: function getCloseParenToken(input) {\n      return this.getTokenOnFirstMatch({\n        input: input,\n        type: _tokenTypes[\"default\"].CLOSE_PAREN,\n        regex: this.CLOSE_PAREN_REGEX\n      });\n    }\n  }, {\n    key: \"getPlaceholderToken\",\n    value: function getPlaceholderToken(input) {\n      return this.getIdentNamedPlaceholderToken(input) || this.getStringNamedPlaceholderToken(input) || this.getIndexedPlaceholderToken(input);\n    }\n  }, {\n    key: \"getIdentNamedPlaceholderToken\",\n    value: function getIdentNamedPlaceholderToken(input) {\n      return this.getPlaceholderTokenWithKey({\n        input: input,\n        regex: this.IDENT_NAMED_PLACEHOLDER_REGEX,\n        parseKey: function parseKey(v) {\n          return v.slice(1);\n        }\n      });\n    }\n  }, {\n    key: \"getStringNamedPlaceholderToken\",\n    value: function getStringNamedPlaceholderToken(input) {\n      var _this = this;\n\n      return this.getPlaceholderTokenWithKey({\n        input: input,\n        regex: this.STRING_NAMED_PLACEHOLDER_REGEX,\n        parseKey: function parseKey(v) {\n          return _this.getEscapedPlaceholderKey({\n            key: v.slice(2, -1),\n            quoteChar: v.slice(-1)\n          });\n        }\n      });\n    }\n  }, {\n    key: \"getIndexedPlaceholderToken\",\n    value: function getIndexedPlaceholderToken(input) {\n      return this.getPlaceholderTokenWithKey({\n        input: input,\n        regex: this.INDEXED_PLACEHOLDER_REGEX,\n        parseKey: function parseKey(v) {\n          return v.slice(1);\n        }\n      });\n    }\n  }, {\n    key: \"getPlaceholderTokenWithKey\",\n    value: function getPlaceholderTokenWithKey(_ref) {\n      var input = _ref.input,\n          regex = _ref.regex,\n          parseKey = _ref.parseKey;\n      var token = this.getTokenOnFirstMatch({\n        input: input,\n        regex: regex,\n        type: _tokenTypes[\"default\"].PLACEHOLDER\n      });\n\n      if (token) {\n        token.key = parseKey(token.value);\n      }\n\n      return token;\n    }\n  }, {\n    key: \"getEscapedPlaceholderKey\",\n    value: function getEscapedPlaceholderKey(_ref2) {\n      var key = _ref2.key,\n          quoteChar = _ref2.quoteChar;\n      return key.replace(new RegExp((0, _utils.escapeRegExp)('\\\\' + quoteChar), 'gu'), quoteChar);\n    } // Decimal, binary, or hex numbers\n\n  }, {\n    key: \"getNumberToken\",\n    value: function getNumberToken(input) {\n      return this.getTokenOnFirstMatch({\n        input: input,\n        type: _tokenTypes[\"default\"].NUMBER,\n        regex: this.NUMBER_REGEX\n      });\n    } // Punctuation and symbols\n\n  }, {\n    key: \"getOperatorToken\",\n    value: function getOperatorToken(input) {\n      return this.getTokenOnFirstMatch({\n        input: input,\n        type: _tokenTypes[\"default\"].OPERATOR,\n        regex: this.OPERATOR_REGEX\n      });\n    }\n  }, {\n    key: \"getReservedWordToken\",\n    value: function getReservedWordToken(input, previousToken) {\n      // A reserved word cannot be preceded by a \".\"\n      // this makes it so in \"mytable.from\", \"from\" is not considered a reserved word\n      if (previousToken && previousToken.value && previousToken.value === '.') {\n        return undefined;\n      }\n\n      return this.getTopLevelReservedToken(input) || this.getNewlineReservedToken(input) || this.getTopLevelReservedTokenNoIndent(input) || this.getPlainReservedToken(input);\n    }\n  }, {\n    key: \"getTopLevelReservedToken\",\n    value: function getTopLevelReservedToken(input) {\n      return this.getTokenOnFirstMatch({\n        input: input,\n        type: _tokenTypes[\"default\"].RESERVED_TOP_LEVEL,\n        regex: this.RESERVED_TOP_LEVEL_REGEX\n      });\n    }\n  }, {\n    key: \"getNewlineReservedToken\",\n    value: function getNewlineReservedToken(input) {\n      return this.getTokenOnFirstMatch({\n        input: input,\n        type: _tokenTypes[\"default\"].RESERVED_NEWLINE,\n        regex: this.RESERVED_NEWLINE_REGEX\n      });\n    }\n  }, {\n    key: \"getTopLevelReservedTokenNoIndent\",\n    value: function getTopLevelReservedTokenNoIndent(input) {\n      return this.getTokenOnFirstMatch({\n        input: input,\n        type: _tokenTypes[\"default\"].RESERVED_TOP_LEVEL_NO_INDENT,\n        regex: this.RESERVED_TOP_LEVEL_NO_INDENT_REGEX\n      });\n    }\n  }, {\n    key: \"getPlainReservedToken\",\n    value: function getPlainReservedToken(input) {\n      return this.getTokenOnFirstMatch({\n        input: input,\n        type: _tokenTypes[\"default\"].RESERVED,\n        regex: this.RESERVED_PLAIN_REGEX\n      });\n    }\n  }, {\n    key: \"getWordToken\",\n    value: function getWordToken(input) {\n      return this.getTokenOnFirstMatch({\n        input: input,\n        type: _tokenTypes[\"default\"].WORD,\n        regex: this.WORD_REGEX\n      });\n    }\n  }, {\n    key: \"getTokenOnFirstMatch\",\n    value: function getTokenOnFirstMatch(_ref3) {\n      var input = _ref3.input,\n          type = _ref3.type,\n          regex = _ref3.regex;\n      var matches = input.match(regex);\n      return matches ? {\n        type: type,\n        value: matches[1]\n      } : undefined;\n    }\n  }]);\n\n  return Tokenizer;\n}();\n\nexports[\"default\"] = Tokenizer;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/sql-formatter/lib/core/Tokenizer.js\n");

/***/ }),

/***/ "./node_modules/sql-formatter/lib/core/regexFactory.js":
/*!*************************************************************!*\
  !*** ./node_modules/sql-formatter/lib/core/regexFactory.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createOperatorRegex = createOperatorRegex;\nexports.createLineCommentRegex = createLineCommentRegex;\nexports.createReservedWordRegex = createReservedWordRegex;\nexports.createWordRegex = createWordRegex;\nexports.createStringRegex = createStringRegex;\nexports.createStringPattern = createStringPattern;\nexports.createParenRegex = createParenRegex;\nexports.createPlaceholderRegex = createPlaceholderRegex;\n\nvar _utils = __webpack_require__(/*! ../utils */ \"./node_modules/sql-formatter/lib/utils.js\");\n\nfunction createOperatorRegex(multiLetterOperators) {\n  return new RegExp(\"^(\".concat((0, _utils.sortByLengthDesc)(multiLetterOperators).map(_utils.escapeRegExp).join('|'), \"|.)\"), 'u');\n}\n\nfunction createLineCommentRegex(lineCommentTypes) {\n  return new RegExp(\"^((?:\".concat(lineCommentTypes.map(function (c) {\n    return (0, _utils.escapeRegExp)(c);\n  }).join('|'), \").*?)(?:\\r\\n|\\r|\\n|$)\"), 'u');\n}\n\nfunction createReservedWordRegex(reservedWords) {\n  if (reservedWords.length === 0) {\n    return new RegExp(\"^\\b$\", 'u');\n  }\n\n  var reservedWordsPattern = (0, _utils.sortByLengthDesc)(reservedWords).join('|').replace(/ /g, '\\\\s+');\n  return new RegExp(\"^(\".concat(reservedWordsPattern, \")\\\\b\"), 'iu');\n}\n\nfunction createWordRegex() {\n  var specialChars = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return new RegExp(\"^([\\\\p{Alphabetic}\\\\p{Mark}\\\\p{Decimal_Number}\\\\p{Connector_Punctuation}\\\\p{Join_Control}\".concat(specialChars.join(''), \"]+)\"), 'u');\n}\n\nfunction createStringRegex(stringTypes) {\n  return new RegExp('^(' + createStringPattern(stringTypes) + ')', 'u');\n} // This enables the following string patterns:\n// 1. backtick quoted string using `` to escape\n// 2. square bracket quoted string (SQL Server) using ]] to escape\n// 3. double quoted string using \"\" or \\\" to escape\n// 4. single quoted string using '' or \\' to escape\n// 5. national character quoted string using N'' or N\\' to escape\n// 6. Unicode single-quoted string using \\' to escape\n// 7. Unicode double-quoted string using \\\" to escape\n// 8. PostgreSQL dollar-quoted strings\n\n\nfunction createStringPattern(stringTypes) {\n  var patterns = {\n    '``': '((`[^`]*($|`))+)',\n    '{}': '((\\\\{[^\\\\}]*($|\\\\}))+)',\n    '[]': '((\\\\[[^\\\\]]*($|\\\\]))(\\\\][^\\\\]]*($|\\\\]))*)',\n    '\"\"': '((\"[^\"\\\\\\\\]*(?:\\\\\\\\.[^\"\\\\\\\\]*)*(\"|$))+)',\n    \"''\": \"(('[^'\\\\\\\\]*(?:\\\\\\\\.[^'\\\\\\\\]*)*('|$))+)\",\n    \"N''\": \"((N'[^'\\\\\\\\]*(?:\\\\\\\\.[^'\\\\\\\\]*)*('|$))+)\",\n    \"U&''\": \"((U&'[^'\\\\\\\\]*(?:\\\\\\\\.[^'\\\\\\\\]*)*('|$))+)\",\n    'U&\"\"': '((U&\"[^\"\\\\\\\\]*(?:\\\\\\\\.[^\"\\\\\\\\]*)*(\"|$))+)',\n    $$: '((?<tag>\\\\$\\\\w*\\\\$)[\\\\s\\\\S]*?(?:\\\\k<tag>|$))'\n  };\n  return stringTypes.map(function (t) {\n    return patterns[t];\n  }).join('|');\n}\n\nfunction createParenRegex(parens) {\n  return new RegExp('^(' + parens.map(escapeParen).join('|') + ')', 'iu');\n}\n\nfunction escapeParen(paren) {\n  if (paren.length === 1) {\n    // A single punctuation character\n    return (0, _utils.escapeRegExp)(paren);\n  } else {\n    // longer word\n    return '\\\\b' + paren + '\\\\b';\n  }\n}\n\nfunction createPlaceholderRegex(types, pattern) {\n  if ((0, _utils.isEmpty)(types)) {\n    return false;\n  }\n\n  var typesRegex = types.map(_utils.escapeRegExp).join('|');\n  return new RegExp(\"^((?:\".concat(typesRegex, \")(?:\").concat(pattern, \"))\"), 'u');\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2NvcmUvcmVnZXhGYWN0b3J5LmpzPzBmYzMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGFBQWEsbUJBQU8sQ0FBQywyREFBVTs7QUFFL0I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDRCQUE0QixXQUFXLElBQUksS0FBSyxJQUFJLGVBQWUsSUFBSSxzQkFBc0IsSUFBSSxhQUFhO0FBQzlHOztBQUVBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyxTQUFTLEtBQUssUUFBUTtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2NvcmUvcmVnZXhGYWN0b3J5LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmNyZWF0ZU9wZXJhdG9yUmVnZXggPSBjcmVhdGVPcGVyYXRvclJlZ2V4O1xuZXhwb3J0cy5jcmVhdGVMaW5lQ29tbWVudFJlZ2V4ID0gY3JlYXRlTGluZUNvbW1lbnRSZWdleDtcbmV4cG9ydHMuY3JlYXRlUmVzZXJ2ZWRXb3JkUmVnZXggPSBjcmVhdGVSZXNlcnZlZFdvcmRSZWdleDtcbmV4cG9ydHMuY3JlYXRlV29yZFJlZ2V4ID0gY3JlYXRlV29yZFJlZ2V4O1xuZXhwb3J0cy5jcmVhdGVTdHJpbmdSZWdleCA9IGNyZWF0ZVN0cmluZ1JlZ2V4O1xuZXhwb3J0cy5jcmVhdGVTdHJpbmdQYXR0ZXJuID0gY3JlYXRlU3RyaW5nUGF0dGVybjtcbmV4cG9ydHMuY3JlYXRlUGFyZW5SZWdleCA9IGNyZWF0ZVBhcmVuUmVnZXg7XG5leHBvcnRzLmNyZWF0ZVBsYWNlaG9sZGVyUmVnZXggPSBjcmVhdGVQbGFjZWhvbGRlclJlZ2V4O1xuXG52YXIgX3V0aWxzID0gcmVxdWlyZShcIi4uL3V0aWxzXCIpO1xuXG5mdW5jdGlvbiBjcmVhdGVPcGVyYXRvclJlZ2V4KG11bHRpTGV0dGVyT3BlcmF0b3JzKSB7XG4gIHJldHVybiBuZXcgUmVnRXhwKFwiXihcIi5jb25jYXQoKDAsIF91dGlscy5zb3J0QnlMZW5ndGhEZXNjKShtdWx0aUxldHRlck9wZXJhdG9ycykubWFwKF91dGlscy5lc2NhcGVSZWdFeHApLmpvaW4oJ3wnKSwgXCJ8LilcIiksICd1Jyk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUxpbmVDb21tZW50UmVnZXgobGluZUNvbW1lbnRUeXBlcykge1xuICByZXR1cm4gbmV3IFJlZ0V4cChcIl4oKD86XCIuY29uY2F0KGxpbmVDb21tZW50VHlwZXMubWFwKGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuICgwLCBfdXRpbHMuZXNjYXBlUmVnRXhwKShjKTtcbiAgfSkuam9pbignfCcpLCBcIikuKj8pKD86XFxyXFxufFxccnxcXG58JClcIiksICd1Jyk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVJlc2VydmVkV29yZFJlZ2V4KHJlc2VydmVkV29yZHMpIHtcbiAgaWYgKHJlc2VydmVkV29yZHMubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIG5ldyBSZWdFeHAoXCJeXFxiJFwiLCAndScpO1xuICB9XG5cbiAgdmFyIHJlc2VydmVkV29yZHNQYXR0ZXJuID0gKDAsIF91dGlscy5zb3J0QnlMZW5ndGhEZXNjKShyZXNlcnZlZFdvcmRzKS5qb2luKCd8JykucmVwbGFjZSgvIC9nLCAnXFxcXHMrJyk7XG4gIHJldHVybiBuZXcgUmVnRXhwKFwiXihcIi5jb25jYXQocmVzZXJ2ZWRXb3Jkc1BhdHRlcm4sIFwiKVxcXFxiXCIpLCAnaXUnKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlV29yZFJlZ2V4KCkge1xuICB2YXIgc3BlY2lhbENoYXJzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBbXTtcbiAgcmV0dXJuIG5ldyBSZWdFeHAoXCJeKFtcXFxccHtBbHBoYWJldGljfVxcXFxwe01hcmt9XFxcXHB7RGVjaW1hbF9OdW1iZXJ9XFxcXHB7Q29ubmVjdG9yX1B1bmN0dWF0aW9ufVxcXFxwe0pvaW5fQ29udHJvbH1cIi5jb25jYXQoc3BlY2lhbENoYXJzLmpvaW4oJycpLCBcIl0rKVwiKSwgJ3UnKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlU3RyaW5nUmVnZXgoc3RyaW5nVHlwZXMpIHtcbiAgcmV0dXJuIG5ldyBSZWdFeHAoJ14oJyArIGNyZWF0ZVN0cmluZ1BhdHRlcm4oc3RyaW5nVHlwZXMpICsgJyknLCAndScpO1xufSAvLyBUaGlzIGVuYWJsZXMgdGhlIGZvbGxvd2luZyBzdHJpbmcgcGF0dGVybnM6XG4vLyAxLiBiYWNrdGljayBxdW90ZWQgc3RyaW5nIHVzaW5nIGBgIHRvIGVzY2FwZVxuLy8gMi4gc3F1YXJlIGJyYWNrZXQgcXVvdGVkIHN0cmluZyAoU1FMIFNlcnZlcikgdXNpbmcgXV0gdG8gZXNjYXBlXG4vLyAzLiBkb3VibGUgcXVvdGVkIHN0cmluZyB1c2luZyBcIlwiIG9yIFxcXCIgdG8gZXNjYXBlXG4vLyA0LiBzaW5nbGUgcXVvdGVkIHN0cmluZyB1c2luZyAnJyBvciBcXCcgdG8gZXNjYXBlXG4vLyA1LiBuYXRpb25hbCBjaGFyYWN0ZXIgcXVvdGVkIHN0cmluZyB1c2luZyBOJycgb3IgTlxcJyB0byBlc2NhcGVcbi8vIDYuIFVuaWNvZGUgc2luZ2xlLXF1b3RlZCBzdHJpbmcgdXNpbmcgXFwnIHRvIGVzY2FwZVxuLy8gNy4gVW5pY29kZSBkb3VibGUtcXVvdGVkIHN0cmluZyB1c2luZyBcXFwiIHRvIGVzY2FwZVxuLy8gOC4gUG9zdGdyZVNRTCBkb2xsYXItcXVvdGVkIHN0cmluZ3NcblxuXG5mdW5jdGlvbiBjcmVhdGVTdHJpbmdQYXR0ZXJuKHN0cmluZ1R5cGVzKSB7XG4gIHZhciBwYXR0ZXJucyA9IHtcbiAgICAnYGAnOiAnKChgW15gXSooJHxgKSkrKScsXG4gICAgJ3t9JzogJygoXFxcXHtbXlxcXFx9XSooJHxcXFxcfSkpKyknLFxuICAgICdbXSc6ICcoKFxcXFxbW15cXFxcXV0qKCR8XFxcXF0pKShcXFxcXVteXFxcXF1dKigkfFxcXFxdKSkqKScsXG4gICAgJ1wiXCInOiAnKChcIlteXCJcXFxcXFxcXF0qKD86XFxcXFxcXFwuW15cIlxcXFxcXFxcXSopKihcInwkKSkrKScsXG4gICAgXCInJ1wiOiBcIigoJ1teJ1xcXFxcXFxcXSooPzpcXFxcXFxcXC5bXidcXFxcXFxcXF0qKSooJ3wkKSkrKVwiLFxuICAgIFwiTicnXCI6IFwiKChOJ1teJ1xcXFxcXFxcXSooPzpcXFxcXFxcXC5bXidcXFxcXFxcXF0qKSooJ3wkKSkrKVwiLFxuICAgIFwiVSYnJ1wiOiBcIigoVSYnW14nXFxcXFxcXFxdKig/OlxcXFxcXFxcLlteJ1xcXFxcXFxcXSopKignfCQpKSspXCIsXG4gICAgJ1UmXCJcIic6ICcoKFUmXCJbXlwiXFxcXFxcXFxdKig/OlxcXFxcXFxcLlteXCJcXFxcXFxcXF0qKSooXCJ8JCkpKyknLFxuICAgICQkOiAnKCg/PHRhZz5cXFxcJFxcXFx3KlxcXFwkKVtcXFxcc1xcXFxTXSo/KD86XFxcXGs8dGFnPnwkKSknXG4gIH07XG4gIHJldHVybiBzdHJpbmdUeXBlcy5tYXAoZnVuY3Rpb24gKHQpIHtcbiAgICByZXR1cm4gcGF0dGVybnNbdF07XG4gIH0pLmpvaW4oJ3wnKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlUGFyZW5SZWdleChwYXJlbnMpIHtcbiAgcmV0dXJuIG5ldyBSZWdFeHAoJ14oJyArIHBhcmVucy5tYXAoZXNjYXBlUGFyZW4pLmpvaW4oJ3wnKSArICcpJywgJ2l1Jyk7XG59XG5cbmZ1bmN0aW9uIGVzY2FwZVBhcmVuKHBhcmVuKSB7XG4gIGlmIChwYXJlbi5sZW5ndGggPT09IDEpIHtcbiAgICAvLyBBIHNpbmdsZSBwdW5jdHVhdGlvbiBjaGFyYWN0ZXJcbiAgICByZXR1cm4gKDAsIF91dGlscy5lc2NhcGVSZWdFeHApKHBhcmVuKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBsb25nZXIgd29yZFxuICAgIHJldHVybiAnXFxcXGInICsgcGFyZW4gKyAnXFxcXGInO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVBsYWNlaG9sZGVyUmVnZXgodHlwZXMsIHBhdHRlcm4pIHtcbiAgaWYgKCgwLCBfdXRpbHMuaXNFbXB0eSkodHlwZXMpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdmFyIHR5cGVzUmVnZXggPSB0eXBlcy5tYXAoX3V0aWxzLmVzY2FwZVJlZ0V4cCkuam9pbignfCcpO1xuICByZXR1cm4gbmV3IFJlZ0V4cChcIl4oKD86XCIuY29uY2F0KHR5cGVzUmVnZXgsIFwiKSg/OlwiKS5jb25jYXQocGF0dGVybiwgXCIpKVwiKSwgJ3UnKTtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/sql-formatter/lib/core/regexFactory.js\n");

/***/ }),

/***/ "./node_modules/sql-formatter/lib/core/token.js":
/*!******************************************************!*\
  !*** ./node_modules/sql-formatter/lib/core/token.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isEnd = exports.isWindow = exports.isBy = exports.isSet = exports.isLimit = exports.isBetween = exports.isAnd = void 0;\n\nvar _tokenTypes = _interopRequireDefault(__webpack_require__(/*! ./tokenTypes */ \"./node_modules/sql-formatter/lib/core/tokenTypes.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar isToken = function isToken(type, regex) {\n  return function (token) {\n    return (token === null || token === void 0 ? void 0 : token.type) === type && regex.test(token === null || token === void 0 ? void 0 : token.value);\n  };\n};\n\nvar isAnd = isToken(_tokenTypes[\"default\"].RESERVED_NEWLINE, /^AND$/i);\nexports.isAnd = isAnd;\nvar isBetween = isToken(_tokenTypes[\"default\"].RESERVED, /^BETWEEN$/i);\nexports.isBetween = isBetween;\nvar isLimit = isToken(_tokenTypes[\"default\"].RESERVED_TOP_LEVEL, /^LIMIT$/i);\nexports.isLimit = isLimit;\nvar isSet = isToken(_tokenTypes[\"default\"].RESERVED_TOP_LEVEL, /^[S\\u017F]ET$/i);\nexports.isSet = isSet;\nvar isBy = isToken(_tokenTypes[\"default\"].RESERVED, /^BY$/i);\nexports.isBy = isBy;\nvar isWindow = isToken(_tokenTypes[\"default\"].RESERVED_TOP_LEVEL, /^WINDOW$/i);\nexports.isWindow = isWindow;\nvar isEnd = isToken(_tokenTypes[\"default\"].CLOSE_PAREN, /^END$/i);\nexports.isEnd = isEnd;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2NvcmUvdG9rZW4uanM/NGZkYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0EsQ0FBQztBQUNEOztBQUVBLHlDQUF5QyxtQkFBTyxDQUFDLHlFQUFjOztBQUUvRCxzQ0FBc0MsdUNBQXVDLGtCQUFrQjs7QUFFL0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2NvcmUvdG9rZW4uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuaXNFbmQgPSBleHBvcnRzLmlzV2luZG93ID0gZXhwb3J0cy5pc0J5ID0gZXhwb3J0cy5pc1NldCA9IGV4cG9ydHMuaXNMaW1pdCA9IGV4cG9ydHMuaXNCZXR3ZWVuID0gZXhwb3J0cy5pc0FuZCA9IHZvaWQgMDtcblxudmFyIF90b2tlblR5cGVzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi90b2tlblR5cGVzXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgXCJkZWZhdWx0XCI6IG9iaiB9OyB9XG5cbnZhciBpc1Rva2VuID0gZnVuY3Rpb24gaXNUb2tlbih0eXBlLCByZWdleCkge1xuICByZXR1cm4gZnVuY3Rpb24gKHRva2VuKSB7XG4gICAgcmV0dXJuICh0b2tlbiA9PT0gbnVsbCB8fCB0b2tlbiA9PT0gdm9pZCAwID8gdm9pZCAwIDogdG9rZW4udHlwZSkgPT09IHR5cGUgJiYgcmVnZXgudGVzdCh0b2tlbiA9PT0gbnVsbCB8fCB0b2tlbiA9PT0gdm9pZCAwID8gdm9pZCAwIDogdG9rZW4udmFsdWUpO1xuICB9O1xufTtcblxudmFyIGlzQW5kID0gaXNUb2tlbihfdG9rZW5UeXBlc1tcImRlZmF1bHRcIl0uUkVTRVJWRURfTkVXTElORSwgL15BTkQkL2kpO1xuZXhwb3J0cy5pc0FuZCA9IGlzQW5kO1xudmFyIGlzQmV0d2VlbiA9IGlzVG9rZW4oX3Rva2VuVHlwZXNbXCJkZWZhdWx0XCJdLlJFU0VSVkVELCAvXkJFVFdFRU4kL2kpO1xuZXhwb3J0cy5pc0JldHdlZW4gPSBpc0JldHdlZW47XG52YXIgaXNMaW1pdCA9IGlzVG9rZW4oX3Rva2VuVHlwZXNbXCJkZWZhdWx0XCJdLlJFU0VSVkVEX1RPUF9MRVZFTCwgL15MSU1JVCQvaSk7XG5leHBvcnRzLmlzTGltaXQgPSBpc0xpbWl0O1xudmFyIGlzU2V0ID0gaXNUb2tlbihfdG9rZW5UeXBlc1tcImRlZmF1bHRcIl0uUkVTRVJWRURfVE9QX0xFVkVMLCAvXltTXFx1MDE3Rl1FVCQvaSk7XG5leHBvcnRzLmlzU2V0ID0gaXNTZXQ7XG52YXIgaXNCeSA9IGlzVG9rZW4oX3Rva2VuVHlwZXNbXCJkZWZhdWx0XCJdLlJFU0VSVkVELCAvXkJZJC9pKTtcbmV4cG9ydHMuaXNCeSA9IGlzQnk7XG52YXIgaXNXaW5kb3cgPSBpc1Rva2VuKF90b2tlblR5cGVzW1wiZGVmYXVsdFwiXS5SRVNFUlZFRF9UT1BfTEVWRUwsIC9eV0lORE9XJC9pKTtcbmV4cG9ydHMuaXNXaW5kb3cgPSBpc1dpbmRvdztcbnZhciBpc0VuZCA9IGlzVG9rZW4oX3Rva2VuVHlwZXNbXCJkZWZhdWx0XCJdLkNMT1NFX1BBUkVOLCAvXkVORCQvaSk7XG5leHBvcnRzLmlzRW5kID0gaXNFbmQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/sql-formatter/lib/core/token.js\n");

/***/ }),

/***/ "./node_modules/sql-formatter/lib/core/tokenTypes.js":
/*!***********************************************************!*\
  !*** ./node_modules/sql-formatter/lib/core/tokenTypes.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\n/**\n * Constants for token types\n */\nvar _default = {\n  WORD: 'word',\n  STRING: 'string',\n  RESERVED: 'reserved',\n  RESERVED_TOP_LEVEL: 'reserved-top-level',\n  RESERVED_TOP_LEVEL_NO_INDENT: 'reserved-top-level-no-indent',\n  RESERVED_NEWLINE: 'reserved-newline',\n  OPERATOR: 'operator',\n  OPEN_PAREN: 'open-paren',\n  CLOSE_PAREN: 'close-paren',\n  LINE_COMMENT: 'line-comment',\n  BLOCK_COMMENT: 'block-comment',\n  NUMBER: 'number',\n  PLACEHOLDER: 'placeholder'\n};\nexports[\"default\"] = _default;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2NvcmUvdG9rZW5UeXBlcy5qcz82YjUxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9zcWwtZm9ybWF0dGVyL2xpYi9jb3JlL3Rva2VuVHlwZXMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gdm9pZCAwO1xuXG4vKipcbiAqIENvbnN0YW50cyBmb3IgdG9rZW4gdHlwZXNcbiAqL1xudmFyIF9kZWZhdWx0ID0ge1xuICBXT1JEOiAnd29yZCcsXG4gIFNUUklORzogJ3N0cmluZycsXG4gIFJFU0VSVkVEOiAncmVzZXJ2ZWQnLFxuICBSRVNFUlZFRF9UT1BfTEVWRUw6ICdyZXNlcnZlZC10b3AtbGV2ZWwnLFxuICBSRVNFUlZFRF9UT1BfTEVWRUxfTk9fSU5ERU5UOiAncmVzZXJ2ZWQtdG9wLWxldmVsLW5vLWluZGVudCcsXG4gIFJFU0VSVkVEX05FV0xJTkU6ICdyZXNlcnZlZC1uZXdsaW5lJyxcbiAgT1BFUkFUT1I6ICdvcGVyYXRvcicsXG4gIE9QRU5fUEFSRU46ICdvcGVuLXBhcmVuJyxcbiAgQ0xPU0VfUEFSRU46ICdjbG9zZS1wYXJlbicsXG4gIExJTkVfQ09NTUVOVDogJ2xpbmUtY29tbWVudCcsXG4gIEJMT0NLX0NPTU1FTlQ6ICdibG9jay1jb21tZW50JyxcbiAgTlVNQkVSOiAnbnVtYmVyJyxcbiAgUExBQ0VIT0xERVI6ICdwbGFjZWhvbGRlcidcbn07XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IF9kZWZhdWx0O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/sql-formatter/lib/core/tokenTypes.js\n");

/***/ }),

/***/ "./node_modules/sql-formatter/lib/languages/Db2Formatter.js":
/*!******************************************************************!*\
  !*** ./node_modules/sql-formatter/lib/languages/Db2Formatter.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../core/Formatter */ \"./node_modules/sql-formatter/lib/core/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../core/Tokenizer */ \"./node_modules/sql-formatter/lib/core/Tokenizer.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedWords = ['ABS', 'ACTIVATE', 'ALIAS', 'ALL', 'ALLOCATE', 'ALLOW', 'ALTER', 'ANY', 'ARE', 'ARRAY', 'AS', 'ASC', 'ASENSITIVE', 'ASSOCIATE', 'ASUTIME', 'ASYMMETRIC', 'AT', 'ATOMIC', 'ATTRIBUTES', 'AUDIT', 'AUTHORIZATION', 'AUX', 'AUXILIARY', 'AVG', 'BEFORE', 'BEGIN', 'BETWEEN', 'BIGINT', 'BINARY', 'BLOB', 'BOOLEAN', 'BOTH', 'BUFFERPOOL', 'BY', 'CACHE', 'CALL', 'CALLED', 'CAPTURE', 'CARDINALITY', 'CASCADED', 'CASE', 'CAST', 'CCSID', 'CEIL', 'CEILING', 'CHAR', 'CHARACTER', 'CHARACTER_LENGTH', 'CHAR_LENGTH', 'CHECK', 'CLOB', 'CLONE', 'CLOSE', 'CLUSTER', 'COALESCE', 'COLLATE', 'COLLECT', 'COLLECTION', 'COLLID', 'COLUMN', 'COMMENT', 'COMMIT', 'CONCAT', 'CONDITION', 'CONNECT', 'CONNECTION', 'CONSTRAINT', 'CONTAINS', 'CONTINUE', 'CONVERT', 'CORR', 'CORRESPONDING', 'COUNT', 'COUNT_BIG', 'COVAR_POP', 'COVAR_SAMP', 'CREATE', 'CROSS', 'CUBE', 'CUME_DIST', 'CURRENT', 'CURRENT_DATE', 'CURRENT_DEFAULT_TRANSFORM_GROUP', 'CURRENT_LC_CTYPE', 'CURRENT_PATH', 'CURRENT_ROLE', 'CURRENT_SCHEMA', 'CURRENT_SERVER', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_TIMEZONE', 'CURRENT_TRANSFORM_GROUP_FOR_TYPE', 'CURRENT_USER', 'CURSOR', 'CYCLE', 'DATA', 'DATABASE', 'DATAPARTITIONNAME', 'DATAPARTITIONNUM', 'DATE', 'DAY', 'DAYS', 'DB2GENERAL', 'DB2GENRL', 'DB2SQL', 'DBINFO', 'DBPARTITIONNAME', 'DBPARTITIONNUM', 'DEALLOCATE', 'DEC', 'DECIMAL', 'DECLARE', 'DEFAULT', 'DEFAULTS', 'DEFINITION', 'DELETE', 'DENSERANK', 'DENSE_RANK', 'DEREF', 'DESCRIBE', 'DESCRIPTOR', 'DETERMINISTIC', 'DIAGNOSTICS', 'DISABLE', 'DISALLOW', 'DISCONNECT', 'DISTINCT', 'DO', 'DOCUMENT', 'DOUBLE', 'DROP', 'DSSIZE', 'DYNAMIC', 'EACH', 'EDITPROC', 'ELEMENT', 'ELSE', 'ELSEIF', 'ENABLE', 'ENCODING', 'ENCRYPTION', 'END', 'END-EXEC', 'ENDING', 'ERASE', 'ESCAPE', 'EVERY', 'EXCEPTION', 'EXCLUDING', 'EXCLUSIVE', 'EXEC', 'EXECUTE', 'EXISTS', 'EXIT', 'EXP', 'EXPLAIN', 'EXTENDED', 'EXTERNAL', 'EXTRACT', 'FALSE', 'FENCED', 'FETCH', 'FIELDPROC', 'FILE', 'FILTER', 'FINAL', 'FIRST', 'FLOAT', 'FLOOR', 'FOR', 'FOREIGN', 'FREE', 'FULL', 'FUNCTION', 'FUSION', 'GENERAL', 'GENERATED', 'GET', 'GLOBAL', 'GOTO', 'GRANT', 'GRAPHIC', 'GROUP', 'GROUPING', 'HANDLER', 'HASH', 'HASHED_VALUE', 'HINT', 'HOLD', 'HOUR', 'HOURS', 'IDENTITY', 'IF', 'IMMEDIATE', 'IN', 'INCLUDING', 'INCLUSIVE', 'INCREMENT', 'INDEX', 'INDICATOR', 'INDICATORS', 'INF', 'INFINITY', 'INHERIT', 'INNER', 'INOUT', 'INSENSITIVE', 'INSERT', 'INT', 'INTEGER', 'INTEGRITY', 'INTERSECTION', 'INTERVAL', 'INTO', 'IS', 'ISOBID', 'ISOLATION', 'ITERATE', 'JAR', 'JAVA', 'KEEP', 'KEY', 'LABEL', 'LANGUAGE', 'LARGE', 'LATERAL', 'LC_CTYPE', 'LEADING', 'LEAVE', 'LEFT', 'LIKE', 'LINKTYPE', 'LN', 'LOCAL', 'LOCALDATE', 'LOCALE', 'LOCALTIME', 'LOCALTIMESTAMP', 'LOCATOR', 'LOCATORS', 'LOCK', 'LOCKMAX', 'LOCKSIZE', 'LONG', 'LOOP', 'LOWER', 'MAINTAINED', 'MATCH', 'MATERIALIZED', 'MAX', 'MAXVALUE', 'MEMBER', 'MERGE', 'METHOD', 'MICROSECOND', 'MICROSECONDS', 'MIN', 'MINUTE', 'MINUTES', 'MINVALUE', 'MOD', 'MODE', 'MODIFIES', 'MODULE', 'MONTH', 'MONTHS', 'MULTISET', 'NAN', 'NATIONAL', 'NATURAL', 'NCHAR', 'NCLOB', 'NEW', 'NEW_TABLE', 'NEXTVAL', 'NO', 'NOCACHE', 'NOCYCLE', 'NODENAME', 'NODENUMBER', 'NOMAXVALUE', 'NOMINVALUE', 'NONE', 'NOORDER', 'NORMALIZE', 'NORMALIZED', 'NOT', 'NULL', 'NULLIF', 'NULLS', 'NUMERIC', 'NUMPARTS', 'OBID', 'OCTET_LENGTH', 'OF', 'OFFSET', 'OLD', 'OLD_TABLE', 'ON', 'ONLY', 'OPEN', 'OPTIMIZATION', 'OPTIMIZE', 'OPTION', 'ORDER', 'OUT', 'OUTER', 'OVER', 'OVERLAPS', 'OVERLAY', 'OVERRIDING', 'PACKAGE', 'PADDED', 'PAGESIZE', 'PARAMETER', 'PART', 'PARTITION', 'PARTITIONED', 'PARTITIONING', 'PARTITIONS', 'PASSWORD', 'PATH', 'PERCENTILE_CONT', 'PERCENTILE_DISC', 'PERCENT_RANK', 'PIECESIZE', 'PLAN', 'POSITION', 'POWER', 'PRECISION', 'PREPARE', 'PREVVAL', 'PRIMARY', 'PRIQTY', 'PRIVILEGES', 'PROCEDURE', 'PROGRAM', 'PSID', 'PUBLIC', 'QUERY', 'QUERYNO', 'RANGE', 'RANK', 'READ', 'READS', 'REAL', 'RECOVERY', 'RECURSIVE', 'REF', 'REFERENCES', 'REFERENCING', 'REFRESH', 'REGR_AVGX', 'REGR_AVGY', 'REGR_COUNT', 'REGR_INTERCEPT', 'REGR_R2', 'REGR_SLOPE', 'REGR_SXX', 'REGR_SXY', 'REGR_SYY', 'RELEASE', 'RENAME', 'REPEAT', 'RESET', 'RESIGNAL', 'RESTART', 'RESTRICT', 'RESULT', 'RESULT_SET_LOCATOR', 'RETURN', 'RETURNS', 'REVOKE', 'RIGHT', 'ROLE', 'ROLLBACK', 'ROLLUP', 'ROUND_CEILING', 'ROUND_DOWN', 'ROUND_FLOOR', 'ROUND_HALF_DOWN', 'ROUND_HALF_EVEN', 'ROUND_HALF_UP', 'ROUND_UP', 'ROUTINE', 'ROW', 'ROWNUMBER', 'ROWS', 'ROWSET', 'ROW_NUMBER', 'RRN', 'RUN', 'SAVEPOINT', 'SCHEMA', 'SCOPE', 'SCRATCHPAD', 'SCROLL', 'SEARCH', 'SECOND', 'SECONDS', 'SECQTY', 'SECURITY', 'SENSITIVE', 'SEQUENCE', 'SESSION', 'SESSION_USER', 'SIGNAL', 'SIMILAR', 'SIMPLE', 'SMALLINT', 'SNAN', 'SOME', 'SOURCE', 'SPECIFIC', 'SPECIFICTYPE', 'SQL', 'SQLEXCEPTION', 'SQLID', 'SQLSTATE', 'SQLWARNING', 'SQRT', 'STACKED', 'STANDARD', 'START', 'STARTING', 'STATEMENT', 'STATIC', 'STATMENT', 'STAY', 'STDDEV_POP', 'STDDEV_SAMP', 'STOGROUP', 'STORES', 'STYLE', 'SUBMULTISET', 'SUBSTRING', 'SUM', 'SUMMARY', 'SYMMETRIC', 'SYNONYM', 'SYSFUN', 'SYSIBM', 'SYSPROC', 'SYSTEM', 'SYSTEM_USER', 'TABLE', 'TABLESAMPLE', 'TABLESPACE', 'THEN', 'TIME', 'TIMESTAMP', 'TIMEZONE_HOUR', 'TIMEZONE_MINUTE', 'TO', 'TRAILING', 'TRANSACTION', 'TRANSLATE', 'TRANSLATION', 'TREAT', 'TRIGGER', 'TRIM', 'TRUE', 'TRUNCATE', 'TYPE', 'UESCAPE', 'UNDO', 'UNIQUE', 'UNKNOWN', 'UNNEST', 'UNTIL', 'UPPER', 'USAGE', 'USER', 'USING', 'VALIDPROC', 'VALUE', 'VARCHAR', 'VARIABLE', 'VARIANT', 'VARYING', 'VAR_POP', 'VAR_SAMP', 'VCAT', 'VERSION', 'VIEW', 'VOLATILE', 'VOLUMES', 'WHEN', 'WHENEVER', 'WHILE', 'WIDTH_BUCKET', 'WINDOW', 'WITH', 'WITHIN', 'WITHOUT', 'WLM', 'WRITE', 'XMLELEMENT', 'XMLEXISTS', 'XMLNAMESPACES', 'YEAR', 'YEARS'];\nvar reservedTopLevelWords = ['ADD', 'AFTER', 'ALTER COLUMN', 'ALTER TABLE', 'DELETE FROM', 'EXCEPT', 'FETCH FIRST', 'FROM', 'GROUP BY', 'GO', 'HAVING', 'INSERT INTO', 'INTERSECT', 'LIMIT', 'ORDER BY', 'SELECT', 'SET CURRENT SCHEMA', 'SET SCHEMA', 'SET', 'UPDATE', 'VALUES', 'WHERE'];\nvar reservedTopLevelWordsNoIndent = ['INTERSECT', 'INTERSECT ALL', 'MINUS', 'UNION', 'UNION ALL'];\nvar reservedNewlineWords = ['AND', 'OR', // joins\n'JOIN', 'INNER JOIN', 'LEFT JOIN', 'LEFT OUTER JOIN', 'RIGHT JOIN', 'RIGHT OUTER JOIN', 'FULL JOIN', 'FULL OUTER JOIN', 'CROSS JOIN', 'NATURAL JOIN']; // For reference: https://www.ibm.com/support/knowledgecenter/en/ssw_ibm_i_72/db2/rbafzintro.htm\n\nvar Db2Formatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(Db2Formatter, _Formatter);\n\n  var _super = _createSuper(Db2Formatter);\n\n  function Db2Formatter() {\n    _classCallCheck(this, Db2Formatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Db2Formatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedWords: reservedWords,\n        reservedTopLevelWords: reservedTopLevelWords,\n        reservedNewlineWords: reservedNewlineWords,\n        reservedTopLevelWordsNoIndent: reservedTopLevelWordsNoIndent,\n        stringTypes: [\"\\\"\\\"\", \"''\", '``', '[]'],\n        openParens: ['('],\n        closeParens: [')'],\n        indexedPlaceholderTypes: ['?'],\n        namedPlaceholderTypes: [':'],\n        lineCommentTypes: ['--'],\n        specialWordChars: ['#', '@'],\n        operators: ['**', '!=', '!>', '!>', '||']\n      });\n    }\n  }]);\n\n  return Db2Formatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = Db2Formatter;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/sql-formatter/lib/languages/Db2Formatter.js\n");

/***/ }),

/***/ "./node_modules/sql-formatter/lib/languages/MariaDbFormatter.js":
/*!**********************************************************************!*\
  !*** ./node_modules/sql-formatter/lib/languages/MariaDbFormatter.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../core/Formatter */ \"./node_modules/sql-formatter/lib/core/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../core/Tokenizer */ \"./node_modules/sql-formatter/lib/core/Tokenizer.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedWords = ['ACCESSIBLE', 'ADD', 'ALL', 'ALTER', 'ANALYZE', 'AND', 'AS', 'ASC', 'ASENSITIVE', 'BEFORE', 'BETWEEN', 'BIGINT', 'BINARY', 'BLOB', 'BOTH', 'BY', 'CALL', 'CASCADE', 'CASE', 'CHANGE', 'CHAR', 'CHARACTER', 'CHECK', 'COLLATE', 'COLUMN', 'CONDITION', 'CONSTRAINT', 'CONTINUE', 'CONVERT', 'CREATE', 'CROSS', 'CURRENT_DATE', 'CURRENT_ROLE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'CURSOR', 'DATABASE', 'DATABASES', 'DAY_HOUR', 'DAY_MICROSECOND', 'DAY_MINUTE', 'DAY_SECOND', 'DEC', 'DECIMAL', 'DECLARE', 'DEFAULT', 'DELAYED', 'DELETE', 'DESC', 'DESCRIBE', 'DETERMINISTIC', 'DISTINCT', 'DISTINCTROW', 'DIV', 'DO_DOMAIN_IDS', 'DOUBLE', 'DROP', 'DUAL', 'EACH', 'ELSE', 'ELSEIF', 'ENCLOSED', 'ESCAPED', 'EXCEPT', 'EXISTS', 'EXIT', 'EXPLAIN', 'FALSE', 'FETCH', 'FLOAT', 'FLOAT4', 'FLOAT8', 'FOR', 'FORCE', 'FOREIGN', 'FROM', 'FULLTEXT', 'GENERAL', 'GRANT', 'GROUP', 'HAVING', 'HIGH_PRIORITY', 'HOUR_MICROSECOND', 'HOUR_MINUTE', 'HOUR_SECOND', 'IF', 'IGNORE', 'IGNORE_DOMAIN_IDS', 'IGNORE_SERVER_IDS', 'IN', 'INDEX', 'INFILE', 'INNER', 'INOUT', 'INSENSITIVE', 'INSERT', 'INT', 'INT1', 'INT2', 'INT3', 'INT4', 'INT8', 'INTEGER', 'INTERSECT', 'INTERVAL', 'INTO', 'IS', 'ITERATE', 'JOIN', 'KEY', 'KEYS', 'KILL', 'LEADING', 'LEAVE', 'LEFT', 'LIKE', 'LIMIT', 'LINEAR', 'LINES', 'LOAD', 'LOCALTIME', 'LOCALTIMESTAMP', 'LOCK', 'LONG', 'LONGBLOB', 'LONGTEXT', 'LOOP', 'LOW_PRIORITY', 'MASTER_HEARTBEAT_PERIOD', 'MASTER_SSL_VERIFY_SERVER_CERT', 'MATCH', 'MAXVALUE', 'MEDIUMBLOB', 'MEDIUMINT', 'MEDIUMTEXT', 'MIDDLEINT', 'MINUTE_MICROSECOND', 'MINUTE_SECOND', 'MOD', 'MODIFIES', 'NATURAL', 'NOT', 'NO_WRITE_TO_BINLOG', 'NULL', 'NUMERIC', 'ON', 'OPTIMIZE', 'OPTION', 'OPTIONALLY', 'OR', 'ORDER', 'OUT', 'OUTER', 'OUTFILE', 'OVER', 'PAGE_CHECKSUM', 'PARSE_VCOL_EXPR', 'PARTITION', 'POSITION', 'PRECISION', 'PRIMARY', 'PROCEDURE', 'PURGE', 'RANGE', 'READ', 'READS', 'READ_WRITE', 'REAL', 'RECURSIVE', 'REF_SYSTEM_ID', 'REFERENCES', 'REGEXP', 'RELEASE', 'RENAME', 'REPEAT', 'REPLACE', 'REQUIRE', 'RESIGNAL', 'RESTRICT', 'RETURN', 'RETURNING', 'REVOKE', 'RIGHT', 'RLIKE', 'ROWS', 'SCHEMA', 'SCHEMAS', 'SECOND_MICROSECOND', 'SELECT', 'SENSITIVE', 'SEPARATOR', 'SET', 'SHOW', 'SIGNAL', 'SLOW', 'SMALLINT', 'SPATIAL', 'SPECIFIC', 'SQL', 'SQLEXCEPTION', 'SQLSTATE', 'SQLWARNING', 'SQL_BIG_RESULT', 'SQL_CALC_FOUND_ROWS', 'SQL_SMALL_RESULT', 'SSL', 'STARTING', 'STATS_AUTO_RECALC', 'STATS_PERSISTENT', 'STATS_SAMPLE_PAGES', 'STRAIGHT_JOIN', 'TABLE', 'TERMINATED', 'THEN', 'TINYBLOB', 'TINYINT', 'TINYTEXT', 'TO', 'TRAILING', 'TRIGGER', 'TRUE', 'UNDO', 'UNION', 'UNIQUE', 'UNLOCK', 'UNSIGNED', 'UPDATE', 'USAGE', 'USE', 'USING', 'UTC_DATE', 'UTC_TIME', 'UTC_TIMESTAMP', 'VALUES', 'VARBINARY', 'VARCHAR', 'VARCHARACTER', 'VARYING', 'WHEN', 'WHERE', 'WHILE', 'WINDOW', 'WITH', 'WRITE', 'XOR', 'YEAR_MONTH', 'ZEROFILL'];\nvar reservedTopLevelWords = ['ADD', 'ALTER COLUMN', 'ALTER TABLE', 'DELETE FROM', 'EXCEPT', 'FROM', 'GROUP BY', 'HAVING', 'INSERT INTO', 'INSERT', 'LIMIT', 'ORDER BY', 'SELECT', 'SET', 'UPDATE', 'VALUES', 'WHERE'];\nvar reservedTopLevelWordsNoIndent = ['INTERSECT', 'INTERSECT ALL', 'UNION', 'UNION ALL'];\nvar reservedNewlineWords = ['AND', 'ELSE', 'OR', 'WHEN', // joins\n'JOIN', 'INNER JOIN', 'LEFT JOIN', 'LEFT OUTER JOIN', 'RIGHT JOIN', 'RIGHT OUTER JOIN', 'CROSS JOIN', 'NATURAL JOIN', // non-standard joins\n'STRAIGHT_JOIN', 'NATURAL LEFT JOIN', 'NATURAL LEFT OUTER JOIN', 'NATURAL RIGHT JOIN', 'NATURAL RIGHT OUTER JOIN']; // For reference: https://mariadb.com/kb/en/sql-statements-structure/\n\nvar MariaDbFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(MariaDbFormatter, _Formatter);\n\n  var _super = _createSuper(MariaDbFormatter);\n\n  function MariaDbFormatter() {\n    _classCallCheck(this, MariaDbFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MariaDbFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedWords: reservedWords,\n        reservedTopLevelWords: reservedTopLevelWords,\n        reservedNewlineWords: reservedNewlineWords,\n        reservedTopLevelWordsNoIndent: reservedTopLevelWordsNoIndent,\n        stringTypes: ['``', \"''\", '\"\"'],\n        openParens: ['(', 'CASE'],\n        closeParens: [')', 'END'],\n        indexedPlaceholderTypes: ['?'],\n        namedPlaceholderTypes: [],\n        lineCommentTypes: ['--', '#'],\n        specialWordChars: ['@'],\n        operators: [':=', '<<', '>>', '!=', '<>', '<=>', '&&', '||']\n      });\n    }\n  }]);\n\n  return MariaDbFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = MariaDbFormatter;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/sql-formatter/lib/languages/MariaDbFormatter.js\n");

/***/ }),

/***/ "./node_modules/sql-formatter/lib/languages/MySqlFormatter.js":
/*!********************************************************************!*\
  !*** ./node_modules/sql-formatter/lib/languages/MySqlFormatter.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../core/Formatter */ \"./node_modules/sql-formatter/lib/core/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../core/Tokenizer */ \"./node_modules/sql-formatter/lib/core/Tokenizer.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedWords = ['ACCESSIBLE', 'ADD', 'ALL', 'ALTER', 'ANALYZE', 'AND', 'AS', 'ASC', 'ASENSITIVE', 'BEFORE', 'BETWEEN', 'BIGINT', 'BINARY', 'BLOB', 'BOTH', 'BY', 'CALL', 'CASCADE', 'CASE', 'CHANGE', 'CHAR', 'CHARACTER', 'CHECK', 'COLLATE', 'COLUMN', 'CONDITION', 'CONSTRAINT', 'CONTINUE', 'CONVERT', 'CREATE', 'CROSS', 'CUBE', 'CUME_DIST', 'CURRENT_DATE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'CURSOR', 'DATABASE', 'DATABASES', 'DAY_HOUR', 'DAY_MICROSECOND', 'DAY_MINUTE', 'DAY_SECOND', 'DEC', 'DECIMAL', 'DECLARE', 'DEFAULT', 'DELAYED', 'DELETE', 'DENSE_RANK', 'DESC', 'DESCRIBE', 'DETERMINISTIC', 'DISTINCT', 'DISTINCTROW', 'DIV', 'DOUBLE', 'DROP', 'DUAL', 'EACH', 'ELSE', 'ELSEIF', 'EMPTY', 'ENCLOSED', 'ESCAPED', 'EXCEPT', 'EXISTS', 'EXIT', 'EXPLAIN', 'FALSE', 'FETCH', 'FIRST_VALUE', 'FLOAT', 'FLOAT4', 'FLOAT8', 'FOR', 'FORCE', 'FOREIGN', 'FROM', 'FULLTEXT', 'FUNCTION', 'GENERATED', 'GET', 'GRANT', 'GROUP', 'GROUPING', 'GROUPS', 'HAVING', 'HIGH_PRIORITY', 'HOUR_MICROSECOND', 'HOUR_MINUTE', 'HOUR_SECOND', 'IF', 'IGNORE', 'IN', 'INDEX', 'INFILE', 'INNER', 'INOUT', 'INSENSITIVE', 'INSERT', 'INT', 'INT1', 'INT2', 'INT3', 'INT4', 'INT8', 'INTEGER', 'INTERVAL', 'INTO', 'IO_AFTER_GTIDS', 'IO_BEFORE_GTIDS', 'IS', 'ITERATE', 'JOIN', 'JSON_TABLE', 'KEY', 'KEYS', 'KILL', 'LAG', 'LAST_VALUE', 'LATERAL', 'LEAD', 'LEADING', 'LEAVE', 'LEFT', 'LIKE', 'LIMIT', 'LINEAR', 'LINES', 'LOAD', 'LOCALTIME', 'LOCALTIMESTAMP', 'LOCK', 'LONG', 'LONGBLOB', 'LONGTEXT', 'LOOP', 'LOW_PRIORITY', 'MASTER_BIND', 'MASTER_SSL_VERIFY_SERVER_CERT', 'MATCH', 'MAXVALUE', 'MEDIUMBLOB', 'MEDIUMINT', 'MEDIUMTEXT', 'MIDDLEINT', 'MINUTE_MICROSECOND', 'MINUTE_SECOND', 'MOD', 'MODIFIES', 'NATURAL', 'NOT', 'NO_WRITE_TO_BINLOG', 'NTH_VALUE', 'NTILE', 'NULL', 'NUMERIC', 'OF', 'ON', 'OPTIMIZE', 'OPTIMIZER_COSTS', 'OPTION', 'OPTIONALLY', 'OR', 'ORDER', 'OUT', 'OUTER', 'OUTFILE', 'OVER', 'PARTITION', 'PERCENT_RANK', 'PRECISION', 'PRIMARY', 'PROCEDURE', 'PURGE', 'RANGE', 'RANK', 'READ', 'READS', 'READ_WRITE', 'REAL', 'RECURSIVE', 'REFERENCES', 'REGEXP', 'RELEASE', 'RENAME', 'REPEAT', 'REPLACE', 'REQUIRE', 'RESIGNAL', 'RESTRICT', 'RETURN', 'REVOKE', 'RIGHT', 'RLIKE', 'ROW', 'ROWS', 'ROW_NUMBER', 'SCHEMA', 'SCHEMAS', 'SECOND_MICROSECOND', 'SELECT', 'SENSITIVE', 'SEPARATOR', 'SET', 'SHOW', 'SIGNAL', 'SMALLINT', 'SPATIAL', 'SPECIFIC', 'SQL', 'SQLEXCEPTION', 'SQLSTATE', 'SQLWARNING', 'SQL_BIG_RESULT', 'SQL_CALC_FOUND_ROWS', 'SQL_SMALL_RESULT', 'SSL', 'STARTING', 'STORED', 'STRAIGHT_JOIN', 'SYSTEM', 'TABLE', 'TERMINATED', 'THEN', 'TINYBLOB', 'TINYINT', 'TINYTEXT', 'TO', 'TRAILING', 'TRIGGER', 'TRUE', 'UNDO', 'UNION', 'UNIQUE', 'UNLOCK', 'UNSIGNED', 'UPDATE', 'USAGE', 'USE', 'USING', 'UTC_DATE', 'UTC_TIME', 'UTC_TIMESTAMP', 'VALUES', 'VARBINARY', 'VARCHAR', 'VARCHARACTER', 'VARYING', 'VIRTUAL', 'WHEN', 'WHERE', 'WHILE', 'WINDOW', 'WITH', 'WRITE', 'XOR', 'YEAR_MONTH', 'ZEROFILL'];\nvar reservedTopLevelWords = ['ADD', 'ALTER COLUMN', 'ALTER TABLE', 'DELETE FROM', 'EXCEPT', 'FROM', 'GROUP BY', 'HAVING', 'INSERT INTO', 'INSERT', 'LIMIT', 'ORDER BY', 'SELECT', 'SET', 'UPDATE', 'VALUES', 'WHERE'];\nvar reservedTopLevelWordsNoIndent = ['INTERSECT', 'INTERSECT ALL', 'UNION', 'UNION ALL'];\nvar reservedNewlineWords = ['AND', 'ELSE', 'OR', 'WHEN', // joins\n'JOIN', 'INNER JOIN', 'LEFT JOIN', 'LEFT OUTER JOIN', 'RIGHT JOIN', 'RIGHT OUTER JOIN', 'CROSS JOIN', 'NATURAL JOIN', // non-standard joins\n'STRAIGHT_JOIN', 'NATURAL LEFT JOIN', 'NATURAL LEFT OUTER JOIN', 'NATURAL RIGHT JOIN', 'NATURAL RIGHT OUTER JOIN'];\n\nvar MySqlFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(MySqlFormatter, _Formatter);\n\n  var _super = _createSuper(MySqlFormatter);\n\n  function MySqlFormatter() {\n    _classCallCheck(this, MySqlFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MySqlFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedWords: reservedWords,\n        reservedTopLevelWords: reservedTopLevelWords,\n        reservedNewlineWords: reservedNewlineWords,\n        reservedTopLevelWordsNoIndent: reservedTopLevelWordsNoIndent,\n        stringTypes: ['``', \"''\", '\"\"'],\n        openParens: ['(', 'CASE'],\n        closeParens: [')', 'END'],\n        indexedPlaceholderTypes: ['?'],\n        namedPlaceholderTypes: [],\n        lineCommentTypes: ['--', '#'],\n        specialWordChars: ['@'],\n        operators: [':=', '<<', '>>', '!=', '<>', '<=>', '&&', '||', '->', '->>']\n      });\n    }\n  }]);\n\n  return MySqlFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = MySqlFormatter;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/sql-formatter/lib/languages/MySqlFormatter.js\n");

/***/ }),

/***/ "./node_modules/sql-formatter/lib/languages/N1qlFormatter.js":
/*!*******************************************************************!*\
  !*** ./node_modules/sql-formatter/lib/languages/N1qlFormatter.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../core/Formatter */ \"./node_modules/sql-formatter/lib/core/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../core/Tokenizer */ \"./node_modules/sql-formatter/lib/core/Tokenizer.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedWords = ['ALL', 'ALTER', 'ANALYZE', 'AND', 'ANY', 'ARRAY', 'AS', 'ASC', 'BEGIN', 'BETWEEN', 'BINARY', 'BOOLEAN', 'BREAK', 'BUCKET', 'BUILD', 'BY', 'CALL', 'CASE', 'CAST', 'CLUSTER', 'COLLATE', 'COLLECTION', 'COMMIT', 'CONNECT', 'CONTINUE', 'CORRELATE', 'COVER', 'CREATE', 'DATABASE', 'DATASET', 'DATASTORE', 'DECLARE', 'DECREMENT', 'DELETE', 'DERIVED', 'DESC', 'DESCRIBE', 'DISTINCT', 'DO', 'DROP', 'EACH', 'ELEMENT', 'ELSE', 'END', 'EVERY', 'EXCEPT', 'EXCLUDE', 'EXECUTE', 'EXISTS', 'EXPLAIN', 'FALSE', 'FETCH', 'FIRST', 'FLATTEN', 'FOR', 'FORCE', 'FROM', 'FUNCTION', 'GRANT', 'GROUP', 'GSI', 'HAVING', 'IF', 'IGNORE', 'ILIKE', 'IN', 'INCLUDE', 'INCREMENT', 'INDEX', 'INFER', 'INLINE', 'INNER', 'INSERT', 'INTERSECT', 'INTO', 'IS', 'JOIN', 'KEY', 'KEYS', 'KEYSPACE', 'KNOWN', 'LAST', 'LEFT', 'LET', 'LETTING', 'LIKE', 'LIMIT', 'LSM', 'MAP', 'MAPPING', 'MATCHED', 'MATERIALIZED', 'MERGE', 'MISSING', 'NAMESPACE', 'NEST', 'NOT', 'NULL', 'NUMBER', 'OBJECT', 'OFFSET', 'ON', 'OPTION', 'OR', 'ORDER', 'OUTER', 'OVER', 'PARSE', 'PARTITION', 'PASSWORD', 'PATH', 'POOL', 'PREPARE', 'PRIMARY', 'PRIVATE', 'PRIVILEGE', 'PROCEDURE', 'PUBLIC', 'RAW', 'REALM', 'REDUCE', 'RENAME', 'RETURN', 'RETURNING', 'REVOKE', 'RIGHT', 'ROLE', 'ROLLBACK', 'SATISFIES', 'SCHEMA', 'SELECT', 'SELF', 'SEMI', 'SET', 'SHOW', 'SOME', 'START', 'STATISTICS', 'STRING', 'SYSTEM', 'THEN', 'TO', 'TRANSACTION', 'TRIGGER', 'TRUE', 'TRUNCATE', 'UNDER', 'UNION', 'UNIQUE', 'UNKNOWN', 'UNNEST', 'UNSET', 'UPDATE', 'UPSERT', 'USE', 'USER', 'USING', 'VALIDATE', 'VALUE', 'VALUED', 'VALUES', 'VIA', 'VIEW', 'WHEN', 'WHERE', 'WHILE', 'WITH', 'WITHIN', 'WORK', 'XOR'];\nvar reservedTopLevelWords = ['DELETE FROM', 'EXCEPT ALL', 'EXCEPT', 'EXPLAIN DELETE FROM', 'EXPLAIN UPDATE', 'EXPLAIN UPSERT', 'FROM', 'GROUP BY', 'HAVING', 'INFER', 'INSERT INTO', 'LET', 'LIMIT', 'MERGE', 'NEST', 'ORDER BY', 'PREPARE', 'SELECT', 'SET CURRENT SCHEMA', 'SET SCHEMA', 'SET', 'UNNEST', 'UPDATE', 'UPSERT', 'USE KEYS', 'VALUES', 'WHERE'];\nvar reservedTopLevelWordsNoIndent = ['INTERSECT', 'INTERSECT ALL', 'MINUS', 'UNION', 'UNION ALL'];\nvar reservedNewlineWords = ['AND', 'OR', 'XOR', // joins\n'JOIN', 'INNER JOIN', 'LEFT JOIN', 'LEFT OUTER JOIN', 'RIGHT JOIN', 'RIGHT OUTER JOIN']; // For reference: http://docs.couchbase.com.s3-website-us-west-1.amazonaws.com/server/6.0/n1ql/n1ql-language-reference/index.html\n\nvar N1qlFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(N1qlFormatter, _Formatter);\n\n  var _super = _createSuper(N1qlFormatter);\n\n  function N1qlFormatter() {\n    _classCallCheck(this, N1qlFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(N1qlFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedWords: reservedWords,\n        reservedTopLevelWords: reservedTopLevelWords,\n        reservedNewlineWords: reservedNewlineWords,\n        reservedTopLevelWordsNoIndent: reservedTopLevelWordsNoIndent,\n        stringTypes: [\"\\\"\\\"\", \"''\", '``'],\n        openParens: ['(', '[', '{'],\n        closeParens: [')', ']', '}'],\n        namedPlaceholderTypes: ['$'],\n        lineCommentTypes: ['#', '--'],\n        operators: ['==', '!=']\n      });\n    }\n  }]);\n\n  return N1qlFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = N1qlFormatter;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/sql-formatter/lib/languages/N1qlFormatter.js\n");

/***/ }),

/***/ "./node_modules/sql-formatter/lib/languages/PlSqlFormatter.js":
/*!********************************************************************!*\
  !*** ./node_modules/sql-formatter/lib/languages/PlSqlFormatter.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../core/Formatter */ \"./node_modules/sql-formatter/lib/core/Formatter.js\"));\n\nvar _token = __webpack_require__(/*! ../core/token */ \"./node_modules/sql-formatter/lib/core/token.js\");\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../core/Tokenizer */ \"./node_modules/sql-formatter/lib/core/Tokenizer.js\"));\n\nvar _tokenTypes = _interopRequireDefault(__webpack_require__(/*! ../core/tokenTypes */ \"./node_modules/sql-formatter/lib/core/tokenTypes.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedWords = ['A', 'ACCESSIBLE', 'AGENT', 'AGGREGATE', 'ALL', 'ALTER', 'ANY', 'ARRAY', 'AS', 'ASC', 'AT', 'ATTRIBUTE', 'AUTHID', 'AVG', 'BETWEEN', 'BFILE_BASE', 'BINARY_INTEGER', 'BINARY', 'BLOB_BASE', 'BLOCK', 'BODY', 'BOOLEAN', 'BOTH', 'BOUND', 'BREADTH', 'BULK', 'BY', 'BYTE', 'C', 'CALL', 'CALLING', 'CASCADE', 'CASE', 'CHAR_BASE', 'CHAR', 'CHARACTER', 'CHARSET', 'CHARSETFORM', 'CHARSETID', 'CHECK', 'CLOB_BASE', 'CLONE', 'CLOSE', 'CLUSTER', 'CLUSTERS', 'COALESCE', 'COLAUTH', 'COLLECT', 'COLUMNS', 'COMMENT', 'COMMIT', 'COMMITTED', 'COMPILED', 'COMPRESS', 'CONNECT', 'CONSTANT', 'CONSTRUCTOR', 'CONTEXT', 'CONTINUE', 'CONVERT', 'COUNT', 'CRASH', 'CREATE', 'CREDENTIAL', 'CURRENT', 'CURRVAL', 'CURSOR', 'CUSTOMDATUM', 'DANGLING', 'DATA', 'DATE_BASE', 'DATE', 'DAY', 'DECIMAL', 'DEFAULT', 'DEFINE', 'DELETE', 'DEPTH', 'DESC', 'DETERMINISTIC', 'DIRECTORY', 'DISTINCT', 'DO', 'DOUBLE', 'DROP', 'DURATION', 'ELEMENT', 'ELSIF', 'EMPTY', 'END', 'ESCAPE', 'EXCEPTIONS', 'EXCLUSIVE', 'EXECUTE', 'EXISTS', 'EXIT', 'EXTENDS', 'EXTERNAL', 'EXTRACT', 'FALSE', 'FETCH', 'FINAL', 'FIRST', 'FIXED', 'FLOAT', 'FOR', 'FORALL', 'FORCE', 'FROM', 'FUNCTION', 'GENERAL', 'GOTO', 'GRANT', 'GROUP', 'HASH', 'HEAP', 'HIDDEN', 'HOUR', 'IDENTIFIED', 'IF', 'IMMEDIATE', 'IN', 'INCLUDING', 'INDEX', 'INDEXES', 'INDICATOR', 'INDICES', 'INFINITE', 'INSTANTIABLE', 'INT', 'INTEGER', 'INTERFACE', 'INTERVAL', 'INTO', 'INVALIDATE', 'IS', 'ISOLATION', 'JAVA', 'LANGUAGE', 'LARGE', 'LEADING', 'LENGTH', 'LEVEL', 'LIBRARY', 'LIKE', 'LIKE2', 'LIKE4', 'LIKEC', 'LIMITED', 'LOCAL', 'LOCK', 'LONG', 'MAP', 'MAX', 'MAXLEN', 'MEMBER', 'MERGE', 'MIN', 'MINUTE', 'MLSLABEL', 'MOD', 'MODE', 'MONTH', 'MULTISET', 'NAME', 'NAN', 'NATIONAL', 'NATIVE', 'NATURAL', 'NATURALN', 'NCHAR', 'NEW', 'NEXTVAL', 'NOCOMPRESS', 'NOCOPY', 'NOT', 'NOWAIT', 'NULL', 'NULLIF', 'NUMBER_BASE', 'NUMBER', 'OBJECT', 'OCICOLL', 'OCIDATE', 'OCIDATETIME', 'OCIDURATION', 'OCIINTERVAL', 'OCILOBLOCATOR', 'OCINUMBER', 'OCIRAW', 'OCIREF', 'OCIREFCURSOR', 'OCIROWID', 'OCISTRING', 'OCITYPE', 'OF', 'OLD', 'ON', 'ONLY', 'OPAQUE', 'OPEN', 'OPERATOR', 'OPTION', 'ORACLE', 'ORADATA', 'ORDER', 'ORGANIZATION', 'ORLANY', 'ORLVARY', 'OTHERS', 'OUT', 'OVERLAPS', 'OVERRIDING', 'PACKAGE', 'PARALLEL_ENABLE', 'PARAMETER', 'PARAMETERS', 'PARENT', 'PARTITION', 'PASCAL', 'PCTFREE', 'PIPE', 'PIPELINED', 'PLS_INTEGER', 'PLUGGABLE', 'POSITIVE', 'POSITIVEN', 'PRAGMA', 'PRECISION', 'PRIOR', 'PRIVATE', 'PROCEDURE', 'PUBLIC', 'RAISE', 'RANGE', 'RAW', 'READ', 'REAL', 'RECORD', 'REF', 'REFERENCE', 'RELEASE', 'RELIES_ON', 'REM', 'REMAINDER', 'RENAME', 'RESOURCE', 'RESULT_CACHE', 'RESULT', 'RETURN', 'RETURNING', 'REVERSE', 'REVOKE', 'ROLLBACK', 'ROW', 'ROWID', 'ROWNUM', 'ROWTYPE', 'SAMPLE', 'SAVE', 'SAVEPOINT', 'SB1', 'SB2', 'SB4', 'SEARCH', 'SECOND', 'SEGMENT', 'SELF', 'SEPARATE', 'SEQUENCE', 'SERIALIZABLE', 'SHARE', 'SHORT', 'SIZE_T', 'SIZE', 'SMALLINT', 'SOME', 'SPACE', 'SPARSE', 'SQL', 'SQLCODE', 'SQLDATA', 'SQLERRM', 'SQLNAME', 'SQLSTATE', 'STANDARD', 'START', 'STATIC', 'STDDEV', 'STORED', 'STRING', 'STRUCT', 'STYLE', 'SUBMULTISET', 'SUBPARTITION', 'SUBSTITUTABLE', 'SUBTYPE', 'SUCCESSFUL', 'SUM', 'SYNONYM', 'SYSDATE', 'TABAUTH', 'TABLE', 'TDO', 'THE', 'THEN', 'TIME', 'TIMESTAMP', 'TIMEZONE_ABBR', 'TIMEZONE_HOUR', 'TIMEZONE_MINUTE', 'TIMEZONE_REGION', 'TO', 'TRAILING', 'TRANSACTION', 'TRANSACTIONAL', 'TRIGGER', 'TRUE', 'TRUSTED', 'TYPE', 'UB1', 'UB2', 'UB4', 'UID', 'UNDER', 'UNIQUE', 'UNPLUG', 'UNSIGNED', 'UNTRUSTED', 'USE', 'USER', 'USING', 'VALIDATE', 'VALIST', 'VALUE', 'VARCHAR', 'VARCHAR2', 'VARIABLE', 'VARIANCE', 'VARRAY', 'VARYING', 'VIEW', 'VIEWS', 'VOID', 'WHENEVER', 'WHILE', 'WITH', 'WORK', 'WRAPPED', 'WRITE', 'YEAR', 'ZONE'];\nvar reservedTopLevelWords = ['ADD', 'ALTER COLUMN', 'ALTER TABLE', 'BEGIN', 'CONNECT BY', 'DECLARE', 'DELETE FROM', 'DELETE', 'END', 'EXCEPT', 'EXCEPTION', 'FETCH FIRST', 'FROM', 'GROUP BY', 'HAVING', 'INSERT INTO', 'INSERT', 'LIMIT', 'LOOP', 'MODIFY', 'ORDER BY', 'SELECT', 'SET CURRENT SCHEMA', 'SET SCHEMA', 'SET', 'START WITH', 'UPDATE', 'VALUES', 'WHERE'];\nvar reservedTopLevelWordsNoIndent = ['INTERSECT', 'INTERSECT ALL', 'MINUS', 'UNION', 'UNION ALL'];\nvar reservedNewlineWords = ['AND', 'CROSS APPLY', 'ELSE', 'END', 'OR', 'OUTER APPLY', 'WHEN', 'XOR', // joins\n'JOIN', 'INNER JOIN', 'LEFT JOIN', 'LEFT OUTER JOIN', 'RIGHT JOIN', 'RIGHT OUTER JOIN', 'FULL JOIN', 'FULL OUTER JOIN', 'CROSS JOIN', 'NATURAL JOIN'];\n\nvar PlSqlFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(PlSqlFormatter, _Formatter);\n\n  var _super = _createSuper(PlSqlFormatter);\n\n  function PlSqlFormatter() {\n    _classCallCheck(this, PlSqlFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PlSqlFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedWords: reservedWords,\n        reservedTopLevelWords: reservedTopLevelWords,\n        reservedNewlineWords: reservedNewlineWords,\n        reservedTopLevelWordsNoIndent: reservedTopLevelWordsNoIndent,\n        stringTypes: [\"\\\"\\\"\", \"N''\", \"''\", '``'],\n        openParens: ['(', 'CASE'],\n        closeParens: [')', 'END'],\n        indexedPlaceholderTypes: ['?'],\n        namedPlaceholderTypes: [':'],\n        lineCommentTypes: ['--'],\n        specialWordChars: ['_', '$', '#', '.', '@'],\n        operators: ['||', '**', '!=', ':=']\n      });\n    }\n  }, {\n    key: \"tokenOverride\",\n    value: function tokenOverride(token) {\n      if ((0, _token.isSet)(token) && (0, _token.isBy)(this.previousReservedToken)) {\n        return {\n          type: _tokenTypes[\"default\"].RESERVED,\n          value: token.value\n        };\n      }\n\n      return token;\n    }\n  }]);\n\n  return PlSqlFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = PlSqlFormatter;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/sql-formatter/lib/languages/PlSqlFormatter.js\n");

/***/ }),

/***/ "./node_modules/sql-formatter/lib/languages/PostgreSqlFormatter.js":
/*!*************************************************************************!*\
  !*** ./node_modules/sql-formatter/lib/languages/PostgreSqlFormatter.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../core/Formatter */ \"./node_modules/sql-formatter/lib/core/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../core/Tokenizer */ \"./node_modules/sql-formatter/lib/core/Tokenizer.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedWords = ['ABORT', 'ABSOLUTE', 'ACCESS', 'ACTION', 'ADD', 'ADMIN', 'AFTER', 'AGGREGATE', 'ALL', 'ALSO', 'ALTER', 'ALWAYS', 'ANALYSE', 'ANALYZE', 'AND', 'ANY', 'ARRAY', 'AS', 'ASC', 'ASSERTION', 'ASSIGNMENT', 'ASYMMETRIC', 'AT', 'ATTACH', 'ATTRIBUTE', 'AUTHORIZATION', 'BACKWARD', 'BEFORE', 'BEGIN', 'BETWEEN', 'BIGINT', 'BINARY', 'BIT', 'BOOLEAN', 'BOTH', 'BY', 'CACHE', 'CALL', 'CALLED', 'CASCADE', 'CASCADED', 'CASE', 'CAST', 'CATALOG', 'CHAIN', 'CHAR', 'CHARACTER', 'CHARACTERISTICS', 'CHECK', 'CHECKPOINT', 'CLASS', 'CLOSE', 'CLUSTER', 'COALESCE', 'COLLATE', 'COLLATION', 'COLUMN', 'COLUMNS', 'COMMENT', 'COMMENTS', 'COMMIT', 'COMMITTED', 'CONCURRENTLY', 'CONFIGURATION', 'CONFLICT', 'CONNECTION', 'CONSTRAINT', 'CONSTRAINTS', 'CONTENT', 'CONTINUE', 'CONVERSION', 'COPY', 'COST', 'CREATE', 'CROSS', 'CSV', 'CUBE', 'CURRENT', 'CURRENT_CATALOG', 'CURRENT_DATE', 'CURRENT_ROLE', 'CURRENT_SCHEMA', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'CURSOR', 'CYCLE', 'DATA', 'DATABASE', 'DAY', 'DEALLOCATE', 'DEC', 'DECIMAL', 'DECLARE', 'DEFAULT', 'DEFAULTS', 'DEFERRABLE', 'DEFERRED', 'DEFINER', 'DELETE', 'DELIMITER', 'DELIMITERS', 'DEPENDS', 'DESC', 'DETACH', 'DICTIONARY', 'DISABLE', 'DISCARD', 'DISTINCT', 'DO', 'DOCUMENT', 'DOMAIN', 'DOUBLE', 'DROP', 'EACH', 'ELSE', 'ENABLE', 'ENCODING', 'ENCRYPTED', 'END', 'ENUM', 'ESCAPE', 'EVENT', 'EXCEPT', 'EXCLUDE', 'EXCLUDING', 'EXCLUSIVE', 'EXECUTE', 'EXISTS', 'EXPLAIN', 'EXPRESSION', 'EXTENSION', 'EXTERNAL', 'EXTRACT', 'FALSE', 'FAMILY', 'FETCH', 'FILTER', 'FIRST', 'FLOAT', 'FOLLOWING', 'FOR', 'FORCE', 'FOREIGN', 'FORWARD', 'FREEZE', 'FROM', 'FULL', 'FUNCTION', 'FUNCTIONS', 'GENERATED', 'GLOBAL', 'GRANT', 'GRANTED', 'GREATEST', 'GROUP', 'GROUPING', 'GROUPS', 'HANDLER', 'HAVING', 'HEADER', 'HOLD', 'HOUR', 'IDENTITY', 'IF', 'ILIKE', 'IMMEDIATE', 'IMMUTABLE', 'IMPLICIT', 'IMPORT', 'IN', 'INCLUDE', 'INCLUDING', 'INCREMENT', 'INDEX', 'INDEXES', 'INHERIT', 'INHERITS', 'INITIALLY', 'INLINE', 'INNER', 'INOUT', 'INPUT', 'INSENSITIVE', 'INSERT', 'INSTEAD', 'INT', 'INTEGER', 'INTERSECT', 'INTERVAL', 'INTO', 'INVOKER', 'IS', 'ISNULL', 'ISOLATION', 'JOIN', 'KEY', 'LABEL', 'LANGUAGE', 'LARGE', 'LAST', 'LATERAL', 'LEADING', 'LEAKPROOF', 'LEAST', 'LEFT', 'LEVEL', 'LIKE', 'LIMIT', 'LISTEN', 'LOAD', 'LOCAL', 'LOCALTIME', 'LOCALTIMESTAMP', 'LOCATION', 'LOCK', 'LOCKED', 'LOGGED', 'MAPPING', 'MATCH', 'MATERIALIZED', 'MAXVALUE', 'METHOD', 'MINUTE', 'MINVALUE', 'MODE', 'MONTH', 'MOVE', 'NAME', 'NAMES', 'NATIONAL', 'NATURAL', 'NCHAR', 'NEW', 'NEXT', 'NFC', 'NFD', 'NFKC', 'NFKD', 'NO', 'NONE', 'NORMALIZE', 'NORMALIZED', 'NOT', 'NOTHING', 'NOTIFY', 'NOTNULL', 'NOWAIT', 'NULL', 'NULLIF', 'NULLS', 'NUMERIC', 'OBJECT', 'OF', 'OFF', 'OFFSET', 'OIDS', 'OLD', 'ON', 'ONLY', 'OPERATOR', 'OPTION', 'OPTIONS', 'OR', 'ORDER', 'ORDINALITY', 'OTHERS', 'OUT', 'OUTER', 'OVER', 'OVERLAPS', 'OVERLAY', 'OVERRIDING', 'OWNED', 'OWNER', 'PARALLEL', 'PARSER', 'PARTIAL', 'PARTITION', 'PASSING', 'PASSWORD', 'PLACING', 'PLANS', 'POLICY', 'POSITION', 'PRECEDING', 'PRECISION', 'PREPARE', 'PREPARED', 'PRESERVE', 'PRIMARY', 'PRIOR', 'PRIVILEGES', 'PROCEDURAL', 'PROCEDURE', 'PROCEDURES', 'PROGRAM', 'PUBLICATION', 'QUOTE', 'RANGE', 'READ', 'REAL', 'REASSIGN', 'RECHECK', 'RECURSIVE', 'REF', 'REFERENCES', 'REFERENCING', 'REFRESH', 'REINDEX', 'RELATIVE', 'RELEASE', 'RENAME', 'REPEATABLE', 'REPLACE', 'REPLICA', 'RESET', 'RESTART', 'RESTRICT', 'RETURNING', 'RETURNS', 'REVOKE', 'RIGHT', 'ROLE', 'ROLLBACK', 'ROLLUP', 'ROUTINE', 'ROUTINES', 'ROW', 'ROWS', 'RULE', 'SAVEPOINT', 'SCHEMA', 'SCHEMAS', 'SCROLL', 'SEARCH', 'SECOND', 'SECURITY', 'SELECT', 'SEQUENCE', 'SEQUENCES', 'SERIALIZABLE', 'SERVER', 'SESSION', 'SESSION_USER', 'SET', 'SETOF', 'SETS', 'SHARE', 'SHOW', 'SIMILAR', 'SIMPLE', 'SKIP', 'SMALLINT', 'SNAPSHOT', 'SOME', 'SQL', 'STABLE', 'STANDALONE', 'START', 'STATEMENT', 'STATISTICS', 'STDIN', 'STDOUT', 'STORAGE', 'STORED', 'STRICT', 'STRIP', 'SUBSCRIPTION', 'SUBSTRING', 'SUPPORT', 'SYMMETRIC', 'SYSID', 'SYSTEM', 'TABLE', 'TABLES', 'TABLESAMPLE', 'TABLESPACE', 'TEMP', 'TEMPLATE', 'TEMPORARY', 'TEXT', 'THEN', 'TIES', 'TIME', 'TIMESTAMP', 'TO', 'TRAILING', 'TRANSACTION', 'TRANSFORM', 'TREAT', 'TRIGGER', 'TRIM', 'TRUE', 'TRUNCATE', 'TRUSTED', 'TYPE', 'TYPES', 'UESCAPE', 'UNBOUNDED', 'UNCOMMITTED', 'UNENCRYPTED', 'UNION', 'UNIQUE', 'UNKNOWN', 'UNLISTEN', 'UNLOGGED', 'UNTIL', 'UPDATE', 'USER', 'USING', 'VACUUM', 'VALID', 'VALIDATE', 'VALIDATOR', 'VALUE', 'VALUES', 'VARCHAR', 'VARIADIC', 'VARYING', 'VERBOSE', 'VERSION', 'VIEW', 'VIEWS', 'VOLATILE', 'WHEN', 'WHERE', 'WHITESPACE', 'WINDOW', 'WITH', 'WITHIN', 'WITHOUT', 'WORK', 'WRAPPER', 'WRITE', 'XML', 'XMLATTRIBUTES', 'XMLCONCAT', 'XMLELEMENT', 'XMLEXISTS', 'XMLFOREST', 'XMLNAMESPACES', 'XMLPARSE', 'XMLPI', 'XMLROOT', 'XMLSERIALIZE', 'XMLTABLE', 'YEAR', 'YES', 'ZONE'];\nvar reservedTopLevelWords = ['ADD', 'AFTER', 'ALTER COLUMN', 'ALTER TABLE', 'CASE', 'DELETE FROM', 'END', 'EXCEPT', 'FETCH FIRST', 'FROM', 'GROUP BY', 'HAVING', 'INSERT INTO', 'INSERT', 'LIMIT', 'ORDER BY', 'SELECT', 'SET CURRENT SCHEMA', 'SET SCHEMA', 'SET', 'UPDATE', 'VALUES', 'WHERE'];\nvar reservedTopLevelWordsNoIndent = ['INTERSECT', 'INTERSECT ALL', 'UNION', 'UNION ALL'];\nvar reservedNewlineWords = ['AND', 'ELSE', 'OR', 'WHEN', // joins\n'JOIN', 'INNER JOIN', 'LEFT JOIN', 'LEFT OUTER JOIN', 'RIGHT JOIN', 'RIGHT OUTER JOIN', 'FULL JOIN', 'FULL OUTER JOIN', 'CROSS JOIN', 'NATURAL JOIN'];\n\nvar PostgreSqlFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(PostgreSqlFormatter, _Formatter);\n\n  var _super = _createSuper(PostgreSqlFormatter);\n\n  function PostgreSqlFormatter() {\n    _classCallCheck(this, PostgreSqlFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PostgreSqlFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedWords: reservedWords,\n        reservedTopLevelWords: reservedTopLevelWords,\n        reservedNewlineWords: reservedNewlineWords,\n        reservedTopLevelWordsNoIndent: reservedTopLevelWordsNoIndent,\n        stringTypes: [\"\\\"\\\"\", \"''\", \"U&''\", 'U&\"\"', '$$'],\n        openParens: ['(', 'CASE'],\n        closeParens: [')', 'END'],\n        indexedPlaceholderTypes: ['$'],\n        namedPlaceholderTypes: [':'],\n        lineCommentTypes: ['--'],\n        operators: ['!=', '<<', '>>', '||/', '|/', '::', '->>', '->', '~~*', '~~', '!~~*', '!~~', '~*', '!~*', '!~', '!!']\n      });\n    }\n  }]);\n\n  return PostgreSqlFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = PostgreSqlFormatter;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/sql-formatter/lib/languages/PostgreSqlFormatter.js\n");

/***/ }),

/***/ "./node_modules/sql-formatter/lib/languages/RedshiftFormatter.js":
/*!***********************************************************************!*\
  !*** ./node_modules/sql-formatter/lib/languages/RedshiftFormatter.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../core/Formatter */ \"./node_modules/sql-formatter/lib/core/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../core/Tokenizer */ \"./node_modules/sql-formatter/lib/core/Tokenizer.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedWords = ['AES128', 'AES256', 'ALLOWOVERWRITE', 'ANALYSE', 'ARRAY', 'AS', 'ASC', 'AUTHORIZATION', 'BACKUP', 'BINARY', 'BLANKSASNULL', 'BOTH', 'BYTEDICT', 'BZIP2', 'CAST', 'CHECK', 'COLLATE', 'COLUMN', 'CONSTRAINT', 'CREATE', 'CREDENTIALS', 'CURRENT_DATE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'CURRENT_USER_ID', 'DEFAULT', 'DEFERRABLE', 'DEFLATE', 'DEFRAG', 'DELTA', 'DELTA32K', 'DESC', 'DISABLE', 'DISTINCT', 'DO', 'ELSE', 'EMPTYASNULL', 'ENABLE', 'ENCODE', 'ENCRYPT', 'ENCRYPTION', 'END', 'EXPLICIT', 'FALSE', 'FOR', 'FOREIGN', 'FREEZE', 'FULL', 'GLOBALDICT256', 'GLOBALDICT64K', 'GRANT', 'GZIP', 'IDENTITY', 'IGNORE', 'ILIKE', 'INITIALLY', 'INTO', 'LEADING', 'LOCALTIME', 'LOCALTIMESTAMP', 'LUN', 'LUNS', 'LZO', 'LZOP', 'MINUS', 'MOSTLY13', 'MOSTLY32', 'MOSTLY8', 'NATURAL', 'NEW', 'NULLS', 'OFF', 'OFFLINE', 'OFFSET', 'OLD', 'ON', 'ONLY', 'OPEN', 'ORDER', 'OVERLAPS', 'PARALLEL', 'PARTITION', 'PERCENT', 'PERMISSIONS', 'PLACING', 'PRIMARY', 'RAW', 'READRATIO', 'RECOVER', 'REFERENCES', 'REJECTLOG', 'RESORT', 'RESTORE', 'SESSION_USER', 'SIMILAR', 'SYSDATE', 'SYSTEM', 'TABLE', 'TAG', 'TDES', 'TEXT255', 'TEXT32K', 'THEN', 'TIMESTAMP', 'TO', 'TOP', 'TRAILING', 'TRUE', 'TRUNCATECOLUMNS', 'UNIQUE', 'USER', 'USING', 'VERBOSE', 'WALLET', 'WHEN', 'WITH', 'WITHOUT', 'PREDICATE', 'COLUMNS', 'COMPROWS', 'COMPRESSION', 'COPY', 'FORMAT', 'DELIMITER', 'FIXEDWIDTH', 'AVRO', 'JSON', 'ENCRYPTED', 'BZIP2', 'GZIP', 'LZOP', 'PARQUET', 'ORC', 'ACCEPTANYDATE', 'ACCEPTINVCHARS', 'BLANKSASNULL', 'DATEFORMAT', 'EMPTYASNULL', 'ENCODING', 'ESCAPE', 'EXPLICIT_IDS', 'FILLRECORD', 'IGNOREBLANKLINES', 'IGNOREHEADER', 'NULL AS', 'REMOVEQUOTES', 'ROUNDEC', 'TIMEFORMAT', 'TRIMBLANKS', 'TRUNCATECOLUMNS', 'COMPROWS', 'COMPUPDATE', 'MAXERROR', 'NOLOAD', 'STATUPDATE', 'MANIFEST', 'REGION', 'IAM_ROLE', 'MASTER_SYMMETRIC_KEY', 'SSH', 'ACCEPTANYDATE', 'ACCEPTINVCHARS', 'ACCESS_KEY_ID', 'SECRET_ACCESS_KEY', 'AVRO', 'BLANKSASNULL', 'BZIP2', 'COMPROWS', 'COMPUPDATE', 'CREDENTIALS', 'DATEFORMAT', 'DELIMITER', 'EMPTYASNULL', 'ENCODING', 'ENCRYPTED', 'ESCAPE', 'EXPLICIT_IDS', 'FILLRECORD', 'FIXEDWIDTH', 'FORMAT', 'IAM_ROLE', 'GZIP', 'IGNOREBLANKLINES', 'IGNOREHEADER', 'JSON', 'LZOP', 'MANIFEST', 'MASTER_SYMMETRIC_KEY', 'MAXERROR', 'NOLOAD', 'NULL AS', 'READRATIO', 'REGION', 'REMOVEQUOTES', 'ROUNDEC', 'SSH', 'STATUPDATE', 'TIMEFORMAT', 'SESSION_TOKEN', 'TRIMBLANKS', 'TRUNCATECOLUMNS', 'EXTERNAL', 'DATA CATALOG', 'HIVE METASTORE', 'CATALOG_ROLE', 'VACUUM', 'COPY', 'UNLOAD', 'EVEN', 'ALL'];\nvar reservedTopLevelWords = ['ADD', 'AFTER', 'ALTER COLUMN', 'ALTER TABLE', 'DELETE FROM', 'EXCEPT', 'FROM', 'GROUP BY', 'HAVING', 'INSERT INTO', 'INSERT', 'INTERSECT', 'TOP', 'LIMIT', 'MODIFY', 'ORDER BY', 'SELECT', 'SET CURRENT SCHEMA', 'SET SCHEMA', 'SET', 'UNION ALL', 'UNION', 'UPDATE', 'VALUES', 'WHERE', 'VACUUM', 'COPY', 'UNLOAD', 'ANALYZE', 'ANALYSE', 'DISTKEY', 'SORTKEY', 'COMPOUND', 'INTERLEAVED', 'FORMAT', 'DELIMITER', 'FIXEDWIDTH', 'AVRO', 'JSON', 'ENCRYPTED', 'BZIP2', 'GZIP', 'LZOP', 'PARQUET', 'ORC', 'ACCEPTANYDATE', 'ACCEPTINVCHARS', 'BLANKSASNULL', 'DATEFORMAT', 'EMPTYASNULL', 'ENCODING', 'ESCAPE', 'EXPLICIT_IDS', 'FILLRECORD', 'IGNOREBLANKLINES', 'IGNOREHEADER', 'NULL AS', 'REMOVEQUOTES', 'ROUNDEC', 'TIMEFORMAT', 'TRIMBLANKS', 'TRUNCATECOLUMNS', 'COMPROWS', 'COMPUPDATE', 'MAXERROR', 'NOLOAD', 'STATUPDATE', 'MANIFEST', 'REGION', 'IAM_ROLE', 'MASTER_SYMMETRIC_KEY', 'SSH', 'ACCEPTANYDATE', 'ACCEPTINVCHARS', 'ACCESS_KEY_ID', 'SECRET_ACCESS_KEY', 'AVRO', 'BLANKSASNULL', 'BZIP2', 'COMPROWS', 'COMPUPDATE', 'CREDENTIALS', 'DATEFORMAT', 'DELIMITER', 'EMPTYASNULL', 'ENCODING', 'ENCRYPTED', 'ESCAPE', 'EXPLICIT_IDS', 'FILLRECORD', 'FIXEDWIDTH', 'FORMAT', 'IAM_ROLE', 'GZIP', 'IGNOREBLANKLINES', 'IGNOREHEADER', 'JSON', 'LZOP', 'MANIFEST', 'MASTER_SYMMETRIC_KEY', 'MAXERROR', 'NOLOAD', 'NULL AS', 'READRATIO', 'REGION', 'REMOVEQUOTES', 'ROUNDEC', 'SSH', 'STATUPDATE', 'TIMEFORMAT', 'SESSION_TOKEN', 'TRIMBLANKS', 'TRUNCATECOLUMNS', 'EXTERNAL', 'DATA CATALOG', 'HIVE METASTORE', 'CATALOG_ROLE'];\nvar reservedTopLevelWordsNoIndent = [];\nvar reservedNewlineWords = ['AND', 'ELSE', 'OR', 'OUTER APPLY', 'WHEN', 'VACUUM', 'COPY', 'UNLOAD', 'ANALYZE', 'ANALYSE', 'DISTKEY', 'SORTKEY', 'COMPOUND', 'INTERLEAVED', // joins\n'JOIN', 'INNER JOIN', 'LEFT JOIN', 'LEFT OUTER JOIN', 'RIGHT JOIN', 'RIGHT OUTER JOIN', 'FULL JOIN', 'FULL OUTER JOIN', 'CROSS JOIN', 'NATURAL JOIN'];\n\nvar RedshiftFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(RedshiftFormatter, _Formatter);\n\n  var _super = _createSuper(RedshiftFormatter);\n\n  function RedshiftFormatter() {\n    _classCallCheck(this, RedshiftFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RedshiftFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedWords: reservedWords,\n        reservedTopLevelWords: reservedTopLevelWords,\n        reservedNewlineWords: reservedNewlineWords,\n        reservedTopLevelWordsNoIndent: reservedTopLevelWordsNoIndent,\n        stringTypes: [\"\\\"\\\"\", \"''\", '``'],\n        openParens: ['('],\n        closeParens: [')'],\n        indexedPlaceholderTypes: ['?'],\n        namedPlaceholderTypes: ['@', '#', '$'],\n        lineCommentTypes: ['--'],\n        operators: ['|/', '||/', '<<', '>>', '!=', '||']\n      });\n    }\n  }]);\n\n  return RedshiftFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = RedshiftFormatter;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9SZWRzaGlmdEZvcm1hdHRlci5qcz9iOTc5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViLHVCQUF1QiwyQkFBMkIsMkVBQTJFLGtDQUFrQyxtQkFBbUIsR0FBRyxFQUFFLE9BQU8sa0NBQWtDLDhIQUE4SCxHQUFHLEVBQUUscUJBQXFCOztBQUV4WDtBQUNBO0FBQ0EsQ0FBQztBQUNEOztBQUVBLHlDQUF5QyxtQkFBTyxDQUFDLDZFQUFtQjs7QUFFcEUsd0NBQXdDLG1CQUFPLENBQUMsNkVBQW1COztBQUVuRSxzQ0FBc0MsdUNBQXVDLGtCQUFrQjs7QUFFL0YsaURBQWlELDBDQUEwQywwREFBMEQsRUFBRTs7QUFFdkosMkNBQTJDLGdCQUFnQixrQkFBa0IsT0FBTywyQkFBMkIsd0RBQXdELGdDQUFnQyx1REFBdUQsMkRBQTJELEVBQUU7O0FBRTNULDZEQUE2RCxzRUFBc0UsOERBQThELG9CQUFvQjs7QUFFck4sMENBQTBDLCtEQUErRCwyRUFBMkUsRUFBRSx5RUFBeUUsZUFBZSxzREFBc0QsRUFBRSxFQUFFLHVEQUF1RDs7QUFFL1gsZ0NBQWdDLDRFQUE0RSxpQkFBaUIsVUFBVSxHQUFHLDhCQUE4Qjs7QUFFeEssZ0NBQWdDLDZEQUE2RCx5Q0FBeUMsOENBQThDLGlDQUFpQyxtREFBbUQseURBQXlELEVBQUUsT0FBTyx1Q0FBdUMsRUFBRSxpREFBaUQsR0FBRzs7QUFFdmEsaURBQWlELDBFQUEwRSxhQUFhLEVBQUUscUNBQXFDOztBQUUvSyx1Q0FBdUMsdUJBQXVCLHVGQUF1RixFQUFFLGFBQWE7O0FBRXBLLHNDQUFzQyx3RUFBd0UsMENBQTBDLDhDQUE4QyxNQUFNLHdFQUF3RSxHQUFHLGFBQWEsRUFBRSxZQUFZLGNBQWMsRUFBRTs7QUFFbFUsNkJBQTZCLGdHQUFnRyxnREFBZ0QsR0FBRywyQkFBMkI7O0FBRTNNO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLENBQUM7O0FBRUQ7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9zcWwtZm9ybWF0dGVyL2xpYi9sYW5ndWFnZXMvUmVkc2hpZnRGb3JtYXR0ZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07IH0gcmV0dXJuIF90eXBlb2Yob2JqKTsgfVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSB2b2lkIDA7XG5cbnZhciBfRm9ybWF0dGVyMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uL2NvcmUvRm9ybWF0dGVyXCIpKTtcblxudmFyIF9Ub2tlbml6ZXIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi9jb3JlL1Rva2VuaXplclwiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IFwiZGVmYXVsdFwiOiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XG5cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpOyB9XG5cbmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBvLl9fcHJvdG9fXyA9IHA7IHJldHVybiBvOyB9OyByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApOyB9XG5cbmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKGNhbGwgJiYgKF90eXBlb2YoY2FsbCkgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH1cblxuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7IGlmIChzZWxmID09PSB2b2lkIDApIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTsgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTsgdHJ5IHsgRGF0ZS5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChEYXRlLCBbXSwgZnVuY3Rpb24gKCkge30pKTsgcmV0dXJuIHRydWU7IH0gY2F0Y2ggKGUpIHsgcmV0dXJuIGZhbHNlOyB9IH1cblxuZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTsgfTsgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTsgfVxuXG52YXIgcmVzZXJ2ZWRXb3JkcyA9IFsnQUVTMTI4JywgJ0FFUzI1NicsICdBTExPV09WRVJXUklURScsICdBTkFMWVNFJywgJ0FSUkFZJywgJ0FTJywgJ0FTQycsICdBVVRIT1JJWkFUSU9OJywgJ0JBQ0tVUCcsICdCSU5BUlknLCAnQkxBTktTQVNOVUxMJywgJ0JPVEgnLCAnQllURURJQ1QnLCAnQlpJUDInLCAnQ0FTVCcsICdDSEVDSycsICdDT0xMQVRFJywgJ0NPTFVNTicsICdDT05TVFJBSU5UJywgJ0NSRUFURScsICdDUkVERU5USUFMUycsICdDVVJSRU5UX0RBVEUnLCAnQ1VSUkVOVF9USU1FJywgJ0NVUlJFTlRfVElNRVNUQU1QJywgJ0NVUlJFTlRfVVNFUicsICdDVVJSRU5UX1VTRVJfSUQnLCAnREVGQVVMVCcsICdERUZFUlJBQkxFJywgJ0RFRkxBVEUnLCAnREVGUkFHJywgJ0RFTFRBJywgJ0RFTFRBMzJLJywgJ0RFU0MnLCAnRElTQUJMRScsICdESVNUSU5DVCcsICdETycsICdFTFNFJywgJ0VNUFRZQVNOVUxMJywgJ0VOQUJMRScsICdFTkNPREUnLCAnRU5DUllQVCcsICdFTkNSWVBUSU9OJywgJ0VORCcsICdFWFBMSUNJVCcsICdGQUxTRScsICdGT1InLCAnRk9SRUlHTicsICdGUkVFWkUnLCAnRlVMTCcsICdHTE9CQUxESUNUMjU2JywgJ0dMT0JBTERJQ1Q2NEsnLCAnR1JBTlQnLCAnR1pJUCcsICdJREVOVElUWScsICdJR05PUkUnLCAnSUxJS0UnLCAnSU5JVElBTExZJywgJ0lOVE8nLCAnTEVBRElORycsICdMT0NBTFRJTUUnLCAnTE9DQUxUSU1FU1RBTVAnLCAnTFVOJywgJ0xVTlMnLCAnTFpPJywgJ0xaT1AnLCAnTUlOVVMnLCAnTU9TVExZMTMnLCAnTU9TVExZMzInLCAnTU9TVExZOCcsICdOQVRVUkFMJywgJ05FVycsICdOVUxMUycsICdPRkYnLCAnT0ZGTElORScsICdPRkZTRVQnLCAnT0xEJywgJ09OJywgJ09OTFknLCAnT1BFTicsICdPUkRFUicsICdPVkVSTEFQUycsICdQQVJBTExFTCcsICdQQVJUSVRJT04nLCAnUEVSQ0VOVCcsICdQRVJNSVNTSU9OUycsICdQTEFDSU5HJywgJ1BSSU1BUlknLCAnUkFXJywgJ1JFQURSQVRJTycsICdSRUNPVkVSJywgJ1JFRkVSRU5DRVMnLCAnUkVKRUNUTE9HJywgJ1JFU09SVCcsICdSRVNUT1JFJywgJ1NFU1NJT05fVVNFUicsICdTSU1JTEFSJywgJ1NZU0RBVEUnLCAnU1lTVEVNJywgJ1RBQkxFJywgJ1RBRycsICdUREVTJywgJ1RFWFQyNTUnLCAnVEVYVDMySycsICdUSEVOJywgJ1RJTUVTVEFNUCcsICdUTycsICdUT1AnLCAnVFJBSUxJTkcnLCAnVFJVRScsICdUUlVOQ0FURUNPTFVNTlMnLCAnVU5JUVVFJywgJ1VTRVInLCAnVVNJTkcnLCAnVkVSQk9TRScsICdXQUxMRVQnLCAnV0hFTicsICdXSVRIJywgJ1dJVEhPVVQnLCAnUFJFRElDQVRFJywgJ0NPTFVNTlMnLCAnQ09NUFJPV1MnLCAnQ09NUFJFU1NJT04nLCAnQ09QWScsICdGT1JNQVQnLCAnREVMSU1JVEVSJywgJ0ZJWEVEV0lEVEgnLCAnQVZSTycsICdKU09OJywgJ0VOQ1JZUFRFRCcsICdCWklQMicsICdHWklQJywgJ0xaT1AnLCAnUEFSUVVFVCcsICdPUkMnLCAnQUNDRVBUQU5ZREFURScsICdBQ0NFUFRJTlZDSEFSUycsICdCTEFOS1NBU05VTEwnLCAnREFURUZPUk1BVCcsICdFTVBUWUFTTlVMTCcsICdFTkNPRElORycsICdFU0NBUEUnLCAnRVhQTElDSVRfSURTJywgJ0ZJTExSRUNPUkQnLCAnSUdOT1JFQkxBTktMSU5FUycsICdJR05PUkVIRUFERVInLCAnTlVMTCBBUycsICdSRU1PVkVRVU9URVMnLCAnUk9VTkRFQycsICdUSU1FRk9STUFUJywgJ1RSSU1CTEFOS1MnLCAnVFJVTkNBVEVDT0xVTU5TJywgJ0NPTVBST1dTJywgJ0NPTVBVUERBVEUnLCAnTUFYRVJST1InLCAnTk9MT0FEJywgJ1NUQVRVUERBVEUnLCAnTUFOSUZFU1QnLCAnUkVHSU9OJywgJ0lBTV9ST0xFJywgJ01BU1RFUl9TWU1NRVRSSUNfS0VZJywgJ1NTSCcsICdBQ0NFUFRBTllEQVRFJywgJ0FDQ0VQVElOVkNIQVJTJywgJ0FDQ0VTU19LRVlfSUQnLCAnU0VDUkVUX0FDQ0VTU19LRVknLCAnQVZSTycsICdCTEFOS1NBU05VTEwnLCAnQlpJUDInLCAnQ09NUFJPV1MnLCAnQ09NUFVQREFURScsICdDUkVERU5USUFMUycsICdEQVRFRk9STUFUJywgJ0RFTElNSVRFUicsICdFTVBUWUFTTlVMTCcsICdFTkNPRElORycsICdFTkNSWVBURUQnLCAnRVNDQVBFJywgJ0VYUExJQ0lUX0lEUycsICdGSUxMUkVDT1JEJywgJ0ZJWEVEV0lEVEgnLCAnRk9STUFUJywgJ0lBTV9ST0xFJywgJ0daSVAnLCAnSUdOT1JFQkxBTktMSU5FUycsICdJR05PUkVIRUFERVInLCAnSlNPTicsICdMWk9QJywgJ01BTklGRVNUJywgJ01BU1RFUl9TWU1NRVRSSUNfS0VZJywgJ01BWEVSUk9SJywgJ05PTE9BRCcsICdOVUxMIEFTJywgJ1JFQURSQVRJTycsICdSRUdJT04nLCAnUkVNT1ZFUVVPVEVTJywgJ1JPVU5ERUMnLCAnU1NIJywgJ1NUQVRVUERBVEUnLCAnVElNRUZPUk1BVCcsICdTRVNTSU9OX1RPS0VOJywgJ1RSSU1CTEFOS1MnLCAnVFJVTkNBVEVDT0xVTU5TJywgJ0VYVEVSTkFMJywgJ0RBVEEgQ0FUQUxPRycsICdISVZFIE1FVEFTVE9SRScsICdDQVRBTE9HX1JPTEUnLCAnVkFDVVVNJywgJ0NPUFknLCAnVU5MT0FEJywgJ0VWRU4nLCAnQUxMJ107XG52YXIgcmVzZXJ2ZWRUb3BMZXZlbFdvcmRzID0gWydBREQnLCAnQUZURVInLCAnQUxURVIgQ09MVU1OJywgJ0FMVEVSIFRBQkxFJywgJ0RFTEVURSBGUk9NJywgJ0VYQ0VQVCcsICdGUk9NJywgJ0dST1VQIEJZJywgJ0hBVklORycsICdJTlNFUlQgSU5UTycsICdJTlNFUlQnLCAnSU5URVJTRUNUJywgJ1RPUCcsICdMSU1JVCcsICdNT0RJRlknLCAnT1JERVIgQlknLCAnU0VMRUNUJywgJ1NFVCBDVVJSRU5UIFNDSEVNQScsICdTRVQgU0NIRU1BJywgJ1NFVCcsICdVTklPTiBBTEwnLCAnVU5JT04nLCAnVVBEQVRFJywgJ1ZBTFVFUycsICdXSEVSRScsICdWQUNVVU0nLCAnQ09QWScsICdVTkxPQUQnLCAnQU5BTFlaRScsICdBTkFMWVNFJywgJ0RJU1RLRVknLCAnU09SVEtFWScsICdDT01QT1VORCcsICdJTlRFUkxFQVZFRCcsICdGT1JNQVQnLCAnREVMSU1JVEVSJywgJ0ZJWEVEV0lEVEgnLCAnQVZSTycsICdKU09OJywgJ0VOQ1JZUFRFRCcsICdCWklQMicsICdHWklQJywgJ0xaT1AnLCAnUEFSUVVFVCcsICdPUkMnLCAnQUNDRVBUQU5ZREFURScsICdBQ0NFUFRJTlZDSEFSUycsICdCTEFOS1NBU05VTEwnLCAnREFURUZPUk1BVCcsICdFTVBUWUFTTlVMTCcsICdFTkNPRElORycsICdFU0NBUEUnLCAnRVhQTElDSVRfSURTJywgJ0ZJTExSRUNPUkQnLCAnSUdOT1JFQkxBTktMSU5FUycsICdJR05PUkVIRUFERVInLCAnTlVMTCBBUycsICdSRU1PVkVRVU9URVMnLCAnUk9VTkRFQycsICdUSU1FRk9STUFUJywgJ1RSSU1CTEFOS1MnLCAnVFJVTkNBVEVDT0xVTU5TJywgJ0NPTVBST1dTJywgJ0NPTVBVUERBVEUnLCAnTUFYRVJST1InLCAnTk9MT0FEJywgJ1NUQVRVUERBVEUnLCAnTUFOSUZFU1QnLCAnUkVHSU9OJywgJ0lBTV9ST0xFJywgJ01BU1RFUl9TWU1NRVRSSUNfS0VZJywgJ1NTSCcsICdBQ0NFUFRBTllEQVRFJywgJ0FDQ0VQVElOVkNIQVJTJywgJ0FDQ0VTU19LRVlfSUQnLCAnU0VDUkVUX0FDQ0VTU19LRVknLCAnQVZSTycsICdCTEFOS1NBU05VTEwnLCAnQlpJUDInLCAnQ09NUFJPV1MnLCAnQ09NUFVQREFURScsICdDUkVERU5USUFMUycsICdEQVRFRk9STUFUJywgJ0RFTElNSVRFUicsICdFTVBUWUFTTlVMTCcsICdFTkNPRElORycsICdFTkNSWVBURUQnLCAnRVNDQVBFJywgJ0VYUExJQ0lUX0lEUycsICdGSUxMUkVDT1JEJywgJ0ZJWEVEV0lEVEgnLCAnRk9STUFUJywgJ0lBTV9ST0xFJywgJ0daSVAnLCAnSUdOT1JFQkxBTktMSU5FUycsICdJR05PUkVIRUFERVInLCAnSlNPTicsICdMWk9QJywgJ01BTklGRVNUJywgJ01BU1RFUl9TWU1NRVRSSUNfS0VZJywgJ01BWEVSUk9SJywgJ05PTE9BRCcsICdOVUxMIEFTJywgJ1JFQURSQVRJTycsICdSRUdJT04nLCAnUkVNT1ZFUVVPVEVTJywgJ1JPVU5ERUMnLCAnU1NIJywgJ1NUQVRVUERBVEUnLCAnVElNRUZPUk1BVCcsICdTRVNTSU9OX1RPS0VOJywgJ1RSSU1CTEFOS1MnLCAnVFJVTkNBVEVDT0xVTU5TJywgJ0VYVEVSTkFMJywgJ0RBVEEgQ0FUQUxPRycsICdISVZFIE1FVEFTVE9SRScsICdDQVRBTE9HX1JPTEUnXTtcbnZhciByZXNlcnZlZFRvcExldmVsV29yZHNOb0luZGVudCA9IFtdO1xudmFyIHJlc2VydmVkTmV3bGluZVdvcmRzID0gWydBTkQnLCAnRUxTRScsICdPUicsICdPVVRFUiBBUFBMWScsICdXSEVOJywgJ1ZBQ1VVTScsICdDT1BZJywgJ1VOTE9BRCcsICdBTkFMWVpFJywgJ0FOQUxZU0UnLCAnRElTVEtFWScsICdTT1JUS0VZJywgJ0NPTVBPVU5EJywgJ0lOVEVSTEVBVkVEJywgLy8gam9pbnNcbidKT0lOJywgJ0lOTkVSIEpPSU4nLCAnTEVGVCBKT0lOJywgJ0xFRlQgT1VURVIgSk9JTicsICdSSUdIVCBKT0lOJywgJ1JJR0hUIE9VVEVSIEpPSU4nLCAnRlVMTCBKT0lOJywgJ0ZVTEwgT1VURVIgSk9JTicsICdDUk9TUyBKT0lOJywgJ05BVFVSQUwgSk9JTiddO1xuXG52YXIgUmVkc2hpZnRGb3JtYXR0ZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9Gb3JtYXR0ZXIpIHtcbiAgX2luaGVyaXRzKFJlZHNoaWZ0Rm9ybWF0dGVyLCBfRm9ybWF0dGVyKTtcblxuICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKFJlZHNoaWZ0Rm9ybWF0dGVyKTtcblxuICBmdW5jdGlvbiBSZWRzaGlmdEZvcm1hdHRlcigpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUmVkc2hpZnRGb3JtYXR0ZXIpO1xuXG4gICAgcmV0dXJuIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKFJlZHNoaWZ0Rm9ybWF0dGVyLCBbe1xuICAgIGtleTogXCJ0b2tlbml6ZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdG9rZW5pemVyKCkge1xuICAgICAgcmV0dXJuIG5ldyBfVG9rZW5pemVyW1wiZGVmYXVsdFwiXSh7XG4gICAgICAgIHJlc2VydmVkV29yZHM6IHJlc2VydmVkV29yZHMsXG4gICAgICAgIHJlc2VydmVkVG9wTGV2ZWxXb3JkczogcmVzZXJ2ZWRUb3BMZXZlbFdvcmRzLFxuICAgICAgICByZXNlcnZlZE5ld2xpbmVXb3JkczogcmVzZXJ2ZWROZXdsaW5lV29yZHMsXG4gICAgICAgIHJlc2VydmVkVG9wTGV2ZWxXb3Jkc05vSW5kZW50OiByZXNlcnZlZFRvcExldmVsV29yZHNOb0luZGVudCxcbiAgICAgICAgc3RyaW5nVHlwZXM6IFtcIlxcXCJcXFwiXCIsIFwiJydcIiwgJ2BgJ10sXG4gICAgICAgIG9wZW5QYXJlbnM6IFsnKCddLFxuICAgICAgICBjbG9zZVBhcmVuczogWycpJ10sXG4gICAgICAgIGluZGV4ZWRQbGFjZWhvbGRlclR5cGVzOiBbJz8nXSxcbiAgICAgICAgbmFtZWRQbGFjZWhvbGRlclR5cGVzOiBbJ0AnLCAnIycsICckJ10sXG4gICAgICAgIGxpbmVDb21tZW50VHlwZXM6IFsnLS0nXSxcbiAgICAgICAgb3BlcmF0b3JzOiBbJ3wvJywgJ3x8LycsICc8PCcsICc+PicsICchPScsICd8fCddXG4gICAgICB9KTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gUmVkc2hpZnRGb3JtYXR0ZXI7XG59KF9Gb3JtYXR0ZXIyW1wiZGVmYXVsdFwiXSk7XG5cbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gUmVkc2hpZnRGb3JtYXR0ZXI7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/sql-formatter/lib/languages/RedshiftFormatter.js\n");

/***/ }),

/***/ "./node_modules/sql-formatter/lib/languages/SparkSqlFormatter.js":
/*!***********************************************************************!*\
  !*** ./node_modules/sql-formatter/lib/languages/SparkSqlFormatter.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../core/Formatter */ \"./node_modules/sql-formatter/lib/core/Formatter.js\"));\n\nvar _token = __webpack_require__(/*! ../core/token */ \"./node_modules/sql-formatter/lib/core/token.js\");\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../core/Tokenizer */ \"./node_modules/sql-formatter/lib/core/Tokenizer.js\"));\n\nvar _tokenTypes = _interopRequireDefault(__webpack_require__(/*! ../core/tokenTypes */ \"./node_modules/sql-formatter/lib/core/tokenTypes.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedWords = ['ALL', 'ALTER', 'ANALYSE', 'ANALYZE', 'ARRAY_ZIP', 'ARRAY', 'AS', 'ASC', 'AVG', 'BETWEEN', 'CASCADE', 'CASE', 'CAST', 'COALESCE', 'COLLECT_LIST', 'COLLECT_SET', 'COLUMN', 'COLUMNS', 'COMMENT', 'CONSTRAINT', 'CONTAINS', 'CONVERT', 'COUNT', 'CUME_DIST', 'CURRENT ROW', 'CURRENT_DATE', 'CURRENT_TIMESTAMP', 'DATABASE', 'DATABASES', 'DATE_ADD', 'DATE_SUB', 'DATE_TRUNC', 'DAY_HOUR', 'DAY_MINUTE', 'DAY_SECOND', 'DAY', 'DAYS', 'DECODE', 'DEFAULT', 'DELETE', 'DENSE_RANK', 'DESC', 'DESCRIBE', 'DISTINCT', 'DISTINCTROW', 'DIV', 'DROP', 'ELSE', 'ENCODE', 'END', 'EXISTS', 'EXPLAIN', 'EXPLODE_OUTER', 'EXPLODE', 'FILTER', 'FIRST_VALUE', 'FIRST', 'FIXED', 'FLATTEN', 'FOLLOWING', 'FROM_UNIXTIME', 'FULL', 'GREATEST', 'GROUP_CONCAT', 'HOUR_MINUTE', 'HOUR_SECOND', 'HOUR', 'HOURS', 'IF', 'IFNULL', 'IN', 'INSERT', 'INTERVAL', 'INTO', 'IS', 'LAG', 'LAST_VALUE', 'LAST', 'LEAD', 'LEADING', 'LEAST', 'LEVEL', 'LIKE', 'MAX', 'MERGE', 'MIN', 'MINUTE_SECOND', 'MINUTE', 'MONTH', 'NATURAL', 'NOT', 'NOW()', 'NTILE', 'NULL', 'NULLIF', 'OFFSET', 'ON DELETE', 'ON UPDATE', 'ON', 'ONLY', 'OPTIMIZE', 'OVER', 'PERCENT_RANK', 'PRECEDING', 'RANGE', 'RANK', 'REGEXP', 'RENAME', 'RLIKE', 'ROW', 'ROWS', 'SECOND', 'SEPARATOR', 'SEQUENCE', 'SIZE', 'STRING', 'STRUCT', 'SUM', 'TABLE', 'TABLES', 'TEMPORARY', 'THEN', 'TO_DATE', 'TO_JSON', 'TO', 'TRAILING', 'TRANSFORM', 'TRUE', 'TRUNCATE', 'TYPE', 'TYPES', 'UNBOUNDED', 'UNIQUE', 'UNIX_TIMESTAMP', 'UNLOCK', 'UNSIGNED', 'USING', 'VARIABLES', 'VIEW', 'WHEN', 'WITH', 'YEAR_MONTH'];\nvar reservedTopLevelWords = ['ADD', 'AFTER', 'ALTER COLUMN', 'ALTER DATABASE', 'ALTER SCHEMA', 'ALTER TABLE', 'CLUSTER BY', 'CLUSTERED BY', 'DELETE FROM', 'DISTRIBUTE BY', 'FROM', 'GROUP BY', 'HAVING', 'INSERT INTO', 'INSERT', 'LIMIT', 'OPTIONS', 'ORDER BY', 'PARTITION BY', 'PARTITIONED BY', 'RANGE', 'ROWS', 'SELECT', 'SET CURRENT SCHEMA', 'SET SCHEMA', 'SET', 'TBLPROPERTIES', 'UPDATE', 'USING', 'VALUES', 'WHERE', 'WINDOW'];\nvar reservedTopLevelWordsNoIndent = ['EXCEPT ALL', 'EXCEPT', 'INTERSECT ALL', 'INTERSECT', 'UNION ALL', 'UNION'];\nvar reservedNewlineWords = ['AND', 'CREATE OR', 'CREATE', 'ELSE', 'LATERAL VIEW', 'OR', 'OUTER APPLY', 'WHEN', 'XOR', // joins\n'JOIN', 'INNER JOIN', 'LEFT JOIN', 'LEFT OUTER JOIN', 'RIGHT JOIN', 'RIGHT OUTER JOIN', 'FULL JOIN', 'FULL OUTER JOIN', 'CROSS JOIN', 'NATURAL JOIN', // non-standard-joins\n'ANTI JOIN', 'SEMI JOIN', 'LEFT ANTI JOIN', 'LEFT SEMI JOIN', 'RIGHT OUTER JOIN', 'RIGHT SEMI JOIN', 'NATURAL ANTI JOIN', 'NATURAL FULL OUTER JOIN', 'NATURAL INNER JOIN', 'NATURAL LEFT ANTI JOIN', 'NATURAL LEFT OUTER JOIN', 'NATURAL LEFT SEMI JOIN', 'NATURAL OUTER JOIN', 'NATURAL RIGHT OUTER JOIN', 'NATURAL RIGHT SEMI JOIN', 'NATURAL SEMI JOIN'];\n\nvar SparkSqlFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(SparkSqlFormatter, _Formatter);\n\n  var _super = _createSuper(SparkSqlFormatter);\n\n  function SparkSqlFormatter() {\n    _classCallCheck(this, SparkSqlFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SparkSqlFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedWords: reservedWords,\n        reservedTopLevelWords: reservedTopLevelWords,\n        reservedNewlineWords: reservedNewlineWords,\n        reservedTopLevelWordsNoIndent: reservedTopLevelWordsNoIndent,\n        stringTypes: [\"\\\"\\\"\", \"''\", '``', '{}'],\n        openParens: ['(', 'CASE'],\n        closeParens: [')', 'END'],\n        indexedPlaceholderTypes: ['?'],\n        namedPlaceholderTypes: ['$'],\n        lineCommentTypes: ['--'],\n        operators: ['!=', '<=>', '&&', '||', '==']\n      });\n    }\n  }, {\n    key: \"tokenOverride\",\n    value: function tokenOverride(token) {\n      // Fix cases where names are ambiguously keywords or functions\n      if ((0, _token.isWindow)(token)) {\n        var aheadToken = this.tokenLookAhead();\n\n        if (aheadToken && aheadToken.type === _tokenTypes[\"default\"].OPEN_PAREN) {\n          // This is a function call, treat it as a reserved word\n          return {\n            type: _tokenTypes[\"default\"].RESERVED,\n            value: token.value\n          };\n        }\n      } // Fix cases where names are ambiguously keywords or properties\n\n\n      if ((0, _token.isEnd)(token)) {\n        var backToken = this.tokenLookBehind();\n\n        if (backToken && backToken.type === _tokenTypes[\"default\"].OPERATOR && backToken.value === '.') {\n          // This is window().end (or similar) not CASE ... END\n          return {\n            type: _tokenTypes[\"default\"].WORD,\n            value: token.value\n          };\n        }\n      }\n\n      return token;\n    }\n  }]);\n\n  return SparkSqlFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = SparkSqlFormatter;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/sql-formatter/lib/languages/SparkSqlFormatter.js\n");

/***/ }),

/***/ "./node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js":
/*!**************************************************************************!*\
  !*** ./node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../core/Formatter */ \"./node_modules/sql-formatter/lib/core/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../core/Tokenizer */ \"./node_modules/sql-formatter/lib/core/Tokenizer.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// https://jakewheat.github.io/sql-overview/sql-2008-foundation-grammar.html#reserved-word\nvar reservedWords = ['ABS', 'ALL', 'ALLOCATE', 'ALTER', 'AND', 'ANY', 'ARE', 'ARRAY', 'AS', 'ASENSITIVE', 'ASYMMETRIC', 'AT', 'ATOMIC', 'AUTHORIZATION', 'AVG', 'BEGIN', 'BETWEEN', 'BIGINT', 'BINARY', 'BLOB', 'BOOLEAN', 'BOTH', 'BY', 'CALL', 'CALLED', 'CARDINALITY', 'CASCADED', 'CASE', 'CAST', 'CEIL', 'CEILING', 'CHAR', 'CHAR_LENGTH', 'CHARACTER', 'CHARACTER_LENGTH', 'CHECK', 'CLOB', 'CLOSE', 'COALESCE', 'COLLATE', 'COLLECT', 'COLUMN', 'COMMIT', 'CONDITION', 'CONNECT', 'CONSTRAINT', 'CONVERT', 'CORR', 'CORRESPONDING', 'COUNT', 'COVAR_POP', 'COVAR_SAMP', 'CREATE', 'CROSS', 'CUBE', 'CUME_DIST', 'CURRENT', 'CURRENT_CATALOG', 'CURRENT_DATE', 'CURRENT_DEFAULT_TRANSFORM_GROUP', 'CURRENT_PATH', 'CURRENT_ROLE', 'CURRENT_SCHEMA', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_TRANSFORM_GROUP_FOR_TYPE', 'CURRENT_USER', 'CURSOR', 'CYCLE', 'DATE', 'DAY', 'DEALLOCATE', 'DEC', 'DECIMAL', 'DECLARE', 'DEFAULT', 'DELETE', 'DENSE_RANK', 'DEREF', 'DESCRIBE', 'DETERMINISTIC', 'DISCONNECT', 'DISTINCT', 'DOUBLE', 'DROP', 'DYNAMIC', 'EACH', 'ELEMENT', 'ELSE', 'END', 'END-EXEC', 'ESCAPE', 'EVERY', 'EXCEPT', 'EXEC', 'EXECUTE', 'EXISTS', 'EXP', 'EXTERNAL', 'EXTRACT', 'FALSE', 'FETCH', 'FILTER', 'FLOAT', 'FLOOR', 'FOR', 'FOREIGN', 'FREE', 'FROM', 'FULL', 'FUNCTION', 'FUSION', 'GET', 'GLOBAL', 'GRANT', 'GROUP', 'GROUPING', 'HAVING', 'HOLD', 'HOUR', 'IDENTITY', 'IN', 'INDICATOR', 'INNER', 'INOUT', 'INSENSITIVE', 'INSERT', 'INT', 'INTEGER', 'INTERSECT', 'INTERSECTION', 'INTERVAL', 'INTO', 'IS', 'JOIN', 'LANGUAGE', 'LARGE', 'LATERAL', 'LEADING', 'LEFT', 'LIKE', 'LIKE_REGEX', 'LN', 'LOCAL', 'LOCALTIME', 'LOCALTIMESTAMP', 'LOWER', 'MATCH', 'MAX', 'MEMBER', 'MERGE', 'METHOD', 'MIN', 'MINUTE', 'MOD', 'MODIFIES', 'MODULE', 'MONTH', 'MULTISET', 'NATIONAL', 'NATURAL', 'NCHAR', 'NCLOB', 'NEW', 'NO', 'NONE', 'NORMALIZE', 'NOT', 'NULL', 'NULLIF', 'NUMERIC', 'OCTET_LENGTH', 'OCCURRENCES_REGEX', 'OF', 'OLD', 'ON', 'ONLY', 'OPEN', 'OR', 'ORDER', 'OUT', 'OUTER', 'OVER', 'OVERLAPS', 'OVERLAY', 'PARAMETER', 'PARTITION', 'PERCENT_RANK', 'PERCENTILE_CONT', 'PERCENTILE_DISC', 'POSITION', 'POSITION_REGEX', 'POWER', 'PRECISION', 'PREPARE', 'PRIMARY', 'PROCEDURE', 'RANGE', 'RANK', 'READS', 'REAL', 'RECURSIVE', 'REF', 'REFERENCES', 'REFERENCING', 'REGR_AVGX', 'REGR_AVGY', 'REGR_COUNT', 'REGR_INTERCEPT', 'REGR_R2', 'REGR_SLOPE', 'REGR_SXX', 'REGR_SXY', 'REGR_SYY', 'RELEASE', 'RESULT', 'RETURN', 'RETURNS', 'REVOKE', 'RIGHT', 'ROLLBACK', 'ROLLUP', 'ROW', 'ROW_NUMBER', 'ROWS', 'SAVEPOINT', 'SCOPE', 'SCROLL', 'SEARCH', 'SECOND', 'SELECT', 'SENSITIVE', 'SESSION_USER', 'SET', 'SIMILAR', 'SMALLINT', 'SOME', 'SPECIFIC', 'SPECIFICTYPE', 'SQL', 'SQLEXCEPTION', 'SQLSTATE', 'SQLWARNING', 'SQRT', 'START', 'STATIC', 'STDDEV_POP', 'STDDEV_SAMP', 'SUBMULTISET', 'SUBSTRING', 'SUBSTRING_REGEX', 'SUM', 'SYMMETRIC', 'SYSTEM', 'SYSTEM_USER', 'TABLE', 'TABLESAMPLE', 'THEN', 'TIME', 'TIMESTAMP', 'TIMEZONE_HOUR', 'TIMEZONE_MINUTE', 'TO', 'TRAILING', 'TRANSLATE', 'TRANSLATE_REGEX', 'TRANSLATION', 'TREAT', 'TRIGGER', 'TRIM', 'TRUE', 'UESCAPE', 'UNION', 'UNIQUE', 'UNKNOWN', 'UNNEST', 'UPDATE', 'UPPER', 'USER', 'USING', 'VALUE', 'VALUES', 'VAR_POP', 'VAR_SAMP', 'VARBINARY', 'VARCHAR', 'VARYING', 'WHEN', 'WHENEVER', 'WHERE', 'WIDTH_BUCKET', 'WINDOW', 'WITH', 'WITHIN', 'WITHOUT', 'YEAR'];\nvar reservedTopLevelWords = ['ADD', 'ALTER COLUMN', 'ALTER TABLE', 'CASE', 'DELETE FROM', 'END', 'FETCH FIRST', 'FETCH NEXT', 'FETCH PRIOR', 'FETCH LAST', 'FETCH ABSOLUTE', 'FETCH RELATIVE', 'FROM', 'GROUP BY', 'HAVING', 'INSERT INTO', 'LIMIT', 'ORDER BY', 'SELECT', 'SET SCHEMA', 'SET', 'UPDATE', 'VALUES', 'WHERE'];\nvar reservedTopLevelWordsNoIndent = ['INTERSECT', 'INTERSECT ALL', 'INTERSECT DISTINCT', 'UNION', 'UNION ALL', 'UNION DISTINCT', 'EXCEPT', 'EXCEPT ALL', 'EXCEPT DISTINCT'];\nvar reservedNewlineWords = ['AND', 'ELSE', 'OR', 'WHEN', // joins\n'JOIN', 'INNER JOIN', 'LEFT JOIN', 'LEFT OUTER JOIN', 'RIGHT JOIN', 'RIGHT OUTER JOIN', 'FULL JOIN', 'FULL OUTER JOIN', 'CROSS JOIN', 'NATURAL JOIN'];\n\nvar StandardSqlFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(StandardSqlFormatter, _Formatter);\n\n  var _super = _createSuper(StandardSqlFormatter);\n\n  function StandardSqlFormatter() {\n    _classCallCheck(this, StandardSqlFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(StandardSqlFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedWords: reservedWords,\n        reservedTopLevelWords: reservedTopLevelWords,\n        reservedNewlineWords: reservedNewlineWords,\n        reservedTopLevelWordsNoIndent: reservedTopLevelWordsNoIndent,\n        stringTypes: [\"\\\"\\\"\", \"''\"],\n        openParens: ['(', 'CASE'],\n        closeParens: [')', 'END'],\n        indexedPlaceholderTypes: ['?'],\n        namedPlaceholderTypes: [],\n        lineCommentTypes: ['--']\n      });\n    }\n  }]);\n\n  return StandardSqlFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = StandardSqlFormatter;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9TdGFuZGFyZFNxbEZvcm1hdHRlci5qcz8xODQ3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViLHVCQUF1QiwyQkFBMkIsMkVBQTJFLGtDQUFrQyxtQkFBbUIsR0FBRyxFQUFFLE9BQU8sa0NBQWtDLDhIQUE4SCxHQUFHLEVBQUUscUJBQXFCOztBQUV4WDtBQUNBO0FBQ0EsQ0FBQztBQUNEOztBQUVBLHlDQUF5QyxtQkFBTyxDQUFDLDZFQUFtQjs7QUFFcEUsd0NBQXdDLG1CQUFPLENBQUMsNkVBQW1COztBQUVuRSxzQ0FBc0MsdUNBQXVDLGtCQUFrQjs7QUFFL0YsaURBQWlELDBDQUEwQywwREFBMEQsRUFBRTs7QUFFdkosMkNBQTJDLGdCQUFnQixrQkFBa0IsT0FBTywyQkFBMkIsd0RBQXdELGdDQUFnQyx1REFBdUQsMkRBQTJELEVBQUU7O0FBRTNULDZEQUE2RCxzRUFBc0UsOERBQThELG9CQUFvQjs7QUFFck4sMENBQTBDLCtEQUErRCwyRUFBMkUsRUFBRSx5RUFBeUUsZUFBZSxzREFBc0QsRUFBRSxFQUFFLHVEQUF1RDs7QUFFL1gsZ0NBQWdDLDRFQUE0RSxpQkFBaUIsVUFBVSxHQUFHLDhCQUE4Qjs7QUFFeEssZ0NBQWdDLDZEQUE2RCx5Q0FBeUMsOENBQThDLGlDQUFpQyxtREFBbUQseURBQXlELEVBQUUsT0FBTyx1Q0FBdUMsRUFBRSxpREFBaUQsR0FBRzs7QUFFdmEsaURBQWlELDBFQUEwRSxhQUFhLEVBQUUscUNBQXFDOztBQUUvSyx1Q0FBdUMsdUJBQXVCLHVGQUF1RixFQUFFLGFBQWE7O0FBRXBLLHNDQUFzQyx3RUFBd0UsMENBQTBDLDhDQUE4QyxNQUFNLHdFQUF3RSxHQUFHLGFBQWEsRUFBRSxZQUFZLGNBQWMsRUFBRTs7QUFFbFUsNkJBQTZCLGdHQUFnRyxnREFBZ0QsR0FBRywyQkFBMkI7O0FBRTNNO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLENBQUM7O0FBRUQ7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9zcWwtZm9ybWF0dGVyL2xpYi9sYW5ndWFnZXMvU3RhbmRhcmRTcWxGb3JtYXR0ZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07IH0gcmV0dXJuIF90eXBlb2Yob2JqKTsgfVxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSB2b2lkIDA7XG5cbnZhciBfRm9ybWF0dGVyMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uL2NvcmUvRm9ybWF0dGVyXCIpKTtcblxudmFyIF9Ub2tlbml6ZXIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi9jb3JlL1Rva2VuaXplclwiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IFwiZGVmYXVsdFwiOiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XG5cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpOyB9XG5cbmZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBvLl9fcHJvdG9fXyA9IHA7IHJldHVybiBvOyB9OyByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApOyB9XG5cbmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKGNhbGwgJiYgKF90eXBlb2YoY2FsbCkgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH1cblxuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7IGlmIChzZWxmID09PSB2b2lkIDApIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTsgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTsgdHJ5IHsgRGF0ZS5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChEYXRlLCBbXSwgZnVuY3Rpb24gKCkge30pKTsgcmV0dXJuIHRydWU7IH0gY2F0Y2ggKGUpIHsgcmV0dXJuIGZhbHNlOyB9IH1cblxuZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTsgfTsgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTsgfVxuXG4vLyBodHRwczovL2pha2V3aGVhdC5naXRodWIuaW8vc3FsLW92ZXJ2aWV3L3NxbC0yMDA4LWZvdW5kYXRpb24tZ3JhbW1hci5odG1sI3Jlc2VydmVkLXdvcmRcbnZhciByZXNlcnZlZFdvcmRzID0gWydBQlMnLCAnQUxMJywgJ0FMTE9DQVRFJywgJ0FMVEVSJywgJ0FORCcsICdBTlknLCAnQVJFJywgJ0FSUkFZJywgJ0FTJywgJ0FTRU5TSVRJVkUnLCAnQVNZTU1FVFJJQycsICdBVCcsICdBVE9NSUMnLCAnQVVUSE9SSVpBVElPTicsICdBVkcnLCAnQkVHSU4nLCAnQkVUV0VFTicsICdCSUdJTlQnLCAnQklOQVJZJywgJ0JMT0InLCAnQk9PTEVBTicsICdCT1RIJywgJ0JZJywgJ0NBTEwnLCAnQ0FMTEVEJywgJ0NBUkRJTkFMSVRZJywgJ0NBU0NBREVEJywgJ0NBU0UnLCAnQ0FTVCcsICdDRUlMJywgJ0NFSUxJTkcnLCAnQ0hBUicsICdDSEFSX0xFTkdUSCcsICdDSEFSQUNURVInLCAnQ0hBUkFDVEVSX0xFTkdUSCcsICdDSEVDSycsICdDTE9CJywgJ0NMT1NFJywgJ0NPQUxFU0NFJywgJ0NPTExBVEUnLCAnQ09MTEVDVCcsICdDT0xVTU4nLCAnQ09NTUlUJywgJ0NPTkRJVElPTicsICdDT05ORUNUJywgJ0NPTlNUUkFJTlQnLCAnQ09OVkVSVCcsICdDT1JSJywgJ0NPUlJFU1BPTkRJTkcnLCAnQ09VTlQnLCAnQ09WQVJfUE9QJywgJ0NPVkFSX1NBTVAnLCAnQ1JFQVRFJywgJ0NST1NTJywgJ0NVQkUnLCAnQ1VNRV9ESVNUJywgJ0NVUlJFTlQnLCAnQ1VSUkVOVF9DQVRBTE9HJywgJ0NVUlJFTlRfREFURScsICdDVVJSRU5UX0RFRkFVTFRfVFJBTlNGT1JNX0dST1VQJywgJ0NVUlJFTlRfUEFUSCcsICdDVVJSRU5UX1JPTEUnLCAnQ1VSUkVOVF9TQ0hFTUEnLCAnQ1VSUkVOVF9USU1FJywgJ0NVUlJFTlRfVElNRVNUQU1QJywgJ0NVUlJFTlRfVFJBTlNGT1JNX0dST1VQX0ZPUl9UWVBFJywgJ0NVUlJFTlRfVVNFUicsICdDVVJTT1InLCAnQ1lDTEUnLCAnREFURScsICdEQVknLCAnREVBTExPQ0FURScsICdERUMnLCAnREVDSU1BTCcsICdERUNMQVJFJywgJ0RFRkFVTFQnLCAnREVMRVRFJywgJ0RFTlNFX1JBTksnLCAnREVSRUYnLCAnREVTQ1JJQkUnLCAnREVURVJNSU5JU1RJQycsICdESVNDT05ORUNUJywgJ0RJU1RJTkNUJywgJ0RPVUJMRScsICdEUk9QJywgJ0RZTkFNSUMnLCAnRUFDSCcsICdFTEVNRU5UJywgJ0VMU0UnLCAnRU5EJywgJ0VORC1FWEVDJywgJ0VTQ0FQRScsICdFVkVSWScsICdFWENFUFQnLCAnRVhFQycsICdFWEVDVVRFJywgJ0VYSVNUUycsICdFWFAnLCAnRVhURVJOQUwnLCAnRVhUUkFDVCcsICdGQUxTRScsICdGRVRDSCcsICdGSUxURVInLCAnRkxPQVQnLCAnRkxPT1InLCAnRk9SJywgJ0ZPUkVJR04nLCAnRlJFRScsICdGUk9NJywgJ0ZVTEwnLCAnRlVOQ1RJT04nLCAnRlVTSU9OJywgJ0dFVCcsICdHTE9CQUwnLCAnR1JBTlQnLCAnR1JPVVAnLCAnR1JPVVBJTkcnLCAnSEFWSU5HJywgJ0hPTEQnLCAnSE9VUicsICdJREVOVElUWScsICdJTicsICdJTkRJQ0FUT1InLCAnSU5ORVInLCAnSU5PVVQnLCAnSU5TRU5TSVRJVkUnLCAnSU5TRVJUJywgJ0lOVCcsICdJTlRFR0VSJywgJ0lOVEVSU0VDVCcsICdJTlRFUlNFQ1RJT04nLCAnSU5URVJWQUwnLCAnSU5UTycsICdJUycsICdKT0lOJywgJ0xBTkdVQUdFJywgJ0xBUkdFJywgJ0xBVEVSQUwnLCAnTEVBRElORycsICdMRUZUJywgJ0xJS0UnLCAnTElLRV9SRUdFWCcsICdMTicsICdMT0NBTCcsICdMT0NBTFRJTUUnLCAnTE9DQUxUSU1FU1RBTVAnLCAnTE9XRVInLCAnTUFUQ0gnLCAnTUFYJywgJ01FTUJFUicsICdNRVJHRScsICdNRVRIT0QnLCAnTUlOJywgJ01JTlVURScsICdNT0QnLCAnTU9ESUZJRVMnLCAnTU9EVUxFJywgJ01PTlRIJywgJ01VTFRJU0VUJywgJ05BVElPTkFMJywgJ05BVFVSQUwnLCAnTkNIQVInLCAnTkNMT0InLCAnTkVXJywgJ05PJywgJ05PTkUnLCAnTk9STUFMSVpFJywgJ05PVCcsICdOVUxMJywgJ05VTExJRicsICdOVU1FUklDJywgJ09DVEVUX0xFTkdUSCcsICdPQ0NVUlJFTkNFU19SRUdFWCcsICdPRicsICdPTEQnLCAnT04nLCAnT05MWScsICdPUEVOJywgJ09SJywgJ09SREVSJywgJ09VVCcsICdPVVRFUicsICdPVkVSJywgJ09WRVJMQVBTJywgJ09WRVJMQVknLCAnUEFSQU1FVEVSJywgJ1BBUlRJVElPTicsICdQRVJDRU5UX1JBTksnLCAnUEVSQ0VOVElMRV9DT05UJywgJ1BFUkNFTlRJTEVfRElTQycsICdQT1NJVElPTicsICdQT1NJVElPTl9SRUdFWCcsICdQT1dFUicsICdQUkVDSVNJT04nLCAnUFJFUEFSRScsICdQUklNQVJZJywgJ1BST0NFRFVSRScsICdSQU5HRScsICdSQU5LJywgJ1JFQURTJywgJ1JFQUwnLCAnUkVDVVJTSVZFJywgJ1JFRicsICdSRUZFUkVOQ0VTJywgJ1JFRkVSRU5DSU5HJywgJ1JFR1JfQVZHWCcsICdSRUdSX0FWR1knLCAnUkVHUl9DT1VOVCcsICdSRUdSX0lOVEVSQ0VQVCcsICdSRUdSX1IyJywgJ1JFR1JfU0xPUEUnLCAnUkVHUl9TWFgnLCAnUkVHUl9TWFknLCAnUkVHUl9TWVknLCAnUkVMRUFTRScsICdSRVNVTFQnLCAnUkVUVVJOJywgJ1JFVFVSTlMnLCAnUkVWT0tFJywgJ1JJR0hUJywgJ1JPTExCQUNLJywgJ1JPTExVUCcsICdST1cnLCAnUk9XX05VTUJFUicsICdST1dTJywgJ1NBVkVQT0lOVCcsICdTQ09QRScsICdTQ1JPTEwnLCAnU0VBUkNIJywgJ1NFQ09ORCcsICdTRUxFQ1QnLCAnU0VOU0lUSVZFJywgJ1NFU1NJT05fVVNFUicsICdTRVQnLCAnU0lNSUxBUicsICdTTUFMTElOVCcsICdTT01FJywgJ1NQRUNJRklDJywgJ1NQRUNJRklDVFlQRScsICdTUUwnLCAnU1FMRVhDRVBUSU9OJywgJ1NRTFNUQVRFJywgJ1NRTFdBUk5JTkcnLCAnU1FSVCcsICdTVEFSVCcsICdTVEFUSUMnLCAnU1REREVWX1BPUCcsICdTVERERVZfU0FNUCcsICdTVUJNVUxUSVNFVCcsICdTVUJTVFJJTkcnLCAnU1VCU1RSSU5HX1JFR0VYJywgJ1NVTScsICdTWU1NRVRSSUMnLCAnU1lTVEVNJywgJ1NZU1RFTV9VU0VSJywgJ1RBQkxFJywgJ1RBQkxFU0FNUExFJywgJ1RIRU4nLCAnVElNRScsICdUSU1FU1RBTVAnLCAnVElNRVpPTkVfSE9VUicsICdUSU1FWk9ORV9NSU5VVEUnLCAnVE8nLCAnVFJBSUxJTkcnLCAnVFJBTlNMQVRFJywgJ1RSQU5TTEFURV9SRUdFWCcsICdUUkFOU0xBVElPTicsICdUUkVBVCcsICdUUklHR0VSJywgJ1RSSU0nLCAnVFJVRScsICdVRVNDQVBFJywgJ1VOSU9OJywgJ1VOSVFVRScsICdVTktOT1dOJywgJ1VOTkVTVCcsICdVUERBVEUnLCAnVVBQRVInLCAnVVNFUicsICdVU0lORycsICdWQUxVRScsICdWQUxVRVMnLCAnVkFSX1BPUCcsICdWQVJfU0FNUCcsICdWQVJCSU5BUlknLCAnVkFSQ0hBUicsICdWQVJZSU5HJywgJ1dIRU4nLCAnV0hFTkVWRVInLCAnV0hFUkUnLCAnV0lEVEhfQlVDS0VUJywgJ1dJTkRPVycsICdXSVRIJywgJ1dJVEhJTicsICdXSVRIT1VUJywgJ1lFQVInXTtcbnZhciByZXNlcnZlZFRvcExldmVsV29yZHMgPSBbJ0FERCcsICdBTFRFUiBDT0xVTU4nLCAnQUxURVIgVEFCTEUnLCAnQ0FTRScsICdERUxFVEUgRlJPTScsICdFTkQnLCAnRkVUQ0ggRklSU1QnLCAnRkVUQ0ggTkVYVCcsICdGRVRDSCBQUklPUicsICdGRVRDSCBMQVNUJywgJ0ZFVENIIEFCU09MVVRFJywgJ0ZFVENIIFJFTEFUSVZFJywgJ0ZST00nLCAnR1JPVVAgQlknLCAnSEFWSU5HJywgJ0lOU0VSVCBJTlRPJywgJ0xJTUlUJywgJ09SREVSIEJZJywgJ1NFTEVDVCcsICdTRVQgU0NIRU1BJywgJ1NFVCcsICdVUERBVEUnLCAnVkFMVUVTJywgJ1dIRVJFJ107XG52YXIgcmVzZXJ2ZWRUb3BMZXZlbFdvcmRzTm9JbmRlbnQgPSBbJ0lOVEVSU0VDVCcsICdJTlRFUlNFQ1QgQUxMJywgJ0lOVEVSU0VDVCBESVNUSU5DVCcsICdVTklPTicsICdVTklPTiBBTEwnLCAnVU5JT04gRElTVElOQ1QnLCAnRVhDRVBUJywgJ0VYQ0VQVCBBTEwnLCAnRVhDRVBUIERJU1RJTkNUJ107XG52YXIgcmVzZXJ2ZWROZXdsaW5lV29yZHMgPSBbJ0FORCcsICdFTFNFJywgJ09SJywgJ1dIRU4nLCAvLyBqb2luc1xuJ0pPSU4nLCAnSU5ORVIgSk9JTicsICdMRUZUIEpPSU4nLCAnTEVGVCBPVVRFUiBKT0lOJywgJ1JJR0hUIEpPSU4nLCAnUklHSFQgT1VURVIgSk9JTicsICdGVUxMIEpPSU4nLCAnRlVMTCBPVVRFUiBKT0lOJywgJ0NST1NTIEpPSU4nLCAnTkFUVVJBTCBKT0lOJ107XG5cbnZhciBTdGFuZGFyZFNxbEZvcm1hdHRlciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX0Zvcm1hdHRlcikge1xuICBfaW5oZXJpdHMoU3RhbmRhcmRTcWxGb3JtYXR0ZXIsIF9Gb3JtYXR0ZXIpO1xuXG4gIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoU3RhbmRhcmRTcWxGb3JtYXR0ZXIpO1xuXG4gIGZ1bmN0aW9uIFN0YW5kYXJkU3FsRm9ybWF0dGVyKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTdGFuZGFyZFNxbEZvcm1hdHRlcik7XG5cbiAgICByZXR1cm4gX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoU3RhbmRhcmRTcWxGb3JtYXR0ZXIsIFt7XG4gICAga2V5OiBcInRva2VuaXplclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB0b2tlbml6ZXIoKSB7XG4gICAgICByZXR1cm4gbmV3IF9Ub2tlbml6ZXJbXCJkZWZhdWx0XCJdKHtcbiAgICAgICAgcmVzZXJ2ZWRXb3JkczogcmVzZXJ2ZWRXb3JkcyxcbiAgICAgICAgcmVzZXJ2ZWRUb3BMZXZlbFdvcmRzOiByZXNlcnZlZFRvcExldmVsV29yZHMsXG4gICAgICAgIHJlc2VydmVkTmV3bGluZVdvcmRzOiByZXNlcnZlZE5ld2xpbmVXb3JkcyxcbiAgICAgICAgcmVzZXJ2ZWRUb3BMZXZlbFdvcmRzTm9JbmRlbnQ6IHJlc2VydmVkVG9wTGV2ZWxXb3Jkc05vSW5kZW50LFxuICAgICAgICBzdHJpbmdUeXBlczogW1wiXFxcIlxcXCJcIiwgXCInJ1wiXSxcbiAgICAgICAgb3BlblBhcmVuczogWycoJywgJ0NBU0UnXSxcbiAgICAgICAgY2xvc2VQYXJlbnM6IFsnKScsICdFTkQnXSxcbiAgICAgICAgaW5kZXhlZFBsYWNlaG9sZGVyVHlwZXM6IFsnPyddLFxuICAgICAgICBuYW1lZFBsYWNlaG9sZGVyVHlwZXM6IFtdLFxuICAgICAgICBsaW5lQ29tbWVudFR5cGVzOiBbJy0tJ11cbiAgICAgIH0pO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBTdGFuZGFyZFNxbEZvcm1hdHRlcjtcbn0oX0Zvcm1hdHRlcjJbXCJkZWZhdWx0XCJdKTtcblxuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBTdGFuZGFyZFNxbEZvcm1hdHRlcjtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js\n");

/***/ }),

/***/ "./node_modules/sql-formatter/lib/languages/TSqlFormatter.js":
/*!*******************************************************************!*\
  !*** ./node_modules/sql-formatter/lib/languages/TSqlFormatter.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Formatter2 = _interopRequireDefault(__webpack_require__(/*! ../core/Formatter */ \"./node_modules/sql-formatter/lib/core/Formatter.js\"));\n\nvar _Tokenizer = _interopRequireDefault(__webpack_require__(/*! ../core/Tokenizer */ \"./node_modules/sql-formatter/lib/core/Tokenizer.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar reservedWords = ['ADD', 'EXTERNAL', 'PROCEDURE', 'ALL', 'FETCH', 'PUBLIC', 'ALTER', 'FILE', 'RAISERROR', 'AND', 'FILLFACTOR', 'READ', 'ANY', 'FOR', 'READTEXT', 'AS', 'FOREIGN', 'RECONFIGURE', 'ASC', 'FREETEXT', 'REFERENCES', 'AUTHORIZATION', 'FREETEXTTABLE', 'REPLICATION', 'BACKUP', 'FROM', 'RESTORE', 'BEGIN', 'FULL', 'RESTRICT', 'BETWEEN', 'FUNCTION', 'RETURN', 'BREAK', 'GOTO', 'REVERT', 'BROWSE', 'GRANT', 'REVOKE', 'BULK', 'GROUP', 'RIGHT', 'BY', 'HAVING', 'ROLLBACK', 'CASCADE', 'HOLDLOCK', 'ROWCOUNT', 'CASE', 'IDENTITY', 'ROWGUIDCOL', 'CHECK', 'IDENTITY_INSERT', 'RULE', 'CHECKPOINT', 'IDENTITYCOL', 'SAVE', 'CLOSE', 'IF', 'SCHEMA', 'CLUSTERED', 'IN', 'SECURITYAUDIT', 'COALESCE', 'INDEX', 'SELECT', 'COLLATE', 'INNER', 'SEMANTICKEYPHRASETABLE', 'COLUMN', 'INSERT', 'SEMANTICSIMILARITYDETAILSTABLE', 'COMMIT', 'INTERSECT', 'SEMANTICSIMILARITYTABLE', 'COMPUTE', 'INTO', 'SESSION_USER', 'CONSTRAINT', 'IS', 'SET', 'CONTAINS', 'JOIN', 'SETUSER', 'CONTAINSTABLE', 'KEY', 'SHUTDOWN', 'CONTINUE', 'KILL', 'SOME', 'CONVERT', 'LEFT', 'STATISTICS', 'CREATE', 'LIKE', 'SYSTEM_USER', 'CROSS', 'LINENO', 'TABLE', 'CURRENT', 'LOAD', 'TABLESAMPLE', 'CURRENT_DATE', 'MERGE', 'TEXTSIZE', 'CURRENT_TIME', 'NATIONAL', 'THEN', 'CURRENT_TIMESTAMP', 'NOCHECK', 'TO', 'CURRENT_USER', 'NONCLUSTERED', 'TOP', 'CURSOR', 'NOT', 'TRAN', 'DATABASE', 'NULL', 'TRANSACTION', 'DBCC', 'NULLIF', 'TRIGGER', 'DEALLOCATE', 'OF', 'TRUNCATE', 'DECLARE', 'OFF', 'TRY_CONVERT', 'DEFAULT', 'OFFSETS', 'TSEQUAL', 'DELETE', 'ON', 'UNION', 'DENY', 'OPEN', 'UNIQUE', 'DESC', 'OPENDATASOURCE', 'UNPIVOT', 'DISK', 'OPENQUERY', 'UPDATE', 'DISTINCT', 'OPENROWSET', 'UPDATETEXT', 'DISTRIBUTED', 'OPENXML', 'USE', 'DOUBLE', 'OPTION', 'USER', 'DROP', 'OR', 'VALUES', 'DUMP', 'ORDER', 'VARYING', 'ELSE', 'OUTER', 'VIEW', 'END', 'OVER', 'WAITFOR', 'ERRLVL', 'PERCENT', 'WHEN', 'ESCAPE', 'PIVOT', 'WHERE', 'EXCEPT', 'PLAN', 'WHILE', 'EXEC', 'PRECISION', 'WITH', 'EXECUTE', 'PRIMARY', 'WITHIN GROUP', 'EXISTS', 'PRINT', 'WRITETEXT', 'EXIT', 'PROC'];\nvar reservedTopLevelWords = ['ADD', 'ALTER COLUMN', 'ALTER TABLE', 'CASE', 'DELETE FROM', 'END', 'EXCEPT', 'FROM', 'GROUP BY', 'HAVING', 'INSERT INTO', 'INSERT', 'LIMIT', 'ORDER BY', 'SELECT', 'SET CURRENT SCHEMA', 'SET SCHEMA', 'SET', 'UPDATE', 'VALUES', 'WHERE'];\nvar reservedTopLevelWordsNoIndent = ['INTERSECT', 'INTERSECT ALL', 'MINUS', 'UNION', 'UNION ALL'];\nvar reservedNewlineWords = ['AND', 'ELSE', 'OR', 'WHEN', // joins\n'JOIN', 'INNER JOIN', 'LEFT JOIN', 'LEFT OUTER JOIN', 'RIGHT JOIN', 'RIGHT OUTER JOIN', 'FULL JOIN', 'FULL OUTER JOIN', 'CROSS JOIN'];\n\nvar TSqlFormatter = /*#__PURE__*/function (_Formatter) {\n  _inherits(TSqlFormatter, _Formatter);\n\n  var _super = _createSuper(TSqlFormatter);\n\n  function TSqlFormatter() {\n    _classCallCheck(this, TSqlFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TSqlFormatter, [{\n    key: \"tokenizer\",\n    value: function tokenizer() {\n      return new _Tokenizer[\"default\"]({\n        reservedWords: reservedWords,\n        reservedTopLevelWords: reservedTopLevelWords,\n        reservedNewlineWords: reservedNewlineWords,\n        reservedTopLevelWordsNoIndent: reservedTopLevelWordsNoIndent,\n        stringTypes: [\"\\\"\\\"\", \"N''\", \"''\", '[]'],\n        openParens: ['(', 'CASE'],\n        closeParens: [')', 'END'],\n        indexedPlaceholderTypes: [],\n        namedPlaceholderTypes: ['@'],\n        lineCommentTypes: ['--'],\n        specialWordChars: ['#', '@'],\n        operators: ['>=', '<=', '<>', '!=', '!<', '!>', '+=', '-=', '*=', '/=', '%=', '|=', '&=', '^=', '::'] // TODO: Support for money constants\n\n      });\n    }\n  }]);\n\n  return TSqlFormatter;\n}(_Formatter2[\"default\"]);\n\nexports[\"default\"] = TSqlFormatter;\nmodule.exports = exports.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9UU3FsRm9ybWF0dGVyLmpzPzhmNjkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsdUJBQXVCLDJCQUEyQiwyRUFBMkUsa0NBQWtDLG1CQUFtQixHQUFHLEVBQUUsT0FBTyxrQ0FBa0MsOEhBQThILEdBQUcsRUFBRSxxQkFBcUI7O0FBRXhYO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7O0FBRUEseUNBQXlDLG1CQUFPLENBQUMsNkVBQW1COztBQUVwRSx3Q0FBd0MsbUJBQU8sQ0FBQyw2RUFBbUI7O0FBRW5FLHNDQUFzQyx1Q0FBdUMsa0JBQWtCOztBQUUvRixpREFBaUQsMENBQTBDLDBEQUEwRCxFQUFFOztBQUV2SiwyQ0FBMkMsZ0JBQWdCLGtCQUFrQixPQUFPLDJCQUEyQix3REFBd0QsZ0NBQWdDLHVEQUF1RCwyREFBMkQsRUFBRTs7QUFFM1QsNkRBQTZELHNFQUFzRSw4REFBOEQsb0JBQW9COztBQUVyTiwwQ0FBMEMsK0RBQStELDJFQUEyRSxFQUFFLHlFQUF5RSxlQUFlLHNEQUFzRCxFQUFFLEVBQUUsdURBQXVEOztBQUUvWCxnQ0FBZ0MsNEVBQTRFLGlCQUFpQixVQUFVLEdBQUcsOEJBQThCOztBQUV4SyxnQ0FBZ0MsNkRBQTZELHlDQUF5Qyw4Q0FBOEMsaUNBQWlDLG1EQUFtRCx5REFBeUQsRUFBRSxPQUFPLHVDQUF1QyxFQUFFLGlEQUFpRCxHQUFHOztBQUV2YSxpREFBaUQsMEVBQTBFLGFBQWEsRUFBRSxxQ0FBcUM7O0FBRS9LLHVDQUF1Qyx1QkFBdUIsdUZBQXVGLEVBQUUsYUFBYTs7QUFFcEssc0NBQXNDLHdFQUF3RSwwQ0FBMEMsOENBQThDLE1BQU0sd0VBQXdFLEdBQUcsYUFBYSxFQUFFLFlBQVksY0FBYyxFQUFFOztBQUVsVSw2QkFBNkIsZ0dBQWdHLGdEQUFnRCxHQUFHLDJCQUEyQjs7QUFFM007QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPO0FBQ1A7QUFDQSxHQUFHOztBQUVIO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL2xhbmd1YWdlcy9UU3FsRm9ybWF0dGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjsgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiKSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfTsgfSBlbHNlIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9OyB9IHJldHVybiBfdHlwZW9mKG9iaik7IH1cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gdm9pZCAwO1xuXG52YXIgX0Zvcm1hdHRlcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi9jb3JlL0Zvcm1hdHRlclwiKSk7XG5cbnZhciBfVG9rZW5pemVyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vY29yZS9Ub2tlbml6ZXJcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBcImRlZmF1bHRcIjogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfVxuXG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfVxuXG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgby5fX3Byb3RvX18gPSBwOyByZXR1cm4gbzsgfTsgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTsgfVxuXG5mdW5jdGlvbiBfY3JlYXRlU3VwZXIoRGVyaXZlZCkgeyB2YXIgaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKTsgcmV0dXJuIGZ1bmN0aW9uIF9jcmVhdGVTdXBlckludGVybmFsKCkgeyB2YXIgU3VwZXIgPSBfZ2V0UHJvdG90eXBlT2YoRGVyaXZlZCksIHJlc3VsdDsgaWYgKGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QpIHsgdmFyIE5ld1RhcmdldCA9IF9nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3RvcjsgcmVzdWx0ID0gUmVmbGVjdC5jb25zdHJ1Y3QoU3VwZXIsIGFyZ3VtZW50cywgTmV3VGFyZ2V0KTsgfSBlbHNlIHsgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfSByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmVzdWx0KTsgfTsgfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpKSB7IHJldHVybiBjYWxsOyB9IHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpOyB9XG5cbmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gc2VsZjsgfVxuXG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIHRydWU7IHRyeSB7IERhdGUucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoRGF0ZSwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9XG5cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7IH1cblxudmFyIHJlc2VydmVkV29yZHMgPSBbJ0FERCcsICdFWFRFUk5BTCcsICdQUk9DRURVUkUnLCAnQUxMJywgJ0ZFVENIJywgJ1BVQkxJQycsICdBTFRFUicsICdGSUxFJywgJ1JBSVNFUlJPUicsICdBTkQnLCAnRklMTEZBQ1RPUicsICdSRUFEJywgJ0FOWScsICdGT1InLCAnUkVBRFRFWFQnLCAnQVMnLCAnRk9SRUlHTicsICdSRUNPTkZJR1VSRScsICdBU0MnLCAnRlJFRVRFWFQnLCAnUkVGRVJFTkNFUycsICdBVVRIT1JJWkFUSU9OJywgJ0ZSRUVURVhUVEFCTEUnLCAnUkVQTElDQVRJT04nLCAnQkFDS1VQJywgJ0ZST00nLCAnUkVTVE9SRScsICdCRUdJTicsICdGVUxMJywgJ1JFU1RSSUNUJywgJ0JFVFdFRU4nLCAnRlVOQ1RJT04nLCAnUkVUVVJOJywgJ0JSRUFLJywgJ0dPVE8nLCAnUkVWRVJUJywgJ0JST1dTRScsICdHUkFOVCcsICdSRVZPS0UnLCAnQlVMSycsICdHUk9VUCcsICdSSUdIVCcsICdCWScsICdIQVZJTkcnLCAnUk9MTEJBQ0snLCAnQ0FTQ0FERScsICdIT0xETE9DSycsICdST1dDT1VOVCcsICdDQVNFJywgJ0lERU5USVRZJywgJ1JPV0dVSURDT0wnLCAnQ0hFQ0snLCAnSURFTlRJVFlfSU5TRVJUJywgJ1JVTEUnLCAnQ0hFQ0tQT0lOVCcsICdJREVOVElUWUNPTCcsICdTQVZFJywgJ0NMT1NFJywgJ0lGJywgJ1NDSEVNQScsICdDTFVTVEVSRUQnLCAnSU4nLCAnU0VDVVJJVFlBVURJVCcsICdDT0FMRVNDRScsICdJTkRFWCcsICdTRUxFQ1QnLCAnQ09MTEFURScsICdJTk5FUicsICdTRU1BTlRJQ0tFWVBIUkFTRVRBQkxFJywgJ0NPTFVNTicsICdJTlNFUlQnLCAnU0VNQU5USUNTSU1JTEFSSVRZREVUQUlMU1RBQkxFJywgJ0NPTU1JVCcsICdJTlRFUlNFQ1QnLCAnU0VNQU5USUNTSU1JTEFSSVRZVEFCTEUnLCAnQ09NUFVURScsICdJTlRPJywgJ1NFU1NJT05fVVNFUicsICdDT05TVFJBSU5UJywgJ0lTJywgJ1NFVCcsICdDT05UQUlOUycsICdKT0lOJywgJ1NFVFVTRVInLCAnQ09OVEFJTlNUQUJMRScsICdLRVknLCAnU0hVVERPV04nLCAnQ09OVElOVUUnLCAnS0lMTCcsICdTT01FJywgJ0NPTlZFUlQnLCAnTEVGVCcsICdTVEFUSVNUSUNTJywgJ0NSRUFURScsICdMSUtFJywgJ1NZU1RFTV9VU0VSJywgJ0NST1NTJywgJ0xJTkVOTycsICdUQUJMRScsICdDVVJSRU5UJywgJ0xPQUQnLCAnVEFCTEVTQU1QTEUnLCAnQ1VSUkVOVF9EQVRFJywgJ01FUkdFJywgJ1RFWFRTSVpFJywgJ0NVUlJFTlRfVElNRScsICdOQVRJT05BTCcsICdUSEVOJywgJ0NVUlJFTlRfVElNRVNUQU1QJywgJ05PQ0hFQ0snLCAnVE8nLCAnQ1VSUkVOVF9VU0VSJywgJ05PTkNMVVNURVJFRCcsICdUT1AnLCAnQ1VSU09SJywgJ05PVCcsICdUUkFOJywgJ0RBVEFCQVNFJywgJ05VTEwnLCAnVFJBTlNBQ1RJT04nLCAnREJDQycsICdOVUxMSUYnLCAnVFJJR0dFUicsICdERUFMTE9DQVRFJywgJ09GJywgJ1RSVU5DQVRFJywgJ0RFQ0xBUkUnLCAnT0ZGJywgJ1RSWV9DT05WRVJUJywgJ0RFRkFVTFQnLCAnT0ZGU0VUUycsICdUU0VRVUFMJywgJ0RFTEVURScsICdPTicsICdVTklPTicsICdERU5ZJywgJ09QRU4nLCAnVU5JUVVFJywgJ0RFU0MnLCAnT1BFTkRBVEFTT1VSQ0UnLCAnVU5QSVZPVCcsICdESVNLJywgJ09QRU5RVUVSWScsICdVUERBVEUnLCAnRElTVElOQ1QnLCAnT1BFTlJPV1NFVCcsICdVUERBVEVURVhUJywgJ0RJU1RSSUJVVEVEJywgJ09QRU5YTUwnLCAnVVNFJywgJ0RPVUJMRScsICdPUFRJT04nLCAnVVNFUicsICdEUk9QJywgJ09SJywgJ1ZBTFVFUycsICdEVU1QJywgJ09SREVSJywgJ1ZBUllJTkcnLCAnRUxTRScsICdPVVRFUicsICdWSUVXJywgJ0VORCcsICdPVkVSJywgJ1dBSVRGT1InLCAnRVJSTFZMJywgJ1BFUkNFTlQnLCAnV0hFTicsICdFU0NBUEUnLCAnUElWT1QnLCAnV0hFUkUnLCAnRVhDRVBUJywgJ1BMQU4nLCAnV0hJTEUnLCAnRVhFQycsICdQUkVDSVNJT04nLCAnV0lUSCcsICdFWEVDVVRFJywgJ1BSSU1BUlknLCAnV0lUSElOIEdST1VQJywgJ0VYSVNUUycsICdQUklOVCcsICdXUklURVRFWFQnLCAnRVhJVCcsICdQUk9DJ107XG52YXIgcmVzZXJ2ZWRUb3BMZXZlbFdvcmRzID0gWydBREQnLCAnQUxURVIgQ09MVU1OJywgJ0FMVEVSIFRBQkxFJywgJ0NBU0UnLCAnREVMRVRFIEZST00nLCAnRU5EJywgJ0VYQ0VQVCcsICdGUk9NJywgJ0dST1VQIEJZJywgJ0hBVklORycsICdJTlNFUlQgSU5UTycsICdJTlNFUlQnLCAnTElNSVQnLCAnT1JERVIgQlknLCAnU0VMRUNUJywgJ1NFVCBDVVJSRU5UIFNDSEVNQScsICdTRVQgU0NIRU1BJywgJ1NFVCcsICdVUERBVEUnLCAnVkFMVUVTJywgJ1dIRVJFJ107XG52YXIgcmVzZXJ2ZWRUb3BMZXZlbFdvcmRzTm9JbmRlbnQgPSBbJ0lOVEVSU0VDVCcsICdJTlRFUlNFQ1QgQUxMJywgJ01JTlVTJywgJ1VOSU9OJywgJ1VOSU9OIEFMTCddO1xudmFyIHJlc2VydmVkTmV3bGluZVdvcmRzID0gWydBTkQnLCAnRUxTRScsICdPUicsICdXSEVOJywgLy8gam9pbnNcbidKT0lOJywgJ0lOTkVSIEpPSU4nLCAnTEVGVCBKT0lOJywgJ0xFRlQgT1VURVIgSk9JTicsICdSSUdIVCBKT0lOJywgJ1JJR0hUIE9VVEVSIEpPSU4nLCAnRlVMTCBKT0lOJywgJ0ZVTEwgT1VURVIgSk9JTicsICdDUk9TUyBKT0lOJ107XG5cbnZhciBUU3FsRm9ybWF0dGVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfRm9ybWF0dGVyKSB7XG4gIF9pbmhlcml0cyhUU3FsRm9ybWF0dGVyLCBfRm9ybWF0dGVyKTtcblxuICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKFRTcWxGb3JtYXR0ZXIpO1xuXG4gIGZ1bmN0aW9uIFRTcWxGb3JtYXR0ZXIoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFRTcWxGb3JtYXR0ZXIpO1xuXG4gICAgcmV0dXJuIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKFRTcWxGb3JtYXR0ZXIsIFt7XG4gICAga2V5OiBcInRva2VuaXplclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB0b2tlbml6ZXIoKSB7XG4gICAgICByZXR1cm4gbmV3IF9Ub2tlbml6ZXJbXCJkZWZhdWx0XCJdKHtcbiAgICAgICAgcmVzZXJ2ZWRXb3JkczogcmVzZXJ2ZWRXb3JkcyxcbiAgICAgICAgcmVzZXJ2ZWRUb3BMZXZlbFdvcmRzOiByZXNlcnZlZFRvcExldmVsV29yZHMsXG4gICAgICAgIHJlc2VydmVkTmV3bGluZVdvcmRzOiByZXNlcnZlZE5ld2xpbmVXb3JkcyxcbiAgICAgICAgcmVzZXJ2ZWRUb3BMZXZlbFdvcmRzTm9JbmRlbnQ6IHJlc2VydmVkVG9wTGV2ZWxXb3Jkc05vSW5kZW50LFxuICAgICAgICBzdHJpbmdUeXBlczogW1wiXFxcIlxcXCJcIiwgXCJOJydcIiwgXCInJ1wiLCAnW10nXSxcbiAgICAgICAgb3BlblBhcmVuczogWycoJywgJ0NBU0UnXSxcbiAgICAgICAgY2xvc2VQYXJlbnM6IFsnKScsICdFTkQnXSxcbiAgICAgICAgaW5kZXhlZFBsYWNlaG9sZGVyVHlwZXM6IFtdLFxuICAgICAgICBuYW1lZFBsYWNlaG9sZGVyVHlwZXM6IFsnQCddLFxuICAgICAgICBsaW5lQ29tbWVudFR5cGVzOiBbJy0tJ10sXG4gICAgICAgIHNwZWNpYWxXb3JkQ2hhcnM6IFsnIycsICdAJ10sXG4gICAgICAgIG9wZXJhdG9yczogWyc+PScsICc8PScsICc8PicsICchPScsICchPCcsICchPicsICcrPScsICctPScsICcqPScsICcvPScsICclPScsICd8PScsICcmPScsICdePScsICc6OiddIC8vIFRPRE86IFN1cHBvcnQgZm9yIG1vbmV5IGNvbnN0YW50c1xuXG4gICAgICB9KTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gVFNxbEZvcm1hdHRlcjtcbn0oX0Zvcm1hdHRlcjJbXCJkZWZhdWx0XCJdKTtcblxuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBUU3FsRm9ybWF0dGVyO1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/sql-formatter/lib/languages/TSqlFormatter.js\n");

/***/ }),

/***/ "./node_modules/sql-formatter/lib/sqlFormatter.js":
/*!********************************************************!*\
  !*** ./node_modules/sql-formatter/lib/sqlFormatter.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.supportedDialects = exports.format = void 0;\n\nvar _Db2Formatter = _interopRequireDefault(__webpack_require__(/*! ./languages/Db2Formatter */ \"./node_modules/sql-formatter/lib/languages/Db2Formatter.js\"));\n\nvar _MariaDbFormatter = _interopRequireDefault(__webpack_require__(/*! ./languages/MariaDbFormatter */ \"./node_modules/sql-formatter/lib/languages/MariaDbFormatter.js\"));\n\nvar _MySqlFormatter = _interopRequireDefault(__webpack_require__(/*! ./languages/MySqlFormatter */ \"./node_modules/sql-formatter/lib/languages/MySqlFormatter.js\"));\n\nvar _N1qlFormatter = _interopRequireDefault(__webpack_require__(/*! ./languages/N1qlFormatter */ \"./node_modules/sql-formatter/lib/languages/N1qlFormatter.js\"));\n\nvar _PlSqlFormatter = _interopRequireDefault(__webpack_require__(/*! ./languages/PlSqlFormatter */ \"./node_modules/sql-formatter/lib/languages/PlSqlFormatter.js\"));\n\nvar _PostgreSqlFormatter = _interopRequireDefault(__webpack_require__(/*! ./languages/PostgreSqlFormatter */ \"./node_modules/sql-formatter/lib/languages/PostgreSqlFormatter.js\"));\n\nvar _RedshiftFormatter = _interopRequireDefault(__webpack_require__(/*! ./languages/RedshiftFormatter */ \"./node_modules/sql-formatter/lib/languages/RedshiftFormatter.js\"));\n\nvar _SparkSqlFormatter = _interopRequireDefault(__webpack_require__(/*! ./languages/SparkSqlFormatter */ \"./node_modules/sql-formatter/lib/languages/SparkSqlFormatter.js\"));\n\nvar _StandardSqlFormatter = _interopRequireDefault(__webpack_require__(/*! ./languages/StandardSqlFormatter */ \"./node_modules/sql-formatter/lib/languages/StandardSqlFormatter.js\"));\n\nvar _TSqlFormatter = _interopRequireDefault(__webpack_require__(/*! ./languages/TSqlFormatter */ \"./node_modules/sql-formatter/lib/languages/TSqlFormatter.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar formatters = {\n  db2: _Db2Formatter[\"default\"],\n  mariadb: _MariaDbFormatter[\"default\"],\n  mysql: _MySqlFormatter[\"default\"],\n  n1ql: _N1qlFormatter[\"default\"],\n  plsql: _PlSqlFormatter[\"default\"],\n  postgresql: _PostgreSqlFormatter[\"default\"],\n  redshift: _RedshiftFormatter[\"default\"],\n  spark: _SparkSqlFormatter[\"default\"],\n  sql: _StandardSqlFormatter[\"default\"],\n  tsql: _TSqlFormatter[\"default\"]\n};\n/**\n * Format whitespace in a query to make it easier to read.\n *\n * @param {String} query\n * @param {Object} cfg\n *  @param {String} cfg.language Query language, default is Standard SQL\n *  @param {String} cfg.indent Characters used for indentation, default is \"  \" (2 spaces)\n *  @param {Boolean} cfg.uppercase Converts keywords to uppercase\n *  @param {Integer} cfg.linesBetweenQueries How many line breaks between queries\n *  @param {Object} cfg.params Collection of params for placeholder replacement\n * @return {String}\n */\n\nvar format = function format(query) {\n  var cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (typeof query !== 'string') {\n    throw new Error('Invalid query argument. Extected string, instead got ' + _typeof(query));\n  }\n\n  var Formatter = _StandardSqlFormatter[\"default\"];\n\n  if (cfg.language !== undefined) {\n    Formatter = formatters[cfg.language];\n  }\n\n  if (Formatter === undefined) {\n    throw Error(\"Unsupported SQL dialect: \".concat(cfg.language));\n  }\n\n  return new Formatter(cfg).format(query);\n};\n\nexports.format = format;\nvar supportedDialects = Object.keys(formatters);\nexports.supportedDialects = supportedDialects;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL3NxbEZvcm1hdHRlci5qcz9kYjA1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7O0FBRUEsMkNBQTJDLG1CQUFPLENBQUMsNEZBQTBCOztBQUU3RSwrQ0FBK0MsbUJBQU8sQ0FBQyxvR0FBOEI7O0FBRXJGLDZDQUE2QyxtQkFBTyxDQUFDLGdHQUE0Qjs7QUFFakYsNENBQTRDLG1CQUFPLENBQUMsOEZBQTJCOztBQUUvRSw2Q0FBNkMsbUJBQU8sQ0FBQyxnR0FBNEI7O0FBRWpGLGtEQUFrRCxtQkFBTyxDQUFDLDBHQUFpQzs7QUFFM0YsZ0RBQWdELG1CQUFPLENBQUMsc0dBQStCOztBQUV2RixnREFBZ0QsbUJBQU8sQ0FBQyxzR0FBK0I7O0FBRXZGLG1EQUFtRCxtQkFBTyxDQUFDLDRHQUFrQzs7QUFFN0YsNENBQTRDLG1CQUFPLENBQUMsOEZBQTJCOztBQUUvRSxzQ0FBc0MsdUNBQXVDLGtCQUFrQjs7QUFFL0YsdUJBQXVCLDJCQUEyQiwyRUFBMkUsa0NBQWtDLG1CQUFtQixHQUFHLEVBQUUsT0FBTyxrQ0FBa0MsOEhBQThILEdBQUcsRUFBRSxxQkFBcUI7O0FBRXhYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsWUFBWSxPQUFPO0FBQ25CLFlBQVksT0FBTztBQUNuQixZQUFZLFFBQVE7QUFDcEIsWUFBWSxRQUFRO0FBQ3BCLFlBQVksT0FBTztBQUNuQixZQUFZO0FBQ1o7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9zcWwtZm9ybWF0dGVyL2xpYi9zcWxGb3JtYXR0ZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuc3VwcG9ydGVkRGlhbGVjdHMgPSBleHBvcnRzLmZvcm1hdCA9IHZvaWQgMDtcblxudmFyIF9EYjJGb3JtYXR0ZXIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2xhbmd1YWdlcy9EYjJGb3JtYXR0ZXJcIikpO1xuXG52YXIgX01hcmlhRGJGb3JtYXR0ZXIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2xhbmd1YWdlcy9NYXJpYURiRm9ybWF0dGVyXCIpKTtcblxudmFyIF9NeVNxbEZvcm1hdHRlciA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vbGFuZ3VhZ2VzL015U3FsRm9ybWF0dGVyXCIpKTtcblxudmFyIF9OMXFsRm9ybWF0dGVyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9sYW5ndWFnZXMvTjFxbEZvcm1hdHRlclwiKSk7XG5cbnZhciBfUGxTcWxGb3JtYXR0ZXIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2xhbmd1YWdlcy9QbFNxbEZvcm1hdHRlclwiKSk7XG5cbnZhciBfUG9zdGdyZVNxbEZvcm1hdHRlciA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vbGFuZ3VhZ2VzL1Bvc3RncmVTcWxGb3JtYXR0ZXJcIikpO1xuXG52YXIgX1JlZHNoaWZ0Rm9ybWF0dGVyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9sYW5ndWFnZXMvUmVkc2hpZnRGb3JtYXR0ZXJcIikpO1xuXG52YXIgX1NwYXJrU3FsRm9ybWF0dGVyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9sYW5ndWFnZXMvU3BhcmtTcWxGb3JtYXR0ZXJcIikpO1xuXG52YXIgX1N0YW5kYXJkU3FsRm9ybWF0dGVyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9sYW5ndWFnZXMvU3RhbmRhcmRTcWxGb3JtYXR0ZXJcIikpO1xuXG52YXIgX1RTcWxGb3JtYXR0ZXIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2xhbmd1YWdlcy9UU3FsRm9ybWF0dGVyXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgXCJkZWZhdWx0XCI6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjsgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiKSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfTsgfSBlbHNlIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9OyB9IHJldHVybiBfdHlwZW9mKG9iaik7IH1cblxudmFyIGZvcm1hdHRlcnMgPSB7XG4gIGRiMjogX0RiMkZvcm1hdHRlcltcImRlZmF1bHRcIl0sXG4gIG1hcmlhZGI6IF9NYXJpYURiRm9ybWF0dGVyW1wiZGVmYXVsdFwiXSxcbiAgbXlzcWw6IF9NeVNxbEZvcm1hdHRlcltcImRlZmF1bHRcIl0sXG4gIG4xcWw6IF9OMXFsRm9ybWF0dGVyW1wiZGVmYXVsdFwiXSxcbiAgcGxzcWw6IF9QbFNxbEZvcm1hdHRlcltcImRlZmF1bHRcIl0sXG4gIHBvc3RncmVzcWw6IF9Qb3N0Z3JlU3FsRm9ybWF0dGVyW1wiZGVmYXVsdFwiXSxcbiAgcmVkc2hpZnQ6IF9SZWRzaGlmdEZvcm1hdHRlcltcImRlZmF1bHRcIl0sXG4gIHNwYXJrOiBfU3BhcmtTcWxGb3JtYXR0ZXJbXCJkZWZhdWx0XCJdLFxuICBzcWw6IF9TdGFuZGFyZFNxbEZvcm1hdHRlcltcImRlZmF1bHRcIl0sXG4gIHRzcWw6IF9UU3FsRm9ybWF0dGVyW1wiZGVmYXVsdFwiXVxufTtcbi8qKlxuICogRm9ybWF0IHdoaXRlc3BhY2UgaW4gYSBxdWVyeSB0byBtYWtlIGl0IGVhc2llciB0byByZWFkLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBxdWVyeVxuICogQHBhcmFtIHtPYmplY3R9IGNmZ1xuICogIEBwYXJhbSB7U3RyaW5nfSBjZmcubGFuZ3VhZ2UgUXVlcnkgbGFuZ3VhZ2UsIGRlZmF1bHQgaXMgU3RhbmRhcmQgU1FMXG4gKiAgQHBhcmFtIHtTdHJpbmd9IGNmZy5pbmRlbnQgQ2hhcmFjdGVycyB1c2VkIGZvciBpbmRlbnRhdGlvbiwgZGVmYXVsdCBpcyBcIiAgXCIgKDIgc3BhY2VzKVxuICogIEBwYXJhbSB7Qm9vbGVhbn0gY2ZnLnVwcGVyY2FzZSBDb252ZXJ0cyBrZXl3b3JkcyB0byB1cHBlcmNhc2VcbiAqICBAcGFyYW0ge0ludGVnZXJ9IGNmZy5saW5lc0JldHdlZW5RdWVyaWVzIEhvdyBtYW55IGxpbmUgYnJlYWtzIGJldHdlZW4gcXVlcmllc1xuICogIEBwYXJhbSB7T2JqZWN0fSBjZmcucGFyYW1zIENvbGxlY3Rpb24gb2YgcGFyYW1zIGZvciBwbGFjZWhvbGRlciByZXBsYWNlbWVudFxuICogQHJldHVybiB7U3RyaW5nfVxuICovXG5cbnZhciBmb3JtYXQgPSBmdW5jdGlvbiBmb3JtYXQocXVlcnkpIHtcbiAgdmFyIGNmZyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307XG5cbiAgaWYgKHR5cGVvZiBxdWVyeSAhPT0gJ3N0cmluZycpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgcXVlcnkgYXJndW1lbnQuIEV4dGVjdGVkIHN0cmluZywgaW5zdGVhZCBnb3QgJyArIF90eXBlb2YocXVlcnkpKTtcbiAgfVxuXG4gIHZhciBGb3JtYXR0ZXIgPSBfU3RhbmRhcmRTcWxGb3JtYXR0ZXJbXCJkZWZhdWx0XCJdO1xuXG4gIGlmIChjZmcubGFuZ3VhZ2UgIT09IHVuZGVmaW5lZCkge1xuICAgIEZvcm1hdHRlciA9IGZvcm1hdHRlcnNbY2ZnLmxhbmd1YWdlXTtcbiAgfVxuXG4gIGlmIChGb3JtYXR0ZXIgPT09IHVuZGVmaW5lZCkge1xuICAgIHRocm93IEVycm9yKFwiVW5zdXBwb3J0ZWQgU1FMIGRpYWxlY3Q6IFwiLmNvbmNhdChjZmcubGFuZ3VhZ2UpKTtcbiAgfVxuXG4gIHJldHVybiBuZXcgRm9ybWF0dGVyKGNmZykuZm9ybWF0KHF1ZXJ5KTtcbn07XG5cbmV4cG9ydHMuZm9ybWF0ID0gZm9ybWF0O1xudmFyIHN1cHBvcnRlZERpYWxlY3RzID0gT2JqZWN0LmtleXMoZm9ybWF0dGVycyk7XG5leHBvcnRzLnN1cHBvcnRlZERpYWxlY3RzID0gc3VwcG9ydGVkRGlhbGVjdHM7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/sql-formatter/lib/sqlFormatter.js\n");

/***/ }),

/***/ "./node_modules/sql-formatter/lib/utils.js":
/*!*************************************************!*\
  !*** ./node_modules/sql-formatter/lib/utils.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sortByLengthDesc = exports.escapeRegExp = exports.isEmpty = exports.last = exports.trimSpacesEnd = void 0;\n\n// Only removes spaces, not newlines\nvar trimSpacesEnd = function trimSpacesEnd(str) {\n  return str.replace(/[\\t ]+$/, '');\n}; // Last element from array\n\n\nexports.trimSpacesEnd = trimSpacesEnd;\n\nvar last = function last(arr) {\n  return arr[arr.length - 1];\n}; // True array is empty, or it's not an array at all\n\n\nexports.last = last;\n\nvar isEmpty = function isEmpty(arr) {\n  return !Array.isArray(arr) || arr.length === 0;\n}; // Escapes regex special chars\n\n\nexports.isEmpty = isEmpty;\n\nvar escapeRegExp = function escapeRegExp(string) {\n  return string.replace(/[\\$\\(-\\+\\.\\?\\[-\\^\\{-\\}]/g, '\\\\$&');\n}; // Sorts strings by length, so that longer ones are first\n// Also sorts alphabetically after sorting by length.\n\n\nexports.escapeRegExp = escapeRegExp;\n\nvar sortByLengthDesc = function sortByLengthDesc(strings) {\n  return strings.sort(function (a, b) {\n    return b.length - a.length || a.localeCompare(b);\n  });\n};\n\nexports.sortByLengthDesc = sortByLengthDesc;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NxbC1mb3JtYXR0ZXIvbGliL3V0aWxzLmpzP2NkNDkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLENBQUM7QUFDRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxFQUFFOzs7QUFHRjs7QUFFQTtBQUNBO0FBQ0EsRUFBRTs7O0FBR0Y7O0FBRUE7QUFDQTtBQUNBLEVBQUU7OztBQUdGOztBQUVBO0FBQ0EsNENBQTRDLEdBQUc7QUFDL0MsRUFBRTtBQUNGOzs7QUFHQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUEiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3FsLWZvcm1hdHRlci9saWIvdXRpbHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuc29ydEJ5TGVuZ3RoRGVzYyA9IGV4cG9ydHMuZXNjYXBlUmVnRXhwID0gZXhwb3J0cy5pc0VtcHR5ID0gZXhwb3J0cy5sYXN0ID0gZXhwb3J0cy50cmltU3BhY2VzRW5kID0gdm9pZCAwO1xuXG4vLyBPbmx5IHJlbW92ZXMgc3BhY2VzLCBub3QgbmV3bGluZXNcbnZhciB0cmltU3BhY2VzRW5kID0gZnVuY3Rpb24gdHJpbVNwYWNlc0VuZChzdHIpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC9bXFx0IF0rJC8sICcnKTtcbn07IC8vIExhc3QgZWxlbWVudCBmcm9tIGFycmF5XG5cblxuZXhwb3J0cy50cmltU3BhY2VzRW5kID0gdHJpbVNwYWNlc0VuZDtcblxudmFyIGxhc3QgPSBmdW5jdGlvbiBsYXN0KGFycikge1xuICByZXR1cm4gYXJyW2Fyci5sZW5ndGggLSAxXTtcbn07IC8vIFRydWUgYXJyYXkgaXMgZW1wdHksIG9yIGl0J3Mgbm90IGFuIGFycmF5IGF0IGFsbFxuXG5cbmV4cG9ydHMubGFzdCA9IGxhc3Q7XG5cbnZhciBpc0VtcHR5ID0gZnVuY3Rpb24gaXNFbXB0eShhcnIpIHtcbiAgcmV0dXJuICFBcnJheS5pc0FycmF5KGFycikgfHwgYXJyLmxlbmd0aCA9PT0gMDtcbn07IC8vIEVzY2FwZXMgcmVnZXggc3BlY2lhbCBjaGFyc1xuXG5cbmV4cG9ydHMuaXNFbXB0eSA9IGlzRW1wdHk7XG5cbnZhciBlc2NhcGVSZWdFeHAgPSBmdW5jdGlvbiBlc2NhcGVSZWdFeHAoc3RyaW5nKSB7XG4gIHJldHVybiBzdHJpbmcucmVwbGFjZSgvW1xcJFxcKC1cXCtcXC5cXD9cXFstXFxeXFx7LVxcfV0vZywgJ1xcXFwkJicpO1xufTsgLy8gU29ydHMgc3RyaW5ncyBieSBsZW5ndGgsIHNvIHRoYXQgbG9uZ2VyIG9uZXMgYXJlIGZpcnN0XG4vLyBBbHNvIHNvcnRzIGFscGhhYmV0aWNhbGx5IGFmdGVyIHNvcnRpbmcgYnkgbGVuZ3RoLlxuXG5cbmV4cG9ydHMuZXNjYXBlUmVnRXhwID0gZXNjYXBlUmVnRXhwO1xuXG52YXIgc29ydEJ5TGVuZ3RoRGVzYyA9IGZ1bmN0aW9uIHNvcnRCeUxlbmd0aERlc2Moc3RyaW5ncykge1xuICByZXR1cm4gc3RyaW5ncy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgcmV0dXJuIGIubGVuZ3RoIC0gYS5sZW5ndGggfHwgYS5sb2NhbGVDb21wYXJlKGIpO1xuICB9KTtcbn07XG5cbmV4cG9ydHMuc29ydEJ5TGVuZ3RoRGVzYyA9IHNvcnRCeUxlbmd0aERlc2M7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/sql-formatter/lib/utils.js\n");

/***/ }),

/***/ "./src/component/SQLFormmater/index.tsx":
/*!**********************************************!*\
  !*** ./src/component/SQLFormmater/index.tsx ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Users_xuwei_xtestw_cutool_node_modules_next_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty */ \"./node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _material_ui_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @material-ui/core */ \"./node_modules/@material-ui/core/esm/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/head */ \"./node_modules/next/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var codemirror_lib_codemirror_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! codemirror/lib/codemirror.css */ \"./node_modules/codemirror/lib/codemirror.css\");\n/* harmony import */ var codemirror_lib_codemirror_css__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(codemirror_lib_codemirror_css__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var codemirror_theme_material_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! codemirror/theme/material.css */ \"./node_modules/codemirror/theme/material.css\");\n/* harmony import */ var codemirror_theme_material_css__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(codemirror_theme_material_css__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var sql_formatter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! sql-formatter */ \"./node_modules/sql-formatter/lib/sqlFormatter.js\");\n/* harmony import */ var sql_formatter__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(sql_formatter__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dynamic */ \"./node_modules/next/dynamic.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_8__);\n\n\nvar _jsxFileName = \"/Users/xuwei/xtestw/cutool/src/component/SQLFormmater/index.tsx\";\n\n\n // import { UnControlled as UnControlledCodeMirror } from 'react-codemirror2'\n// import * as CodeMirror from 'react-codemirror'\n\n\n\n\n\nconst CodeMirror = next_dynamic__WEBPACK_IMPORTED_MODULE_8___default()(_c = () => __webpack_require__.e(/*! import() */ 1).then(__webpack_require__.t.bind(null, /*! react-codemirror2 */ \"./node_modules/react-codemirror2/index.js\", 7)).then(mod => mod.UnControlled), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [/*require.resolve*/(/*! react-codemirror2 */ \"./node_modules/react-codemirror2/index.js\")],\n    modules: ['react-codemirror2']\n  }\n});\n_c2 = CodeMirror;\n\nclass SQLFormmater extends react__WEBPACK_IMPORTED_MODULE_3___default.a.Component {\n  constructor(props) {\n    super(props);\n\n    Object(_Users_xuwei_xtestw_cutool_node_modules_next_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, \"instance\", null);\n\n    this.state = {\n      value: \"select * from User\",\n      options: {\n        mode: \"text/x-sql\",\n        //实现Java代码高亮\n        // mode : 'sql',\n        indentWithTabs: true,\n        lineNumbers: true,\n        smartIndent: true,\n        theme: 'default',\n        matchBrackets: true,\n        line: true,\n        lineWiseCopyCut: true,\n        readOnly: false,\n        showCursorWhenSelecting: true,\n        extraKeys: {\n          \"Alt\": \"autocomplete\"\n        },\n        styleSelectedText: true\n      }\n    };\n  }\n\n  componentDidMount() {\n    try {\n      __webpack_require__(/*! codemirror/mode/sql/sql */ \"./node_modules/codemirror/mode/sql/sql.js\");\n    } catch (e) {\n      console.error(e);\n    }\n\n    this.setState({\n      value: \"select * from User test\",\n      options: {\n        // mode: {name:\"text/x-sql\"}, //实现Java代码高亮\n        mode: 'text/x-sql',\n        indentWithTabs: true,\n        lineNumbers: true,\n        smartIndent: true,\n        theme: 'default',\n        matchBrackets: true,\n        line: true,\n        lineWiseCopyCut: true,\n        readOnly: false,\n        showCursorWhenSelecting: true,\n        extraKeys: {\n          \"Alt\": \"autocomplete\"\n        },\n        styleSelectedText: true\n      }\n    });\n    this.textChange = this.textChange.bind(this);\n  }\n\n  textChange(e) {\n    let value = Object(sql_formatter__WEBPACK_IMPORTED_MODULE_7__[\"format\"])(e.target.value);\n    this.setState({\n      value: value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__[\"Grid\"], {\n      container: true,\n      spacing: 3,\n      style: {\n        flex: 1\n      },\n      children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(next_head__WEBPACK_IMPORTED_MODULE_4___default.a, {\n        children: [/*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"title\", {\n          children: \"\\u5728\\u7EBFSQL\\u683C\\u5F0F\\u5316\\u5DE5\\u5177\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"meta\", {\n          content: \"\\u5DE5\\u5177,SQL,\\u683C\\u5F0F\\u5316,\\u7A0B\\u5E8F\\u5458,\\u8BBE\\u8BA1\\u5E08,parse\",\n          name: \"keywords\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"meta\", {\n          content: \"\\u5728\\u7EBFJSON\\u89E3\\u6790\\u5DE5\\u5177\",\n          name: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"meta\", {\n          content: \"\\u4E3A\\u5DE5\\u7A0B\\u5E08\\u548C\\u8BBE\\u8BA1\\u5E08\\u63D0\\u4F9B\\u6700\\u65B9\\u4FBF\\u7684\\u5728\\u7EBF\\u5DE5\\u5177, \\u5305\\u62EC SQL \\u683C\\u5F0F\\u5316\\uFF0CURL\\u8F6C\\u6362\",\n          name: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"meta\", {\n          name: \"viewport\",\n          content: \"width=device-width,initial-scale=1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__[\"Grid\"], {\n        item: true,\n        xs: 12,\n        sm: 6,\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"textarea\", {\n          id: \"json-src\",\n          placeholder: \"\\u5728\\u6B64\\u8F93\\u5165mysql\\u5B57\\u7B26\\u4E32...\",\n          style: {\n            width: \"100%\",\n            height: 900\n          },\n          onChange: this.textChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__[\"Grid\"], {\n        item: true,\n        xs: 12,\n        sm: 6,\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          height: 900\n        },\n        children: /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(\"div\", {\n          id: \"sql\",\n          children:  true && /*#__PURE__*/Object(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsxDEV\"])(CodeMirror, {\n            className: \"editor-container\",\n            value: this.state.value,\n            options: // {\n            //     mode: \"text/x-sql\", //\n            //     indentWithTabs: true,\n            //     lineNumbers: true,\n            //     smartIndent: true,\n            //     theme: 'default',\n            //     lineWiseCopyCut: true,\n            //     readOnly: false,\n            //     showCursorWhenSelecting: true,\n            // }\n            this.state.options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (SQLFormmater);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CodeMirror$dynamic\");\n$RefreshReg$(_c2, \"CodeMirror\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/next/dist/compiled/webpack/harmony-module.js */ \"./node_modules/next/dist/compiled/webpack/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/component/SQLFormmater/index.tsx\n");

/***/ })

})